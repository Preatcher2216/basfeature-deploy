[{"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\index.js":"1","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\App.js":"2","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Field\\Field.jsx":"3","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Personal.jsx":"4","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Left-Menu\\LeftMenu.jsx":"5","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Teams\\Teams.jsx":"6","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\Players.jsx":"7","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\PlayerItem\\PlayerItem.jsx":"8","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\PlayerInfo\\PlayerInfo.jsx":"9","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\store.js":"10","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Teams\\Teams-Container.jsx":"11","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\Players-Container.jsx":"12","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Field\\Player-Item\\Player-Item.jsx":"13","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Modal\\Players-choose\\Popup-players-choose.jsx":"14","C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Modal\\Players-Choose\\Popup-Players-Choose.jsx":"15","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\index.js":"16","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\App-Container.js":"17","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\redux-store.ts":"18","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\App.js":"19","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\game-history-reducer.ts":"20","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\player-change-reducer.ts":"21","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\add-team-form-reducer.ts":"22","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\pass-manager-reducer.ts":"23","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\choose-team-reducer.ts":"24","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\game-statistic.ts":"25","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\about-us-reducer.ts":"26","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\backend-statistic.ts":"27","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Authorization\\authorization-reducer.ts":"28","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Personal\\players-reducer.ts":"29","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Login-Page\\Login-Page-Container.tsx":"30","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\NewField.tsx":"31","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Game-Window-Container.tsx":"32","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewMainPage\\MainPersonPage.tsx":"33","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\About-Us\\AboutUs.tsx":"34","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Statistics\\Statistics.tsx":"35","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\API\\API.js":"36","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Personal-Container.jsx":"37","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewMainPage\\Main-Preson-Selectors.js":"38","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Login-Page\\Login-Page.tsx":"39","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Game-Window.tsx":"40","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\History\\History.tsx":"41","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\Navigation\\Navigation.tsx":"42","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\TeamChoose\\TeamChoose.tsx":"43","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\SquardList\\SquardList.tsx":"44","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\Mobile-Footer\\Mobile-Footer.tsx":"45","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\Field\\Field.tsx":"46","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\Mobile-Navigation\\Mobile-Navigation.tsx":"47","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\Footer\\Footer.tsx":"48","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewMainPage\\Popup-Window\\Full-List-Players.tsx":"49","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewMainPage\\Teams-Card\\Teams-Card.tsx":"50","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\About-Us\\TeamMembers\\TeamMembers.tsx":"51","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\About-Us\\HederDescription\\HeaderDescription.tsx":"52","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Statistics\\Statistics-Body\\Statistics-Body.tsx":"53","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Statistics\\Description\\Description.tsx":"54","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Personal.jsx":"55","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Player-Change-Container.tsx":"56","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Game-History\\Game-History-Container.tsx":"57","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\About-Us\\TeamMembers\\Team-Members-Element\\Team-Members-Element.tsx":"58","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Statistics\\Statistics-Body\\Games-Elements\\Games-Elements.tsx":"59","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Loadable-Img\\Loadable-Img.tsx":"60","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Extra\\Footer-Text\\Footer-Text.tsx":"61","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Modal\\Players-Choose\\Popup-Players-Choose.jsx":"62","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Extra\\Navigation-Links\\Navigation-Linls.tsx":"63","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Profile\\Profile-Container.jsx":"64","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Extra\\Footer-Text\\About-Project-Footer-Text.tsx":"65","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Extra\\Footer-Text\\Extra-information.tsx":"66","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\Players-Container.jsx":"67","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Left-Menu\\LeftMenu.jsx":"68","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Teams\\Teams-Container.jsx":"69","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\SquardList\\Enemy-Item\\Enemy-Item.tsx":"70","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\SquardList\\Player-Item\\Player-Item.tsx":"71","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Field\\Statistics\\All-Pass-Statistics.jsx":"72","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\History\\History-Element\\History-Element.tsx":"73","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Field\\FieldContainer.tsx":"74","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Game-History\\Game-History.tsx":"75","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Player-Change.tsx":"76","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Hooks\\use-on-screen\\useOnScreen.ts":"77","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Profile\\Profile.jsx":"78","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Teams\\Teams.jsx":"79","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\Players.jsx":"80","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Game-History\\HistoryItem\\HistoryItem.tsx":"81","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Active-Player-For-Change\\Active-Player-For-Change.tsx":"82","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Field\\Field.jsx":"83","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Player-For-Change\\Player-For-Change.tsx":"84","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Teams\\Add-Team\\AddTeamWindow.jsx":"85","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\PlayerInfo\\PlayerInfo.jsx":"86","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\PlayerItem\\PlayerItem.jsx":"87","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Field\\Player-Item\\Player-Item.jsx":"88","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\index.js":"89","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\App-Container.js":"90","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\redux-store.ts":"91","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\App.js":"92","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\player-change-reducer.ts":"93","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\add-team-form-reducer.ts":"94","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\pass-manager-reducer.ts":"95","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\game-history-reducer.ts":"96","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\about-us-reducer.ts":"97","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\backend-statistic.ts":"98","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\game-statistic.ts":"99","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\choose-team-reducer.ts":"100","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Personal\\players-reducer.ts":"101","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Authorization\\authorization-reducer.ts":"102","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\About-Us\\AboutUs.tsx":"103","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Game-Window-Container.tsx":"104","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Login-Page\\Login-Page-Container.tsx":"105","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\NewField.tsx":"106","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Statistics\\Statistics.tsx":"107","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewMainPage\\MainPersonPage.tsx":"108","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\API\\API.js":"109","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Personal-Container.jsx":"110","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewMainPage\\Main-Preson-Selectors.js":"111","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Login-Page\\Login-Page.tsx":"112","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Game-Window.tsx":"113","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Navigation\\Navigation.tsx":"114","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Footer\\Footer.tsx":"115","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\About-Us\\TeamMembers\\TeamMembers.tsx":"116","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\About-Us\\HederDescription\\HeaderDescription.tsx":"117","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Mobile-Navigation\\Mobile-Navigation.tsx":"118","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Mobile-Footer\\Mobile-Footer.tsx":"119","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\History\\History.tsx":"120","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\SquardList\\SquardList.tsx":"121","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Field\\Field.tsx":"122","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\TeamChoose\\TeamChoose.tsx":"123","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Statistics\\Description\\Description.tsx":"124","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Statistics\\Statistics-Body\\Statistics-Body.tsx":"125","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewMainPage\\Popup-Window\\Full-List-Players.tsx":"126","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewMainPage\\Teams-Card\\Teams-Card.tsx":"127","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Personal.jsx":"128","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Player-Change-Container.tsx":"129","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Statistics\\Statistics-Body\\Games-Elements\\Games-Elements.tsx":"130","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\SquardList\\Player-Item\\Player-Item.tsx":"131","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\SquardList\\Enemy-Item\\Enemy-Item.tsx":"132","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\History\\History-Element\\History-Element.tsx":"133","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\About-Us\\TeamMembers\\Team-Members-Element\\Team-Members-Element.tsx":"134","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Extra\\Footer-Text\\Extra-information.tsx":"135","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Extra\\Footer-Text\\About-Project-Footer-Text.tsx":"136","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Extra\\Navigation-Links\\Navigation-Linls.tsx":"137","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Field\\Statistics\\All-Pass-Statistics.jsx":"138","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Modal\\Players-Choose\\Popup-Players-Choose.jsx":"139","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Profile\\Profile-Container.jsx":"140","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Players\\Players-Container.jsx":"141","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Teams\\Teams-Container.jsx":"142","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Left-Menu\\LeftMenu.jsx":"143","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Loadable-Img\\Loadable-Img.tsx":"144","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Extra\\Footer-Text\\Footer-Text.tsx":"145","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Game-History\\Game-History-Container.tsx":"146","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Field\\FieldContainer.tsx":"147","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Player-Change.tsx":"148","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Hooks\\use-on-screen\\useOnScreen.ts":"149","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Players\\Players.jsx":"150","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Teams\\Teams.jsx":"151","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Game-History\\Game-History.tsx":"152","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Active-Player-For-Change\\Active-Player-For-Change.tsx":"153","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Player-For-Change\\Player-For-Change.tsx":"154","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Field\\Field.jsx":"155","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Game-History\\HistoryItem\\HistoryItem.tsx":"156","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Players\\PlayerInfo\\PlayerInfo.jsx":"157","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Players\\PlayerItem\\PlayerItem.jsx":"158","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Teams\\Add-Team\\AddTeamWindow.jsx":"159","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Field\\Player-Item\\Player-Item.jsx":"160","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Profile\\Profile.jsx":"161","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Field\\My-Elements\\My-Element.tsx":"162","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Field\\Enemy-Elements\\Enemy-Element.tsx":"163"},{"size":803,"mtime":1620975858028,"results":"164","hashOfConfig":"165"},{"size":1247,"mtime":1620895920823,"results":"166","hashOfConfig":"165"},{"size":12108,"mtime":1619343137595,"results":"167","hashOfConfig":"165"},{"size":884,"mtime":1615235963477,"results":"168","hashOfConfig":"165"},{"size":779,"mtime":1615209438816,"results":"169","hashOfConfig":"165"},{"size":993,"mtime":1615670041948,"results":"170","hashOfConfig":"165"},{"size":875,"mtime":1611743053753,"results":"171","hashOfConfig":"165"},{"size":410,"mtime":1611178486170,"results":"172","hashOfConfig":"165"},{"size":435,"mtime":1611178951570,"results":"173","hashOfConfig":"165"},{"size":2989,"mtime":1611609594681,"results":"174","hashOfConfig":"175"},{"size":288,"mtime":1616012747766,"results":"176","hashOfConfig":"165"},{"size":365,"mtime":1616013762612,"results":"177","hashOfConfig":"165"},{"size":1264,"mtime":1612635752484,"results":"178","hashOfConfig":"165"},{"size":543,"mtime":1612083553048,"results":"179","hashOfConfig":"175"},{"size":1484,"mtime":1620557673266,"results":"180","hashOfConfig":"165"},{"size":835,"mtime":1621462645604,"results":"181","hashOfConfig":"182"},{"size":363,"mtime":1621462644835,"results":"183","hashOfConfig":"182"},{"size":2220,"mtime":1621462645608,"results":"184","hashOfConfig":"182"},{"size":1277,"mtime":1621462644837,"results":"185","hashOfConfig":"182"},{"size":1740,"mtime":1621462645607,"results":"186","hashOfConfig":"182"},{"size":1812,"mtime":1621462645609,"results":"187","hashOfConfig":"182"},{"size":9370,"mtime":1621462645606,"results":"188","hashOfConfig":"182"},{"size":8377,"mtime":1621462645608,"results":"189","hashOfConfig":"182"},{"size":7830,"mtime":1621462645607,"results":"190","hashOfConfig":"182"},{"size":10236,"mtime":1621462645608,"results":"191","hashOfConfig":"182"},{"size":2425,"mtime":1621462645606,"results":"192","hashOfConfig":"182"},{"size":3188,"mtime":1621462645606,"results":"193","hashOfConfig":"182"},{"size":4683,"mtime":1621462645605,"results":"194","hashOfConfig":"182"},{"size":1017,"mtime":1621462645609,"results":"195","hashOfConfig":"182"},{"size":563,"mtime":1621463374133,"results":"196","hashOfConfig":"182"},{"size":1007,"mtime":1621462644923,"results":"197","hashOfConfig":"182"},{"size":379,"mtime":1621462644858,"results":"198","hashOfConfig":"182"},{"size":11929,"mtime":1621462644940,"results":"199","hashOfConfig":"182"},{"size":703,"mtime":1621462644838,"results":"200","hashOfConfig":"182"},{"size":665,"mtime":1621462645037,"results":"201","hashOfConfig":"182"},{"size":4285,"mtime":1621462644835,"results":"202","hashOfConfig":"182"},{"size":309,"mtime":1621462644946,"results":"203","hashOfConfig":"182"},{"size":2959,"mtime":1621462644939,"results":"204","hashOfConfig":"182"},{"size":34612,"mtime":1621462644894,"results":"205","hashOfConfig":"182"},{"size":705,"mtime":1621462644861,"results":"206","hashOfConfig":"182"},{"size":4069,"mtime":1621462644922,"results":"207","hashOfConfig":"182"},{"size":883,"mtime":1621462644915,"results":"208","hashOfConfig":"182"},{"size":4741,"mtime":1621462644925,"results":"209","hashOfConfig":"182"},{"size":2789,"mtime":1621462644923,"results":"210","hashOfConfig":"182"},{"size":2035,"mtime":1621462644916,"results":"211","hashOfConfig":"182"},{"size":13231,"mtime":1621462644907,"results":"212","hashOfConfig":"182"},{"size":1028,"mtime":1621462644911,"results":"213","hashOfConfig":"182"},{"size":399,"mtime":1621462644911,"results":"214","hashOfConfig":"182"},{"size":3026,"mtime":1621462644943,"results":"215","hashOfConfig":"182"},{"size":1802,"mtime":1621462644956,"results":"216","hashOfConfig":"182"},{"size":12017,"mtime":1621462644841,"results":"217","hashOfConfig":"182"},{"size":871,"mtime":1621462644839,"results":"218","hashOfConfig":"182"},{"size":2326,"mtime":1621462645038,"results":"219","hashOfConfig":"182"},{"size":980,"mtime":1621462644974,"results":"220","hashOfConfig":"182"},{"size":884,"mtime":1621462644957,"results":"221","hashOfConfig":"182"},{"size":605,"mtime":1621462644875,"results":"222","hashOfConfig":"182"},{"size":450,"mtime":1621462644855,"results":"223","hashOfConfig":"182"},{"size":1606,"mtime":1621462644841,"results":"224","hashOfConfig":"182"},{"size":2016,"mtime":1621462645038,"results":"225","hashOfConfig":"182"},{"size":1256,"mtime":1621463732207,"results":"226","hashOfConfig":"182"},{"size":1574,"mtime":1621462644844,"results":"227","hashOfConfig":"182"},{"size":1484,"mtime":1621462644895,"results":"228","hashOfConfig":"182"},{"size":2792,"mtime":1621462644853,"results":"229","hashOfConfig":"182"},{"size":704,"mtime":1621462644959,"results":"230","hashOfConfig":"182"},{"size":568,"mtime":1621462644841,"results":"231","hashOfConfig":"182"},{"size":538,"mtime":1621462644842,"results":"232","hashOfConfig":"182"},{"size":365,"mtime":1621462644960,"results":"233","hashOfConfig":"182"},{"size":779,"mtime":1621462644945,"results":"234","hashOfConfig":"182"},{"size":288,"mtime":1621462644970,"results":"235","hashOfConfig":"182"},{"size":1616,"mtime":1621462644919,"results":"236","hashOfConfig":"182"},{"size":1556,"mtime":1621462644918,"results":"237","hashOfConfig":"182"},{"size":5314,"mtime":1621462644853,"results":"238","hashOfConfig":"182"},{"size":2533,"mtime":1621462644910,"results":"239","hashOfConfig":"182"},{"size":1288,"mtime":1621462644849,"results":"240","hashOfConfig":"182"},{"size":1036,"mtime":1621462644857,"results":"241","hashOfConfig":"182"},{"size":1554,"mtime":1621462644877,"results":"242","hashOfConfig":"182"},{"size":925,"mtime":1621462644886,"results":"243","hashOfConfig":"182"},{"size":7841,"mtime":1621463655736,"results":"244","hashOfConfig":"182"},{"size":993,"mtime":1621462644974,"results":"245","hashOfConfig":"182"},{"size":875,"mtime":1621462644963,"results":"246","hashOfConfig":"182"},{"size":729,"mtime":1621462644857,"results":"247","hashOfConfig":"182"},{"size":616,"mtime":1621462644860,"results":"248","hashOfConfig":"182"},{"size":12108,"mtime":1621462644850,"results":"249","hashOfConfig":"182"},{"size":635,"mtime":1621462644876,"results":"250","hashOfConfig":"182"},{"size":2324,"mtime":1621462644974,"results":"251","hashOfConfig":"182"},{"size":435,"mtime":1621462644948,"results":"252","hashOfConfig":"182"},{"size":410,"mtime":1621462644948,"results":"253","hashOfConfig":"182"},{"size":1264,"mtime":1621462644852,"results":"254","hashOfConfig":"182"},{"size":835,"mtime":1621517397706,"results":"255","hashOfConfig":"256"},{"size":363,"mtime":1621517396826,"results":"257","hashOfConfig":"256"},{"size":2220,"mtime":1621517397725,"results":"258","hashOfConfig":"256"},{"size":1277,"mtime":1621517396838,"results":"259","hashOfConfig":"256"},{"size":1812,"mtime":1621517397727,"results":"260","hashOfConfig":"256"},{"size":9334,"mtime":1621724355360,"results":"261","hashOfConfig":"256"},{"size":8377,"mtime":1621517397722,"results":"262","hashOfConfig":"256"},{"size":1740,"mtime":1621517397720,"results":"263","hashOfConfig":"256"},{"size":2409,"mtime":1621629640875,"results":"264","hashOfConfig":"256"},{"size":3237,"mtime":1621786240357,"results":"265","hashOfConfig":"256"},{"size":10975,"mtime":1621815143821,"results":"266","hashOfConfig":"256"},{"size":14755,"mtime":1621812646455,"results":"267","hashOfConfig":"256"},{"size":1017,"mtime":1621517397724,"results":"268","hashOfConfig":"256"},{"size":4683,"mtime":1621517397712,"results":"269","hashOfConfig":"256"},{"size":703,"mtime":1621517396843,"results":"270","hashOfConfig":"256"},{"size":379,"mtime":1621517396893,"results":"271","hashOfConfig":"256"},{"size":563,"mtime":1621517396908,"results":"272","hashOfConfig":"256"},{"size":1007,"mtime":1621517396954,"results":"273","hashOfConfig":"256"},{"size":665,"mtime":1621517397089,"results":"274","hashOfConfig":"256"},{"size":11929,"mtime":1621927359767,"results":"275","hashOfConfig":"256"},{"size":4285,"mtime":1621517396823,"results":"276","hashOfConfig":"256"},{"size":309,"mtime":1621517396994,"results":"277","hashOfConfig":"256"},{"size":3213,"mtime":1621808564439,"results":"278","hashOfConfig":"256"},{"size":34612,"mtime":1621517396911,"results":"279","hashOfConfig":"256"},{"size":705,"mtime":1621517396877,"results":"280","hashOfConfig":"256"},{"size":883,"mtime":1621517396947,"results":"281","hashOfConfig":"256"},{"size":399,"mtime":1621517396940,"results":"282","hashOfConfig":"256"},{"size":12048,"mtime":1621543789637,"results":"283","hashOfConfig":"256"},{"size":871,"mtime":1621517396834,"results":"284","hashOfConfig":"256"},{"size":1028,"mtime":1621517396943,"results":"285","hashOfConfig":"256"},{"size":2035,"mtime":1621517396950,"results":"286","hashOfConfig":"256"},{"size":3975,"mtime":1621799188296,"results":"287","hashOfConfig":"256"},{"size":3057,"mtime":1621815386693,"results":"288","hashOfConfig":"256"},{"size":14419,"mtime":1621815161021,"results":"289","hashOfConfig":"256"},{"size":4736,"mtime":1621815116114,"results":"290","hashOfConfig":"256"},{"size":980,"mtime":1621517397088,"results":"291","hashOfConfig":"256"},{"size":2403,"mtime":1621783705054,"results":"292","hashOfConfig":"256"},{"size":3039,"mtime":1621724868071,"results":"293","hashOfConfig":"256"},{"size":1815,"mtime":1621724607096,"results":"294","hashOfConfig":"256"},{"size":884,"mtime":1621517396994,"results":"295","hashOfConfig":"256"},{"size":605,"mtime":1621517396886,"results":"296","hashOfConfig":"256"},{"size":2155,"mtime":1621783932287,"results":"297","hashOfConfig":"256"},{"size":1598,"mtime":1621782164154,"results":"298","hashOfConfig":"256"},{"size":1749,"mtime":1621782164098,"results":"299","hashOfConfig":"256"},{"size":2533,"mtime":1621815095335,"results":"300","hashOfConfig":"256"},{"size":1606,"mtime":1621517396841,"results":"301","hashOfConfig":"256"},{"size":538,"mtime":1621517396854,"results":"302","hashOfConfig":"256"},{"size":676,"mtime":1621813217056,"results":"303","hashOfConfig":"256"},{"size":2792,"mtime":1621517396857,"results":"304","hashOfConfig":"256"},{"size":5314,"mtime":1621517396873,"results":"305","hashOfConfig":"256"},{"size":1484,"mtime":1621517396912,"results":"306","hashOfConfig":"256"},{"size":704,"mtime":1621517397089,"results":"307","hashOfConfig":"256"},{"size":365,"mtime":1621517397001,"results":"308","hashOfConfig":"256"},{"size":288,"mtime":1621517397015,"results":"309","hashOfConfig":"256"},{"size":779,"mtime":1621517397000,"results":"310","hashOfConfig":"256"},{"size":1256,"mtime":1621517396909,"results":"311","hashOfConfig":"256"},{"size":1682,"mtime":1621813217065,"results":"312","hashOfConfig":"256"},{"size":450,"mtime":1621517396875,"results":"313","hashOfConfig":"256"},{"size":1288,"mtime":1621517396864,"results":"314","hashOfConfig":"256"},{"size":1554,"mtime":1621517396897,"results":"315","hashOfConfig":"256"},{"size":925,"mtime":1621517396906,"results":"316","hashOfConfig":"256"},{"size":875,"mtime":1621517397002,"results":"317","hashOfConfig":"256"},{"size":993,"mtime":1621517397016,"results":"318","hashOfConfig":"256"},{"size":1036,"mtime":1621517396876,"results":"319","hashOfConfig":"256"},{"size":616,"mtime":1621517396889,"results":"320","hashOfConfig":"256"},{"size":635,"mtime":1621517396899,"results":"321","hashOfConfig":"256"},{"size":12108,"mtime":1621517396862,"results":"322","hashOfConfig":"256"},{"size":729,"mtime":1621517396887,"results":"323","hashOfConfig":"256"},{"size":435,"mtime":1621517396992,"results":"324","hashOfConfig":"256"},{"size":410,"mtime":1621517397010,"results":"325","hashOfConfig":"256"},{"size":2324,"mtime":1621517397012,"results":"326","hashOfConfig":"256"},{"size":1264,"mtime":1621517396867,"results":"327","hashOfConfig":"256"},{"size":7841,"mtime":1621517397008,"results":"328","hashOfConfig":"256"},{"size":1327,"mtime":1621786719993,"results":"329","hashOfConfig":"256"},{"size":1351,"mtime":1621782164207,"results":"330","hashOfConfig":"256"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},"19aq8mu",{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2j5q9q",{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"367"},"1gzdglz",{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"367"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"374"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"367"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"374"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"374"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"374"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"374"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"374"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"374"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"374"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"374"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"374"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"374"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"374"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"374"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"367"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"367"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"367"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"374"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"374"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"374"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"374"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"374"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"374"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"374"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"374"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"374"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"374"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"374"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"374"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"374"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"374"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"374"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"374"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"367"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"367"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"367"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"367"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"374"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"374"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"374"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"374"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"374"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"367"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"367"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"560"},"mx955x",{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"560"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"565"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"560"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"565"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"565"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"565"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"584","messages":"585","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"586","messages":"587","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"565"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"565"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"565"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"565"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"565"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"565"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"602","messages":"603","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"560"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"560"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"560"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"565"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"565"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"565"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"565"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"565"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"565"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"565"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"631","messages":"632","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"633","messages":"634","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"635","messages":"636","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"565"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"565"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"565"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"565"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"565"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"565"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"659","messages":"660","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"565"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"560"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"560"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"560"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"560"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"565"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"565"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"565"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"565"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"560"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"560"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"565"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"565"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"565"},"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\index.js",[],[],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\App.js",[],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Field\\Field.jsx",[],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Personal.jsx",[],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Left-Menu\\LeftMenu.jsx",[],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Teams\\Teams.jsx",[],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\Players.jsx",[],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\PlayerItem\\PlayerItem.jsx",[],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\PlayerInfo\\PlayerInfo.jsx",[],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\store.js",[],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Teams\\Teams-Container.jsx",[],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\Players-Container.jsx",[],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Field\\Player-Item\\Player-Item.jsx",[],[],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Modal\\Players-choose\\Popup-players-choose.jsx",[],["722","723"],"C:\\Project\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Modal\\Players-Choose\\Popup-Players-Choose.jsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\index.js",["724"],"import React from 'react';\r\nimport {store, persistor} from \"./Redux/redux-store\";\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport styled, {createGlobalStyle} from 'styled-components'\r\nimport AppContainer from \"./App-Container\";\r\nimport {PersistGate} from \"redux-persist/integration/react\"\r\n\r\nconst Global = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: \"Segoe UI\";\r\n\r\n\r\n  }\r\n`\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <PersistGate loading={null} persistor={persistor}>\r\n                <Global/>\r\n                <AppContainer/>\r\n            </PersistGate>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n",["725","726"],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\App-Container.js",["727"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport App from \"./App\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        login: state.auth.authorization\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n\r\n    }\r\n}\r\n\r\nconst AppContainer = connect(mapStateToProps,mapDispatchToProps)(App);\r\nexport default AppContainer;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\redux-store.ts",["728"],"import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport gameHistoryReducer from \"./Redusers/Game-Window/game-history-reducer\";\r\nimport playerChangeReducer from \"./Redusers/Game-Window/player-change-reducer\";\r\nimport playersReducer from \"./Redusers/Personal/players-reducer\";\r\nimport passManagerReducer from \"./Redusers/Game-Window/pass-manager-reducer\";\r\nimport authorizationReducer from \"./Redusers/Authorization/authorization-reducer\";\r\nimport  thunkMiddleware from \"redux-thunk\"\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport {persistStore} from \"redux-persist\"\r\nimport addTeamForm from \"./Redusers/Game-Window/add-team-form-reducer\";\r\nimport chooseTeamReducer from \"./Redusers/Game-Window/choose-team-reducer\";\r\nimport gameStatistic from \"./Redusers/Game-Window/game-statistic\";\r\n\r\nimport {persistReducer} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport aboutUs from \"./Redusers/Game-Window/about-us-reducer\";\r\nimport backendStatistics from \"./Redusers/Game-Window/backend-statistic\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['addTeamForm', 'backendStatistics']\r\n}\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    gameHistory: gameHistoryReducer,\r\n    playerChange: playerChangeReducer,\r\n    players: playersReducer,\r\n    passManager: passManagerReducer,\r\n    auth: authorizationReducer,\r\n    addTeamForm: addTeamForm,\r\n    chooseTeamReducer: chooseTeamReducer,\r\n    gameStatistic: gameStatistic,\r\n    aboutUs: aboutUs,\r\n    backendStatistics: backendStatistics\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n// @ts-ignore\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n//  const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n const store = createStore(persistedReducer, applyMiddleware(thunkMiddleware));\r\n\r\n  const persistor = persistStore(store)\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport {store, persistor};",["729","730"],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\App.js",["731","732","733","734","735"],"import React, {memo} from 'react'\r\nimport './App.css'\r\nimport 'antd/dist/antd.css'\r\nimport {Route} from \"react-router-dom\"\r\nimport GameWindowContainer from \"./Components/Game-Window/Game-Window-Container\"\r\nimport LoginPageContainer from \"./Components/Login-Page/Login-Page-Container\"\r\nimport PersonalContainer from \"./Components/Personal/Personal-Container\"\r\nimport {Button, Layout} from 'antd';\r\nimport {MainPersonPage} from \"./Components/NewMainPage/MainPersonPage\";\r\nimport NewField from \"./Components/NewField/NewField\";\r\nimport AboutUs from \"./Components/About-Us/AboutUs\";\r\nimport Statistics from \"./Components/Statistics/Statistics\";\r\n\r\nconst {Header, Content, Footer} = Layout;\r\n\r\nconst App = (props) => {\r\n    return (\r\n        <>\r\n            <Route path='/game'render={() => <GameWindowContainer/>}/>\r\n            <Route path='/personal' render={() => <PersonalContainer/>}/>\r\n            <Route path='/login' render={() => <LoginPageContainer/>}/>\r\n            <Route exact path='/' render={() => <MainPersonPage/>}/>\r\n            <Route path='/newGame' render={() => <NewField/>}/>\r\n            <Route path='/about_us' render={() => <AboutUs/>}/>\r\n            <Route path='/statistics' render={() => <Statistics/>}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App\r\n","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\game-history-reducer.ts",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\player-change-reducer.ts",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\add-team-form-reducer.ts",["736"],"// import './../../../Components/NewMainPage/MainPersonPage.css'\r\n\r\nconst CHANGE_TEAM_TITLE = 'CHANGE_TEAM_TITLE'\r\nconst CHOOSE_TEAM_BTN_CLICK = 'CHOOSE_TEAM_BTN_CLICK'\r\nconst DESCRIPTION_INPUT = 'DESCRIPTION_INPUT'\r\nconst CREATE_INPUT_ELEMENT = 'CREATE_INPUT_ELEMENT'\r\nconst CHANGE_INPUT_ELEMENT = 'CHANGE_INPUT_ELEMENT'\r\nconst SUBMIT_INPUT_ELEMENT = 'SUBMIT_INPUT_ELEMENT'\r\nconst REMOVE_TEAM_CARD = 'REMOVE_TEAM_CARD'\r\nconst SET_DEFAULT_INPUT_ARR = 'SET_DEFAULT_INPUT_ARR'\r\n\r\n\r\nexport type inputFormArr = {\r\n    type: string\r\n    name: string\r\n    placeholder: string\r\n    className: string\r\n    value: string | undefined\r\n}\r\nexport type AddedPlayers = {\r\n    playerName: string\r\n    playerNumber: string\r\n}\r\nexport type AddedTeams = {\r\n    teamTitle: string\r\n}\r\n\r\nlet initialState = {\r\n    inputNumberPlaceholder: 'N',\r\n    inputNamePlaceholder: 'ФИО',\r\n    inputNumberClassName: 'InputPlayerNumberForm',\r\n    inputNameClassName: 'InputPlayerNameForm',\r\n    inputType: 'text',\r\n    teamTitle: '',\r\n    teamDescription: '',\r\n    isButtonTeamClicked: false,\r\n    isMyTeam: true,\r\n    teamsCount: 0,\r\n    inputFormArr: [\r\n        {\r\n            type: 'number',\r\n            name: 'inputPlayerNumberForm_1',\r\n            placeholder: 'N',\r\n            className: 'InputPlayerNumberForm',\r\n            value: 0,\r\n            isActive: false\r\n        },\r\n        {\r\n            type: 'text',\r\n            name: 'inputPlayerNameForm_1',\r\n            placeholder: 'ФИО',\r\n            className: 'InputPlayerNameForm',\r\n            value: undefined\r\n        },\r\n        {\r\n            type: 'number',\r\n            name: 'inputPlayerNumberForm_2',\r\n            placeholder: 'N',\r\n            className: 'InputPlayerNumberForm',\r\n            value: 0\r\n        },\r\n        {\r\n            type: 'text',\r\n            name: 'inputPlayerNameForm_2',\r\n            placeholder: 'ФИО',\r\n            className: 'InputPlayerNameForm',\r\n            value: undefined\r\n        },\r\n        {\r\n            type: 'number',\r\n            name: 'inputPlayerNumberForm_3',\r\n            placeholder: 'N',\r\n            className: 'InputPlayerNumberForm',\r\n            value: 0\r\n        },\r\n        {\r\n            type: 'text',\r\n            name: 'inputPlayerNameForm_3',\r\n            placeholder: 'ФИО',\r\n            className: 'InputPlayerNameForm',\r\n            value: undefined\r\n        },\r\n        {\r\n            type: 'number',\r\n            name: 'inputPlayerNumberForm_4',\r\n            placeholder: 'N',\r\n            className: 'InputPlayerNumberForm',\r\n            value: 0\r\n        },\r\n        {\r\n            type: 'text',\r\n            name: 'inputPlayerNameForm_4',\r\n            placeholder: 'ФИО',\r\n            className: 'InputPlayerNameForm',\r\n            value: undefined\r\n        },\r\n        {\r\n            type: 'number',\r\n            name: 'inputPlayerNumberForm_5',\r\n            placeholder: 'N',\r\n            className: 'InputPlayerNumberForm',\r\n            value: 0\r\n        },\r\n        {\r\n            type: 'text',\r\n            name: 'inputPlayerNameForm_5',\r\n            placeholder: 'ФИО',\r\n            className: 'InputPlayerNameForm',\r\n            value: undefined\r\n        },\r\n    ] as Array<inputFormArr>,\r\n    addedPlayers: [] as Array<any>,\r\n    addedTeams: [] as Array<AddedTeams>,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nconst addTeamForm = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case CREATE_INPUT_ELEMENT:\r\n            let newInputNumber = {\r\n                type: 'number',\r\n                name: `${state.inputNumberClassName+ '_' + (Math.ceil(state.inputFormArr.length/2)+1)}`,\r\n                placeholder: state.inputNumberPlaceholder,\r\n                className: state.inputNumberClassName,\r\n                value: 0\r\n            }\r\n             let newInputName = {\r\n                 type: state.inputType,\r\n                 name: `${state.inputNameClassName + '_' + (Math.ceil(state.inputFormArr.length / 2) + 1)}`,\r\n                 placeholder: state.inputNamePlaceholder,\r\n                 className: state.inputNameClassName,\r\n                 value: undefined\r\n            }\r\n            return {\r\n                ...state,\r\n                inputFormArr: [...state.inputFormArr, newInputNumber, newInputName] as Array<inputFormArr>\r\n            }\r\n        case CHANGE_INPUT_ELEMENT:\r\n            for(let i = 0; i < state.inputFormArr.length; i++) {\r\n                if(action.inputName === state.inputFormArr[i].name) {\r\n                    state.inputFormArr[i].value = action.inputValue\r\n                    break\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputFormArr: state.inputFormArr\r\n            }\r\n        case SUBMIT_INPUT_ELEMENT:\r\n             ;\r\n            let playerName\r\n            let playerNumber\r\n            type NewTeamType = {\r\n                teamTitle: string\r\n                teamNumbers: Array<any>\r\n                teamPlayers: Array<any>\r\n                isMyTeam: boolean\r\n                isClicked: boolean\r\n            }\r\n            const newTeam: NewTeamType = {\r\n                teamTitle: state.teamTitle,\r\n                teamNumbers: [],\r\n                teamPlayers: [],\r\n                isMyTeam: state.isMyTeam,\r\n                isClicked: false\r\n            }\r\n\r\n            state.teamsCount= action.teamsCount\r\n            for(let i = 0; i< state.inputFormArr.length; i++) {\r\n                // @ts-ignore\r\n                if(Number.isInteger(+state.inputFormArr[i].value)){\r\n                    // @ts-ignore\r\n                    playerNumber = +state.inputFormArr[i].value\r\n                        newTeam.teamNumbers.push(playerNumber)\r\n                }\r\n                else {\r\n                    playerName = state.inputFormArr[i].value\r\n                        newTeam.teamPlayers.push(playerName)\r\n                }\r\n\r\n            }\r\n            return {\r\n                ...state,\r\n                addedTeams: [...state.addedTeams, newTeam],\r\n                teamsCount: state.teamsCount\r\n            }\r\n        case CHANGE_TEAM_TITLE:\r\n            state.teamTitle = action.teamTitle\r\n            return {\r\n                ...state,\r\n                teamTitle: state.teamTitle\r\n            }\r\n        case CHOOSE_TEAM_BTN_CLICK:\r\n            if (action.chosenTeam === 'Моя') {\r\n                state.isMyTeam = true\r\n\r\n            }\r\n            else if (action.chosenTeam === 'Соперников') {\r\n                state.isMyTeam = false\r\n\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isMyTeam: state.isMyTeam,\r\n            }\r\n        case DESCRIPTION_INPUT:\r\n            state.teamDescription = action.descriptionText\r\n            return {\r\n                ...state,\r\n                teamDescription: state.teamDescription\r\n            }\r\n        case REMOVE_TEAM_CARD:\r\n            let buff = state.addedTeams\r\n            for(let i =0; i< state.addedTeams.length; i++) {\r\n                if(action.selectTeamCard === state.addedTeams[i].teamTitle) {\r\n                    buff.splice(i,1)\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                addedTeams: buff\r\n            }\r\n        case SET_DEFAULT_INPUT_ARR:\r\n            let buffInputFormArr = state.inputFormArr.splice(10)\r\n            return {\r\n                ...state,\r\n                inputFormArr: state.inputFormArr\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ChangeTeamTitle = {\r\n    type: typeof CHANGE_TEAM_TITLE\r\n    teamTitle: string\r\n}\r\ntype ChooseTeamBtnClick = {\r\n    type: typeof CHOOSE_TEAM_BTN_CLICK\r\n    chosenTeam: string\r\n}\r\ntype DescriptionInput = {\r\n    type: typeof DESCRIPTION_INPUT\r\n    descriptionText: string\r\n}\r\ntype CreateInputElementType = {\r\n    type: typeof CREATE_INPUT_ELEMENT\r\n}\r\ntype SubmitInputElement = {\r\n    type: typeof SUBMIT_INPUT_ELEMENT\r\n    teamsCount: number\r\n}\r\ntype ChangeInputElementType = {\r\n    type: typeof CHANGE_INPUT_ELEMENT\r\n    inputValue: string\r\n    inputName: string\r\n}\r\ntype RemoveTeamCardType = {\r\n    type: typeof REMOVE_TEAM_CARD\r\n    selectTeamCard: string\r\n}\r\ntype SetDefaultInputArrType = {\r\n    type: typeof SET_DEFAULT_INPUT_ARR\r\n}\r\nexport const changeTeamTitle = (teamTitle: string): ChangeTeamTitle => ({type: CHANGE_TEAM_TITLE, teamTitle: teamTitle})\r\nexport const chooseTeamBtnClick = (chosenTeam: string): ChooseTeamBtnClick => ({type: CHOOSE_TEAM_BTN_CLICK, chosenTeam: chosenTeam})\r\nexport const descriptionInput = (descriptionText: string): DescriptionInput => ({type: DESCRIPTION_INPUT, descriptionText: descriptionText})\r\nexport const createInputElement = (): CreateInputElementType => ({type: CREATE_INPUT_ELEMENT})\r\nexport const changeInputElement = (inputValue: string, inputName: string): ChangeInputElementType => ({type: CHANGE_INPUT_ELEMENT, inputValue: inputValue, inputName: inputName})\r\nexport const submitInputElement = (teamsCount: number): SubmitInputElement => ({type: SUBMIT_INPUT_ELEMENT, teamsCount: teamsCount})\r\nexport const removeTeamCard = (selectTeamCard: string): RemoveTeamCardType => ({type: REMOVE_TEAM_CARD, selectTeamCard: selectTeamCard})\r\nexport const setDefaultInputArr = (): SetDefaultInputArrType => ({type: SET_DEFAULT_INPUT_ARR})\r\n\r\nexport default addTeamForm;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\pass-manager-reducer.ts",["737","738","739"],"const CLICK_ON_FIELD = 'CLICK_ON_FIELD';\r\nconst CLICK_ON_PLAYER = 'CLICK_ON_PLAYER';\r\nconst PASS_COUNT = 'PASS_COUNT';\r\nconst PLAYER_PASS_COUNT = 'PLAYER_PASS_COUNT';\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\ntype allPassType = {\r\n    id: number\r\n    passCount: number\r\n    team: string\r\n}\r\nexport type PiecePassType = {\r\n    id: string\r\n    href: string\r\n    fieldName: string\r\n    resultPass: number\r\n    unResultPass: number\r\n    pass: number\r\n}\r\nexport type ActualTeamType = {\r\n    id: number\r\n    position: number\r\n    number: string\r\n    role: string\r\n    rating: number\r\n    resultPass: number\r\n    unResultPass: number\r\n    pass: number\r\n    isActive: boolean\r\n}\r\n\r\nconst initialState = {\r\n    allPass: [\r\n        {id: 1, passCount: 1, team: 'TeamName'},\r\n    ] as Array<allPassType>,\r\n    piecePass: [\r\n        {\r\n            id: '1', href: '/game/1', fieldName: 'Первый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '2', href: '/game/2', fieldName: 'Второй сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '3', href: '/game/3', fieldName: 'Третий сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '4', href: '/game/4', fieldName: 'Четвертый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '5', href: '/game/5', fieldName: 'Пятый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '6', href: '/game/6', fieldName: 'Шестой сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '7', href: '/game/7', fieldName: 'Седьмой сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '8', href: '/game/8', fieldName: 'Восьмой сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '9', href: '/game/9', fieldName: 'Девятый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '10', href: '/game/10', fieldName: 'Десятый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '11', href: '/game/11', fieldName: 'Одиннадцатый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '12', href: '/game/12', fieldName: 'Двенадцатый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '13', href: '/game/13', fieldName: 'Тринадцатый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '14', href: '/game/14', fieldName: 'Четырнадцатый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n    ] as Array<PiecePassType>,\r\n    actualTeam: [\r\n        {\r\n            id: 1,\r\n            position: 1,\r\n            number: '01',\r\n            role: 'Капитан',\r\n            rating: 5,\r\n            resultPass: 0,\r\n            unResultPass: 0,\r\n            pass: 0,\r\n            isActive: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            position: 2,\r\n            number: '02',\r\n            role: 'Капитан',\r\n            rating: 5,\r\n            resultPass: 0,\r\n            unResultPass: 0,\r\n            pass: 0,\r\n            isActive: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            position: 3,\r\n            number: '03',\r\n            role: 'Капитан',\r\n            rating: 5,\r\n            resultPass: 0,\r\n            unResultPass: 0,\r\n            pass: 0,\r\n            isActive: true,\r\n        },\r\n        {\r\n            id: 4,\r\n            position: 4,\r\n            number: '04',\r\n            role: 'Капитан',\r\n            rating: 5,\r\n            resultPass: 0,\r\n            unResultPass: 0,\r\n            pass: 0,\r\n            isActive: true,\r\n        },\r\n        {\r\n            id: 5,\r\n            position: 5,\r\n            number: '05',\r\n            role: 'Капитан',\r\n            rating: 5,\r\n            resultPass: 0,\r\n            unResultPass: 0,\r\n            pass: 0,\r\n            isActive: true,\r\n        },\r\n    ] as Array<ActualTeamType>,\r\n\r\n    fieldCurrentName: '' as string,\r\n    gamePassCount: 0 as number,\r\n    numberCurrentPlayer: '' as string,\r\n    passCurrentInfo: '' as string,\r\n    activePlayer: [] as Array<any>,\r\n};\r\n\r\n\r\nconst passManagerReducer = (state = initialState, action: any) => {\r\n    const count = 0;\r\n    switch (action.type) {\r\n        case CLICK_ON_FIELD:\r\n            let buffField;\r\n            for (let i = 0; i < state.piecePass.length; i++) {\r\n                if (action.clickedArea === state.piecePass[i].href) {\r\n                    buffField = state.piecePass[i].fieldName;\r\n                    break;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                fieldCurrentName: buffField,\r\n            };\r\n\r\n        case CLICK_ON_PLAYER:\r\n            let buffPlayer;\r\n            let buffPlayerCopy;\r\n            let iCount;\r\n            for (let i = 0; i < state.actualTeam.length; i++) {\r\n                if (action.clickedPlayer === state.actualTeam[i].number) {\r\n                    buffPlayer = state.actualTeam[i].number;\r\n                    buffPlayerCopy = state.actualTeam[i];\r\n                    iCount = i;\r\n                    break;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                numberCurrentPlayer: buffPlayer,\r\n            };\r\n\r\n        case PASS_COUNT:\r\n             ;\r\n            let buffCount;\r\n            let buffPieceCount;\r\n            for (let i = 0; i < state.piecePass.length; i++) {\r\n                if (action.clickedArea === state.piecePass[i].fieldName) {\r\n                    buffCount = state.piecePass[i].pass + 1;\r\n                    state.piecePass[i].pass = buffCount;\r\n                    if (action.piecePass) {\r\n                        buffPieceCount = state.piecePass[i].resultPass + 1;\r\n                        state.piecePass[i].resultPass = buffPieceCount;\r\n                    } else {\r\n                        buffPieceCount = state.piecePass[i].unResultPass + 1;\r\n                        state.piecePass[i].unResultPass = buffPieceCount;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n             ;\r\n\r\n            return {\r\n                ...state,\r\n                gamePassCount: action.allPass,\r\n                piecePass: state.piecePass,\r\n                actualTeam: state.actualTeam,\r\n            };\r\n        case PLAYER_PASS_COUNT:\r\n            let playerPass;\r\n             ;\r\n            for (let i = 0; i < state.actualTeam.length; i++) {\r\n                if (action.playerNumber === state.actualTeam[i].number) {\r\n                    playerPass = state.actualTeam[i].pass + 1;\r\n                    state.actualTeam[i].pass = playerPass;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                actualTeam: state.actualTeam,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ClickLoggerActionType = {\r\n    type: typeof CLICK_ON_FIELD\r\n    clickedArea: string\r\n}\r\ntype PlayerFinderActionType = {\r\n    type: typeof CLICK_ON_PLAYER\r\n    clickedPlayer: string,\r\n}\r\ntype PassCounterActionType = {\r\n    type: typeof PASS_COUNT\r\n    clickedArea: string\r\n    allPass: number\r\n    piecePass: string\r\n}\r\ntype PlayerPassCounterActionType = {\r\n    type: typeof PLAYER_PASS_COUNT\r\n    playerNumber: string\r\n}\r\n\r\nexport const clickLogger = (partFieldName: string): ClickLoggerActionType => ({\r\n    type: CLICK_ON_FIELD, clickedArea: partFieldName,\r\n});\r\nexport const playerFinder = (playerInfo: any): PlayerFinderActionType => ({\r\n    type: CLICK_ON_PLAYER, clickedPlayer: playerInfo,\r\n});\r\nexport const passCounter = (partFieldName: string, pass: any, resultOfPass: any): PassCounterActionType => {\r\n     ;\r\n    return {\r\n        type: PASS_COUNT, clickedArea: partFieldName, allPass: pass, piecePass: resultOfPass,\r\n    };\r\n};\r\nexport const playerPassCounter = (playerInfo: any): PlayerPassCounterActionType => ({\r\n    type: PLAYER_PASS_COUNT, playerNumber: playerInfo,\r\n});\r\n\r\nexport default passManagerReducer;\r\n","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\choose-team-reducer.ts",["740","741"],"const SET_MY_TEAM_VALUE = 'SET_MY_TEAM_VALUE'\r\nconst SET_ENEMY_TEAM_VALUE = 'SET_ENEMY_TEAM_VALUE'\r\nconst SET_MY_TEAM_PLAYERS = 'SET_MY_TEAM_PLAYERS'\r\nconst SET_ENEMY_TEAM_PLAYERS = 'SET_ENEMY_TEAM_PLAYERS'\r\nconst GAME_IS_START = 'GAME_IS_START'\r\nconst SET_TEAM_CARD_CHOOSE = 'SET_TEAM_CARD_CHOOSE'\r\nconst SET_CHOSEN_PLAYER = 'SET_CHOSEN_PLAYER'\r\nconst SET_INDEX_OF_CLICKED_PLAYER = 'SET_INDEX_OF_CLICKED_PLAYER'\r\nconst SET_INDEX_OF_CLICKED_ENEMY_PLAYER = 'SET_INDEX_OF_CLICKED_ENEMY_PLAYER'\r\nconst SET_ACTIVE_MY_PLAYERS_FOR_GAME = 'SET_ACTIVE_MY_PLAYERS_FOR_GAME'\r\nconst SET_ACTIVE_ENEMY_PLAYERS_FOR_GAME = 'SET_ACTIVE_ENEMY_PLAYERS_FOR_GAME'\r\nconst CLEAR_ACTIVE_MY_PLAYERS_FOR_GAME = 'CLEAR_ACTIVE_MY_PLAYERS_FOR_GAME'\r\nconst CLEAR_ACTIVE_ENEMY_PLAYERS_FOR_GAME = 'CLEAR_ACTIVE_ENEMY_PLAYERS_FOR_GAME'\r\n\r\nlet initialState = {\r\n    selectMyTeam: [] as Array<any>,\r\n    selectMyTeamTitle: null as any,\r\n    selectEnemyTeam: [] as Array<any>,\r\n    selectEnemyTeamTitle: null as any,\r\n    gameIsStarted: false,\r\n    gameIsFinish: false,\r\n    arrayOfMyPlayers: [] as Array<any>,\r\n    arrayOfEnemyPlayers: [] as Array<any>,\r\n    chosenTeamCard: '',\r\n    selectPlayer: 0,\r\n    indexArrForGame: [] as any,\r\n    indexArrEnemyForGame: [] as any,\r\n    finalMyPlayersForGame: [] as any,\r\n    finalEnemyPlayersForGame: [] as any\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst chooseTeamReducer = (state = initialState, action: any): InitialStateType => {\r\n     \r\n    switch (action.type) {\r\n        case SET_MY_TEAM_VALUE:\r\n            return {\r\n                ...state,\r\n                selectMyTeam: action.myTeam,\r\n                selectMyTeamTitle: action.myTeamTitle\r\n            }\r\n        case SET_ENEMY_TEAM_VALUE:\r\n            return {\r\n                ...state,\r\n                selectEnemyTeam: action.enemyTeam,\r\n                selectEnemyTeamTitle: action.enemyTeamTitle\r\n            }\r\n        case SET_MY_TEAM_PLAYERS:\r\n            return {\r\n                ...state,\r\n                arrayOfMyPlayers: action.myTeamPlayersArr\r\n            }\r\n        case SET_ENEMY_TEAM_PLAYERS:\r\n            return {\r\n                ...state,\r\n                arrayOfEnemyPlayers: action.enemyTeamPlayersArr\r\n            }\r\n        case GAME_IS_START:\r\n            return {\r\n                ...state,\r\n                gameIsStarted: action.isStart\r\n            }\r\n        case SET_TEAM_CARD_CHOOSE:\r\n            return {\r\n                ...state,\r\n                chosenTeamCard: action.selectTeamCard\r\n            }\r\n        case SET_INDEX_OF_CLICKED_PLAYER:\r\n            if (state.indexArrForGame.includes(action.playerID)) {\r\n                let indexID = state.indexArrForGame.indexOf(action.playerID)\r\n                state.indexArrForGame.splice(indexID, 1)\r\n            } else {\r\n                state.indexArrForGame.push(action.playerID)\r\n            }\r\n            return {\r\n                ...state,\r\n                indexArrForGame: state.indexArrForGame\r\n            }\r\n        case SET_INDEX_OF_CLICKED_ENEMY_PLAYER:\r\n            if (state.indexArrEnemyForGame.includes(action.playerID)) {\r\n                let indexID = state.indexArrEnemyForGame.indexOf(action.playerID)\r\n                state.indexArrEnemyForGame.splice(indexID, 1)\r\n            } else {\r\n                state.indexArrEnemyForGame.push(action.playerID)\r\n            }\r\n            return {\r\n                ...state,\r\n                indexArrEnemyForGame: state.indexArrEnemyForGame\r\n            }\r\n        case SET_ACTIVE_MY_PLAYERS_FOR_GAME:\r\n             \r\n            for (let i = 0; i < state.arrayOfMyPlayers.length; i++) {\r\n                for (let j = 0; j < state.arrayOfMyPlayers.length; j++) {\r\n                    if (state.arrayOfMyPlayers[i].props.id === state.indexArrForGame[j]) {\r\n                        state.finalMyPlayersForGame.push(state.arrayOfMyPlayers[i])\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                finalMyPlayersForGame: state.finalMyPlayersForGame.sort((a: number, b: number) => a - b)\r\n            }\r\n        case SET_ACTIVE_ENEMY_PLAYERS_FOR_GAME:\r\n             \r\n            for (let i = 0; i < state.arrayOfEnemyPlayers.length; i++) {\r\n                for (let j = 0; j < state.arrayOfEnemyPlayers.length; j++) {\r\n                    if (state.arrayOfEnemyPlayers[i].props.id === state.indexArrEnemyForGame[j]) {\r\n                        state.finalEnemyPlayersForGame.push(state.arrayOfEnemyPlayers[i])\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                finalEnemyPlayersForGame: state.finalEnemyPlayersForGame.sort((a: number, b: number) => a - b)\r\n            }\r\n        case CLEAR_ACTIVE_MY_PLAYERS_FOR_GAME:\r\n            let finalMyPlayersForGameBuffArr = state.finalMyPlayersForGame\r\n            let indexArrForGameBuffArr = state.indexArrForGame\r\n            finalMyPlayersForGameBuffArr.splice(0, state.finalMyPlayersForGame.length)\r\n            indexArrForGameBuffArr.splice(0, state.indexArrForGame.length)\r\n            return {\r\n                ...state,\r\n                finalMyPlayersForGame: state.finalMyPlayersForGame,\r\n                indexArrForGame: state.indexArrForGame\r\n            }\r\n        case CLEAR_ACTIVE_ENEMY_PLAYERS_FOR_GAME:\r\n            let finalEnemyPlayersForGameBuffArr = state.finalEnemyPlayersForGame\r\n            let indexArrEnemyForGameBuffArr = state.indexArrEnemyForGame\r\n            finalEnemyPlayersForGameBuffArr.splice(0, state.finalEnemyPlayersForGame.length)\r\n            indexArrEnemyForGameBuffArr.splice(0, state.indexArrEnemyForGame.length)\r\n            return {\r\n                ...state,\r\n                finalEnemyPlayersForGame: state.finalEnemyPlayersForGame,\r\n                indexArrEnemyForGame: state.indexArrEnemyForGame\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SetMyTeamValueType = {\r\n    type: typeof SET_MY_TEAM_VALUE\r\n    myTeam: Array<any>\r\n}\r\ntype SetEnemyTeamValueType = {\r\n    type: typeof SET_ENEMY_TEAM_VALUE\r\n    enemyTeam: Array<any>\r\n}\r\n\r\nexport const setMyTeamValue = (selectMyTeam: any, selectMyTeamTitle: any) => ({\r\n    type: SET_MY_TEAM_VALUE, myTeam: selectMyTeam, myTeamTitle: selectMyTeamTitle\r\n})\r\nexport const setEnemyTeamValue = (selectEnemyTeam: any, selectEnemyTeamTitle: any) => ({\r\n    type: SET_ENEMY_TEAM_VALUE, enemyTeam: selectEnemyTeam, enemyTeamTitle: selectEnemyTeamTitle\r\n})\r\nexport const setMyTeamPlayers = (myTeamPlayersArr: any) => ({\r\n    type: SET_MY_TEAM_PLAYERS, myTeamPlayersArr: myTeamPlayersArr\r\n})\r\nexport const setEnemyTeamPlayers = (enemyTeamPlayersArr: any) => ({\r\n    type: SET_ENEMY_TEAM_PLAYERS, enemyTeamPlayersArr: enemyTeamPlayersArr\r\n})\r\nexport const gameIsStart = (gameIsStart: boolean) => ({\r\n    type: GAME_IS_START, isStart: gameIsStart\r\n})\r\nexport const setTeamCardChoose = (selectTeamCard: string) => ({\r\n    type: SET_TEAM_CARD_CHOOSE, selectTeamCard: selectTeamCard\r\n})\r\nexport const setActivePlayer = (playerID: number, isSelect: boolean) => ({\r\n    type: SET_CHOSEN_PLAYER, playerID: playerID, isSelect: isSelect\r\n})\r\nexport const setIndexOfClickedPlayer = (playerID: number) => ({type: SET_INDEX_OF_CLICKED_PLAYER, playerID: playerID})\r\nexport const setIndexOfClickedEnemyPlayer = (playerID: number) => ({type: SET_INDEX_OF_CLICKED_ENEMY_PLAYER, playerID: playerID})\r\nexport const setActiveMyPlayersForGame = () => ({type: SET_ACTIVE_MY_PLAYERS_FOR_GAME})\r\nexport const setActiveEnemyPlayersForGame = () => ({type: SET_ACTIVE_ENEMY_PLAYERS_FOR_GAME})\r\nexport const clearActiveMyPlayersForGame = () => ({type: CLEAR_ACTIVE_MY_PLAYERS_FOR_GAME})\r\nexport const clearActiveEnemyPlayersForGame = () => ({type: CLEAR_ACTIVE_ENEMY_PLAYERS_FOR_GAME})\r\n\r\n\r\nexport default chooseTeamReducer;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\game-statistic.ts",["742","743"],"import {addGame, getListOfGames} from \"../../../API/API\";\r\n\r\nconst CREATE_STATISTIC_FOR_MY_TEAM = 'CREATE_STATISTIC_FOR_MY_TEAM'\r\nconst CREATE_STATISTIC_FOR_ENEMY_TEAM = 'CREATE_STATISTIC_FOR_ENEMY_TEAM'\r\nconst SET_CHOSEN_PLAYER = 'SET_CHOSEN_PLAYER'\r\nconst SET_FIELD_PART = 'SET_FIELD_PART'\r\nconst SET_GAME_ACTION = 'SET_GAME_ACTION'\r\nconst ADD_THROWS = 'ADD_THROWS'\r\nconst CREATE_STATISTIC = 'CREATE_STATISTIC'\r\nconst REMOVE_HISTORY_ELEMENT = 'REMOVE_HISTORY_ELEMENT'\r\nconst CLEAR_HISTORY = 'CLEAR_HISTORY'\r\nconst CLEAR_FIELD_PIECE = 'CLEAR_FIELD_PIECE'\r\nconst CLEAR_THROWS = 'CLEAR_THROWS'\r\nconst ADD_ACTION_TO_FIELD_PIECE = 'ADD_ACTION_TO_FIELD_PIECE'\r\nconst SET_SQUARD_ACTIVE = 'SET_SQUARD_ACTIVE'\r\n\r\ntype allPassType = {\r\n    playerNumber: number\r\n    action: boolean\r\n    sector: number\r\n}\r\nexport type PiecePassType = {\r\n    id: string\r\n    href: string\r\n    fieldName: string\r\n    resultPass: number\r\n    unResultPass: number\r\n    pass: number\r\n}\r\n\r\n\r\nlet initialState = {\r\n    piecePass: [\r\n        {\r\n            id: '1', href: '/newGame/1', fieldName: 'Первый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '2', href: '/newGame/2', fieldName: 'Второй сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '3', href: '/newGame/3', fieldName: 'Третий сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '4', href: '/newGame/4', fieldName: 'Четвертый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '5', href: '/newGame/5', fieldName: 'Пятый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '6', href: '/newGame/6', fieldName: 'Шестой сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '7', href: '/newGame/7', fieldName: 'Седьмой сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '8', href: '/newGame/8', fieldName: 'Восьмой сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '9', href: '/newGame/9', fieldName: 'Девятый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '10', href: '/newGame/10', fieldName: 'Десятый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '11', href: '/newGame/11', fieldName: 'Одиннадцатый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '12', href: '/newGame/12', fieldName: 'Двенадцатый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '13', href: '/newGame/13', fieldName: 'Тринадцатый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n        {\r\n            id: '14', href: '/newGame/14', fieldName: 'Четырнадцатый сектор', resultPass: 0, unResultPass: 0, pass: 0,\r\n        },\r\n    ] as Array<PiecePassType>,\r\n    allPass: [] as Array<allPassType>,\r\n    myPlayerTeam: [] as Array<any>,\r\n    myPlayerNamesTeam: [] as Array<any>,\r\n    enemyPlayerTeam: [] as Array<any>,\r\n    enemyPlayerNamesTeam: [] as Array<any>,\r\n    throws: [] as Array<any>,\r\n    history: [] as Array<any>,\r\n    gamePassCount: 0 as number,\r\n    numberCurrentPlayer: '' as string,\r\n    passCurrentInfo: '' as string,\r\n    selectPlayer: 0,\r\n    selectFieldPart: 0,\r\n    selectAction: '',\r\n    actionCounter: 0,\r\n    squadActive: false,\r\n\r\n\r\n    deleteAction: '',\r\n    deletePlayerNumber: 0,\r\n    deleteSector: 0\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst gameStatistic = (state = initialState, action: any): InitialStateType => {\r\n     \r\n    switch (action.type) {\r\n        case CREATE_STATISTIC_FOR_MY_TEAM:\r\n            let count = 0\r\n            let objectArray = action.myTeamArr.map((el: any, index: any) => {\r\n                return {\r\n                    id: count++,\r\n                    number: el,\r\n                    // first_name: action.teamNames[index],\r\n                    full_name: action.teamNames[index],\r\n                    team: 1\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                myPlayerTeam: objectArray\r\n            }\r\n        case CREATE_STATISTIC_FOR_ENEMY_TEAM:\r\n            let enemyCount = 0\r\n            let objectEnemyArray = action.enemyTeamArr.map((el: any, index: any) => {\r\n                return {\r\n                    id: enemyCount++,\r\n                    number: el,\r\n                    full_name: action.teamNames[index],\r\n                    // last_name: action.teamNames[index],\r\n                    team: 2\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                enemyPlayerTeam: objectEnemyArray\r\n            }\r\n        case SET_CHOSEN_PLAYER:\r\n            return {\r\n                ...state,\r\n                selectPlayer: action.playerID\r\n            }\r\n        case SET_FIELD_PART:\r\n            return {\r\n                ...state,\r\n                selectFieldPart: action.fieldPart\r\n            }\r\n        case SET_GAME_ACTION:\r\n            return {\r\n                ...state,\r\n                selectAction: action.gameAction,\r\n                actionCounter: state.actionCounter + 1\r\n            }\r\n        case ADD_THROWS:\r\n            let newObj = {\r\n                id: state.actionCounter,\r\n                sector: +state.selectFieldPart,\r\n                player: +state.selectPlayer,\r\n                throw: state.selectAction\r\n            }\r\n            return {\r\n                ...state,\r\n                throws: [...state.throws, newObj]\r\n            }\r\n        case CREATE_STATISTIC:\r\n            let statisticObj = {\r\n                id: state.actionCounter,\r\n                sector: +state.selectFieldPart,\r\n                playerNumber: +state.selectPlayer,\r\n                action: state.selectAction,\r\n                name: action.playerName,\r\n                team: action.playerTeam\r\n            }\r\n            return {\r\n                ...state,\r\n                history: [statisticObj ,...state.history]\r\n            }\r\n        case REMOVE_HISTORY_ELEMENT:\r\n             \r\n            let buffArr = state.history\r\n            for (let i = 0; i < state.history.length; i++) {\r\n                if (state.history[i].sector === +action.sector && state.history[i].playerNumber === +action.playerNumber && state.history[i].action === action.action)\r\n                    buffArr.splice(i, 1)\r\n            }\r\n            return {\r\n                ...state,\r\n                history: state.history,\r\n                deleteAction: action.action,\r\n                deletePlayerNumber: action.playerNumberm,\r\n                deleteSector: action.sector\r\n            }\r\n        case CLEAR_HISTORY:\r\n            let historyBuffArr = state.history\r\n            historyBuffArr.splice(0, historyBuffArr.length)\r\n            return {\r\n                ...state,\r\n                history: state.history\r\n            }\r\n        case CLEAR_FIELD_PIECE:\r\n            for(let i=0; i < state.piecePass.length; i++) {\r\n                state.piecePass[i].unResultPass =0\r\n                state.piecePass[i].resultPass =0\r\n                state.piecePass[i].pass =0\r\n            }\r\n            return {\r\n                ...state,\r\n                piecePass: state.piecePass\r\n            }\r\n        case CLEAR_THROWS:\r\n            let throwsBuffArr = state.throws\r\n            throwsBuffArr.splice(0, throwsBuffArr.length)\r\n            return {\r\n                ...state,\r\n                throws: state.throws\r\n            }\r\n        case ADD_ACTION_TO_FIELD_PIECE:\r\n            for (let i = 0; i < state.piecePass.length; i++) {\r\n                if (+state.selectFieldPart === +state.piecePass[i].id ) {\r\n                    if(state.selectAction){\r\n                        state.piecePass[i].resultPass++\r\n                        state.piecePass[i].pass++\r\n                    }\r\n                    else {\r\n                        state.piecePass[i].unResultPass++\r\n                        state.piecePass[i].pass++\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                piecePass: state.piecePass\r\n            }\r\n        case SET_SQUARD_ACTIVE:\r\n             \r\n            console.log('action.active')\r\n            console.log(action.active)\r\n            return {\r\n                ...state,\r\n                squadActive: action.active\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const createStatisticForMyTeam = (myTeamArr: any, teamNames: any) => ({\r\n    type: CREATE_STATISTIC_FOR_MY_TEAM, myTeamArr: myTeamArr, teamNames: teamNames\r\n})\r\nexport const createStatisticForEnemyTeam = (enemyTeamArr: any, teamNames: any) => ({\r\n    type: CREATE_STATISTIC_FOR_ENEMY_TEAM, enemyTeamArr: enemyTeamArr, teamNames: teamNames\r\n})\r\nexport const setChosenPlayer = (playerID: number) => ({\r\n    type: SET_CHOSEN_PLAYER, playerID: playerID\r\n})\r\nexport const setFieldPart = (fieldPart: number) => ({\r\n    type: SET_FIELD_PART, fieldPart: fieldPart\r\n})\r\nexport const setGameAction = (gameAction: boolean) => ({\r\n    type: SET_GAME_ACTION, gameAction: gameAction\r\n})\r\nexport const addThrows = () => ({\r\n    type: ADD_THROWS\r\n})\r\nexport const createStatistic = (playerName: string, playerTeam: string) => ({\r\n    type: CREATE_STATISTIC, playerName: playerName, playerTeam: playerTeam\r\n})\r\nexport const removeHistoryElement = (playerNumber: number, action: boolean, sector: number) => ({\r\n    type: REMOVE_HISTORY_ELEMENT, playerNumber: playerNumber, action: action, sector: sector\r\n})\r\nexport const clearHistory = () => ({type: CLEAR_HISTORY})\r\nexport const clearFieldPiece = () => ({type: CLEAR_FIELD_PIECE})\r\nexport const clearThrows = () => ({type: CLEAR_THROWS})\r\nexport const addActionToFieldPiece = () => ({type: ADD_ACTION_TO_FIELD_PIECE})\r\nexport const setSquardActive = (active: boolean) => ({type: SET_SQUARD_ACTIVE, active: active })\r\n\r\n\r\n\r\nexport default gameStatistic;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\about-us-reducer.ts",["744","745"],"const SET_TEAM_MEMBER = 'SET_TEAM_MEMBER'\r\nconst CLEAR_SELECT_TEAM_MEMBER = 'CLEAR_SELECT_TEAM_MEMBER'\r\n\r\ntype TeamMembersType = {\r\n    name: string\r\n    vk: string\r\n    email: string\r\n    phone: string\r\n}\r\n\r\nconst initialState = {\r\n   teamMembers: [\r\n       {name: 'Шепенева Екатерина', vk: 'https://vk.com/id557520065', email: 'shepeneva@sfedu.ru'},\r\n       {name: 'Даниил Шестопалов', vk: 'https://vk.com/i_danik', email: 'dansh@sfedu.ru'},\r\n       {name: 'Рувим Бурлаков', vk: 'https://vk.com/ruvimb', email: 'rburlakov@sfedu.ru'},\r\n       {name: 'Вешкин Иван', vk: 'https://vk.com/dfdvdff', email: 'iveshkin@sfedu.ru'},\r\n       {name: 'Егор Скубко', vk: 'https://vk.com/egorskubko', email: 'skubko@sfedu.ru'},\r\n       {name: 'Никита Кучеренко', vk: 'https://vk.com/kucchher', email: 'nkucherenko@sfedu.ru'},\r\n       {name: 'Сафронов Никита', vk: 'https://vk.com/outlaw55', email: 'safronov@sfedu.ru'},\r\n       {name: 'Макаров Юра', vk: 'https://vk.com/yumac', email: 'ymakarov@sfedu.ru'},\r\n       {name: 'Лопырин Кирилл', vk: 'https://vk.com/id246590022', email: 'lopyrin@sfedu.ru'},\r\n   ] as Array<TeamMembersType>,\r\n    selectTeamMembers: [] as Array<any>\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nconst aboutUs = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_TEAM_MEMBER:\r\n            let selectTeamMembersBuff\r\n            for(let i =0; i< state.teamMembers.length; i++) {\r\n                if(action.teamMemberName === state.teamMembers[i].name) {\r\n                   state.selectTeamMembers.push(state.teamMembers[i])\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                selectTeamMembers: state.selectTeamMembers\r\n            }\r\n        case CLEAR_SELECT_TEAM_MEMBER:\r\n            const selectTeamMembersBuffArr = state.selectTeamMembers.splice(0,state.selectTeamMembers.length)\r\n            return {\r\n                ...state,\r\n                selectTeamMembers: state.selectTeamMembers\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setTeamMember = (teamMemberName: string) => ({type: SET_TEAM_MEMBER, teamMemberName: teamMemberName})\r\nexport const clearSelectTeamMember = () => ({type:CLEAR_SELECT_TEAM_MEMBER})\r\n\r\nexport default aboutUs;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\backend-statistic.ts",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Authorization\\authorization-reducer.ts",["746"],"import {setLoginUser} from \"../../../API/API\"\r\n\r\nconst PERSON_AUTHORISED = \"PERSON_AUTHORISED\"\r\nconst PERSON_INFO = \"PERSON_INFO\"\r\nconst CHANGE_PERSON_NAME = \"CHANGE_PERSON_NAME\"\r\nconst CHANGE_PERSON_LAST_NAME = \"CHANGE_PERSON_LAST_NAME\"\r\nconst CHANGE_PERSON_MIDDLE_NAME = \"CHANGE_PERSON_MIDDLE_NAME\"\r\nconst CHANGE_PERSON_USER_NAME = \"CHANGE_PERSON_USER_NAME\"\r\nconst CHANGE_PERSON_USER_PASSWORD = \"CHANGE_PERSON_USER_PASSWORD\"\r\nconst EXIT_SESSION = \"EXIT_SESSION\"\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    authorization: false,\r\n    fetching: false,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    middleName: \"\",\r\n    apiKey: \"\",\r\n    loginName: \"\",\r\n\r\n}\r\n\r\nconst authorizationReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case PERSON_AUTHORISED:\r\n            return {\r\n                ...state,\r\n                authorization: action.isLogin\r\n            }\r\n        case PERSON_INFO:\r\n            return {\r\n                ...state,\r\n                firstName: action.firstName,\r\n                lastName: action.lastName,\r\n                middleName: action.middleName,\r\n                apiKey: action.apiKey,\r\n                loginName: action.loginName,\r\n            }\r\n        case CHANGE_PERSON_NAME:\r\n            return {\r\n                ...state,\r\n                firstName: action.updateFirstName,\r\n            }\r\n        case CHANGE_PERSON_LAST_NAME:\r\n            return {\r\n                ...state,\r\n                lastName: action.updateLastName\r\n            }\r\n        case CHANGE_PERSON_MIDDLE_NAME:\r\n            return {\r\n                ...state,\r\n                middleName: action.updateMiddleName\r\n            }\r\n        case CHANGE_PERSON_USER_NAME:\r\n            return {\r\n                ...state,\r\n                loginName: action.loginName\r\n            }\r\n        case EXIT_SESSION:\r\n            return {\r\n                ...state,\r\n                apiKey: '',\r\n                authorization: false\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\ntype PersonLoginActionType = {\r\n    type: typeof PERSON_AUTHORISED\r\n    isLogin: boolean\r\n}\r\ntype PersonInfoActionType = {\r\n    type: typeof PERSON_INFO\r\n    firstName: string\r\n    lastName: string\r\n    middleName: string\r\n    apiKey: string\r\n    loginName: string\r\n}\r\ntype ChangeNameActionType = {\r\n    type: typeof CHANGE_PERSON_NAME\r\n    updateFirstName: string\r\n}\r\ntype ChangeLastNameActionType = {\r\n    type: typeof CHANGE_PERSON_LAST_NAME\r\n    updateLastName: string\r\n}\r\ntype ChangeMiddleNameActionType = {\r\n    type: typeof CHANGE_PERSON_MIDDLE_NAME,\r\n    updateMiddleName: string\r\n}\r\ntype ChangeUserNameActionType = {\r\n    type: typeof CHANGE_PERSON_USER_NAME,\r\n    loginName: string\r\n}\r\n\r\nexport const personLogin = (login: boolean): PersonLoginActionType => ({type: PERSON_AUTHORISED, isLogin: login})\r\nexport const personInfo = (firstName: string, lastName: string, middleName: string, apiKey: string, loginName: string): PersonInfoActionType =>\r\n    ({\r\n        type: PERSON_INFO,\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        middleName: middleName,\r\n        apiKey: apiKey,\r\n        loginName: loginName\r\n    })\r\nexport const changeName = (updateFirstName: string): ChangeNameActionType => ({\r\n    type: CHANGE_PERSON_NAME,\r\n    updateFirstName: updateFirstName\r\n})\r\nexport const changeLastName = (updateLastName: string): ChangeLastNameActionType => ({\r\n    type: CHANGE_PERSON_LAST_NAME,\r\n    updateLastName: updateLastName\r\n})\r\nexport const changeMiddleName = (updateMiddleName: string): ChangeMiddleNameActionType => ({\r\n    type: CHANGE_PERSON_MIDDLE_NAME,\r\n    updateMiddleName: updateMiddleName\r\n})\r\nexport const changeUserName = (updateUserName: string): ChangeUserNameActionType => ({\r\n    type: CHANGE_PERSON_USER_NAME,\r\n    loginName: updateUserName\r\n})\r\nexport const exitActiveSession = () => ({type: EXIT_SESSION})\r\n\r\nexport const loginThunkCreator = (userLogin: any, password: any, setFetching: any, personInfo: any, routeChange: any, errAuth: any) => {\r\n    return (dispatch: any) => {\r\n         \r\n\r\n        setLoginUser(userLogin, password, setFetching, personInfo).then((data: any) => {\r\n                dispatch(personLogin(true));\r\n                routeChange(true);\r\n                console.log(data)\r\n            }\r\n        ).catch((err:any) => {\r\n            alert('Произощла ошибка :( Попробуйте ещё раз.')\r\n            dispatch(personLogin(false));\r\n            setFetching(false)\r\n            errAuth()\r\n            // setFetching(false);\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default authorizationReducer;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Redux\\Redusers\\Personal\\players-reducer.ts",["747","748","749","750"],"const ADD_PLAYER = 'ADD-PLAYER';\r\nconst ADD_PLAYER_INFO = 'ADD-PLAYER-INFO';\r\n\r\n\r\nlet initialState = {\r\n\r\n    playerNameData: [\r\n        {id: 1, name: 'Иван'},\r\n        {id: 2, name: 'Максим'},\r\n        {id: 3, name: 'Лука'},\r\n        {id: 4, name: 'Константин'},\r\n        {id: 5, name: 'Демид'}\r\n    ],\r\n    playerInfoData: [\r\n        {position: 1, number: '01', role: 'Капитан', rating: 5},\r\n        {position: 2, number: '02', role: 'Капитан', rating: 5},\r\n        {position: 3, number: '03', role: 'Капитан', rating: 5},\r\n        {position: 4, number: '04', role: 'Капитан', rating: 5},\r\n        {position: 5, number: '05', role: 'Капитан', rating: 5}\r\n    ],\r\n    playersAddInput:[] as [],\r\n\r\n}\r\nconst InitialStateType = typeof initialState;\r\n\r\nconst playersReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default playersReducer;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Login-Page\\Login-Page-Container.tsx",["751"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport LoginPage from \"./Login-Page\";\r\nimport {loginThunkCreator, personInfo, personLogin} from \"../../Redux/Redusers/Authorization/authorization-reducer\";\r\nimport { RootState } from '../../Redux/redux-store'\r\n\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n\r\n    return{\r\n        // @ts-ignore\r\n        login: state.auth.authorization\r\n    }\r\n}\r\n\r\nconst LoginPageContainer = connect(mapStateToProps, {personLogin, personInfo, loginThunkCreator})(LoginPage);\r\nexport default LoginPageContainer;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\NewField.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Game-Window-Container.tsx",["752"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport GameWindow from \"./Game-Window\";\r\nimport {RootState} from \"../../Redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return{\r\n        login: state.auth.authorization\r\n    }\r\n}\r\n\r\nconst GameWindowContainer = connect(mapStateToProps,{})(GameWindow);\r\nexport default GameWindowContainer;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewMainPage\\MainPersonPage.tsx",["753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768"],"import React, {useRef, useState} from 'react';\r\nimport {Button, Layout} from 'antd';\r\nimport './MainPersonPage.css'\r\nimport SfeduLogo from './../../Images/Sfedu_logo.png'\r\nimport LeftArrow from './../../Images/Left_Arrow.svg'\r\nimport RightArrow from './../../Images/Right_Arrow.svg'\r\nimport {NavLink, useLocation, Link} from 'react-router-dom';\r\nimport {\r\n    changeInputElement,\r\n    changeTeamTitle,\r\n    chooseTeamBtnClick,\r\n    descriptionInput,\r\n    submitInputElement,\r\n    createInputElement, setDefaultInputArr\r\n} from '../../Redux/Redusers/Game-Window/add-team-form-reducer';\r\nimport TeamsCard from \"./Teams-Card/Teams-Card\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getAddedTeams,\r\n    getAuthorization,\r\n    getFirstName,\r\n    getInputFormArr,\r\n    getIsMyTeam,\r\n    getLastName,\r\n}\r\n    from \"./Main-Preson-Selectors\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport FullListPlayers from \"./Popup-Window/Full-List-Players\";\r\n\r\nimport Classes from \"../NewField/Navigation/Navigation.module.css\";\r\nimport NavigationLinks from \"../Extra/Navigation-Links/Navigation-Linls\";\r\nimport Navigation from \"../NewField/Navigation/Navigation\";\r\nimport MobileNavigation from \"../NewField/Mobile-Navigation/Mobile-Navigation\";\r\nimport FooterText from \"../Extra/Footer-Text/Footer-Text\";\r\nimport MobileFooter from \"../NewField/Mobile-Footer/Mobile-Footer\";\r\nimport DesktopFooter from \"../NewField/Footer/Footer\";\r\nimport MyTeamIcon from './../../Images/icons/king.svg'\r\nimport EnemyTeamIcon from './../../Images/icons/wizard.svg'\r\n\r\nfunction SampleNextArrow(props: any) {\r\n    const {className, style, onClick} = props;\r\n    return (\r\n        <div\r\n            className={className}\r\n            style={{\r\n                ...style,\r\n                display: \"flex\",\r\n                backgroundImage: `url(${RightArrow})`,\r\n                backgroundRepeat: \"no-repeat\",\r\n                content: \"none\",\r\n                width: \"100px\",\r\n                height: \"100px\"\r\n            }}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n}\r\n\r\nfunction SamplePrevArrow(props: any) {\r\n    const {className, style, onClick} = props;\r\n    return (\r\n        <div\r\n            className={className}\r\n            style={{\r\n                ...style,\r\n                display: \"flex\",\r\n                backgroundImage: `url(${LeftArrow})`,\r\n                backgroundRepeat: \"no-repeat\",\r\n                content: \"none\",\r\n                width: \"100px\",\r\n                height: \"100px\"\r\n            }}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n}\r\n\r\ntype PropsType = {}\r\n\r\nexport const MainPersonPage: React.FC<PropsType> = () => {\r\n\r\n    const firstName = useSelector(getFirstName)\r\n    const lastName = useSelector(getLastName)\r\n    const authorization = useSelector(getAuthorization)\r\n    const isMyTeam = useSelector(getIsMyTeam)\r\n    const inputFormArr = useSelector(getInputFormArr)\r\n    const addedTeams = useSelector(getAddedTeams)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [teamCount, setTeamCount] = useState(0)\r\n    const [crutch, setCrutch] = useState(0)\r\n\r\n    const titleRef = useRef(null)\r\n    const myTeamButtonRef = useRef(null)\r\n    const enemyTeamButtonRef = useRef(null)\r\n    const descriptionRef = useRef(null)\r\n    const inputRef = useRef<HTMLInputElement | null>(null)\r\n\r\n    const clickOnMyTeamSpan = (e: React.MouseEvent<HTMLButtonElement>): void => {\r\n        dispatch(chooseTeamBtnClick(e.currentTarget.innerText))\r\n    }\r\n    const clickOnEnemyTeamSpan = (e: React.MouseEvent<HTMLButtonElement>): void => {\r\n        dispatch(chooseTeamBtnClick(e.currentTarget.innerText))\r\n    }\r\n    const addInputs = (e: React.MouseEvent<HTMLButtonElement>): void => {\r\n        dispatch(createInputElement())\r\n    }\r\n    const submitInputs = (e: React.MouseEvent<HTMLButtonElement>): void => {\r\n\r\n        setTeamCount((prevState) => prevState + 1)\r\n        dispatch(submitInputElement(teamCount))\r\n        setCrutch(1)\r\n        clearAllForm(inputRef, inputFormArr, titleRef, descriptionRef)\r\n    }\r\n    const clearAllForm = (inputRef: any, inputArr: any, titleRef: any, descriptionRef: any) => {\r\n        try {\r\n            titleRef.current.value = ''\r\n            descriptionRef.current.value = ''\r\n            for (let i = 0; i < inputArr.length; i++) {\r\n                inputRef.current.parentElement.children[i].value = ''\r\n            }\r\n            dispatch(setDefaultInputArr())\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n    const onChangeInputValue = (e: any): void => {\r\n        dispatch(changeInputElement(e.currentTarget.value, e.currentTarget.name))\r\n    }\r\n    const onBlurInput = (e: any) => {\r\n    }\r\n    const changeTitle = (e: React.FormEvent<HTMLInputElement>) => {\r\n        dispatch(changeTeamTitle(e.currentTarget.value))\r\n    }\r\n    const changeDescription = (e: React.FormEvent<HTMLTextAreaElement>) => {\r\n        dispatch(descriptionInput(e.currentTarget.value))\r\n    }\r\n\r\n    const inputFormArrMap = inputFormArr.map((inputFormArr: any) => {\r\n\r\n        return (\r\n            <input type={inputFormArr.type}\r\n                   name={inputFormArr.name}\r\n                   placeholder={inputFormArr.placeholder}\r\n                   className={inputFormArr.className}\r\n                   onChange={(e) => {\r\n                       onChangeInputValue(e)\r\n                   }}\r\n                   onBlur={(event => {\r\n                       onBlurInput(event)\r\n                   })}\r\n                   ref={inputRef}\r\n            />\r\n        )\r\n    })\r\n    console.log('inputRef')\r\n    console.log(inputRef)\r\n    const [listPlayers, setlistPlayers] = useState(false)\r\n    const teamCard = addedTeams.map((elem: any) => {\r\n        return (\r\n            <TeamsCard teamTitle={elem.teamTitle} teamPlayers={elem.teamPlayers} teamNumbers={elem.teamNumbers}\r\n                       isMyTeam={elem.isMyTeam} setlistPlayers={setlistPlayers}/>\r\n        )\r\n    })\r\n\r\n    const myCard = teamCard.filter((el: any) => {\r\n        return el.props.isMyTeam === true\r\n    })\r\n    const enemyCard = teamCard.filter((el: any) => {\r\n        return el.props.isMyTeam === false\r\n    })\r\n\r\n    const settings = {\r\n        dots: false,\r\n        infinite: myCard.length > 3,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1,\r\n        nextArrow: <SampleNextArrow/>,\r\n        prevArrow: <SamplePrevArrow/>,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1700,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 2,\r\n                    infinite: myCard.length > 2,\r\n                    dots: false,\r\n                    arrows: false\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    initialSlide: 1,\r\n                    arrows: false,\r\n                    className: \"center\",\r\n                }\r\n            },\r\n\r\n        ]\r\n    };\r\n\r\n    const mobileWidth = document.documentElement.clientWidth\r\n    console.log(mobileWidth)\r\n\r\n    const {Header, Content, Footer} = Layout;\r\n    return (\r\n        <Layout>\r\n            <Header className='PersonPageHeader' style={{backgroundColor: '#493D4E', display: 'flex'}}>\r\n               <>\r\n               <Navigation/>\r\n               <MobileNavigation/>\r\n               </>\r\n                <div className='HeaderDescription'\r\n                     style={{display: 'flex', paddingBottom: '50px', alignItems: 'center', }}>\r\n                    <div className='HeaderText'>\r\n                        <span className='SubHeaderTextOne'>Здесь вы сможете</span>\r\n                        <span className='SubHeaderTextTwo'>Создавать, редактировать, удалять команды</span>\r\n                        <span className='SubHeaderTextThree'>Чтобы начать матч, перейдите на вклюдку \"Матч\"</span>\r\n                    </div>\r\n                    <div className='SfeduLogo'>\r\n                        <img src={SfeduLogo} alt='Логотип ЮФУ' style={{height: '258px', width: '276px'}}/>\r\n                    </div>\r\n                </div>\r\n            </Header>\r\n            <Content className='PersonPageContent'>\r\n                <span className='PersonPageCreateTeamText'>Создайте команду прямо сейчас!</span>\r\n                <div className='PersonPageCreateTeamField'>\r\n                    <div className='PersonPageFieldLeftSide'>\r\n                        <input type=\"text\"\r\n                               name=\"teamName\"\r\n                               className='TitleTeamInput'\r\n                               placeholder='Название'\r\n                               ref={titleRef}\r\n                               onBlur={(e: React.FormEvent<HTMLInputElement>) => changeTitle(e)}/>\r\n                        <div className='ChooseTeam'>\r\n                            <span className='ChooseTeamText'>Чья команда?</span>\r\n                            <div className='ChooseTeamButtons'>\r\n                                <Button ref={myTeamButtonRef} type=\"text\"\r\n                                        className={isMyTeam ? 'ChooseTeamButton' + ' ' + 'ButtonBorder' : 'ChooseTeamButton'}\r\n                                        onClick={clickOnMyTeamSpan}>Моя</Button>\r\n                                <Button ref={enemyTeamButtonRef} type=\"text\"\r\n                                        className={isMyTeam ? 'ChooseTeamButton' : 'ChooseTeamButton' + ' ' + 'ButtonBorder'}\r\n                                        onClick={clickOnEnemyTeamSpan}>Соперников</Button>\r\n                            </div>\r\n                        </div>\r\n                        <textarea\r\n                            name=\"description\"\r\n                            className='CommentsForTeamTextArea'\r\n                            placeholder='Напишите комментарий'\r\n                            ref={descriptionRef}\r\n                            onBlur={(e) => changeDescription(e)}/>\r\n                    </div>\r\n                    <div className='PersonPageFieldRightSide'>\r\n                        <div className='ButtonWrapper'>\r\n                            <div className='InputsConnection'>{inputFormArrMap}</div>\r\n                            <div className='AddPlayerButtonFormBlock'>\r\n                                <button className='AddPlayerButtonForm' onClick={addInputs}>+</button>\r\n                            </div>\r\n                            <div className='CreateTeamButtonFormBlock'>\r\n                                <button className='CreateTeamButtonForm' onClick={submitInputs}>Создать</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <span className=\"PersonPageMyTeamText\">Ваши команды:</span>\r\n                <div className=\"MyTeams\">\r\n                    <Slider {...settings} >\r\n                        {myCard}\r\n                    </Slider>\r\n                </div>\r\n\r\n                <span className='EnemyTeamText'>Команды соперника:</span>\r\n                <div className=\"MyTeams\">\r\n                    <Slider {...settings} >\r\n                        {enemyCard}\r\n                    </Slider>\r\n                </div>\r\n\r\n\r\n                <FullListPlayers listPlayers={listPlayers} setlistPlayers={setlistPlayers} addedTeams={addedTeams}>\r\n                    <h3>My popup</h3>\r\n                </FullListPlayers>\r\n\r\n            </Content>\r\n\r\n            <Footer>\r\n            <DesktopFooter/>\r\n            <MobileFooter/>\r\n            </Footer>\r\n        </Layout>\r\n\r\n    )\r\n}\r\n","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\About-Us\\AboutUs.tsx",["769"],"import React, {memo} from \"react\";\r\nimport Navigation from \"../NewField/Navigation/Navigation\";\r\nimport Footer from \"../NewField/Footer/Footer\";\r\nimport TeamMembers from \"./TeamMembers/TeamMembers\";\r\nimport HeaderDescription from \"./HederDescription/HeaderDescription\";\r\nimport MobileNavigation from \"../NewField/Mobile-Navigation/Mobile-Navigation\";\r\nimport MobileFooter from \"../NewField/Mobile-Footer/Mobile-Footer\";\r\n\r\nconst AboutUs = ({}) => {\r\n    return (\r\n        <>\r\n            <Navigation/>\r\n            <MobileNavigation/>\r\n            <HeaderDescription/>\r\n            <TeamMembers/>\r\n            <Footer/>\r\n            <MobileFooter/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(AboutUs)","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Statistics\\Statistics.tsx",["770"],"import React from \"react\";\r\nimport Navigation from \"../NewField/Navigation/Navigation\";\r\nimport Description from \"./Description/Description\";\r\nimport StatisticsBody from \"./Statistics-Body/Statistics-Body\";\r\nimport Footer from \"../NewField/Footer/Footer\";\r\nimport MobileNavigation from \"../NewField/Mobile-Navigation/Mobile-Navigation\";\r\nimport MobileFooter from \"../NewField/Mobile-Footer/Mobile-Footer\";\r\n\r\nconst Statistics = ({}) => {\r\n\r\n    return(\r\n        <>\r\n        <Navigation/>\r\n        <MobileNavigation/>\r\n        <Description/>\r\n        <StatisticsBody/>\r\n        <Footer/>\r\n        <MobileFooter/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Statistics","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\API\\API.js",["771","772"],"import * as axios from \"axios\"\r\n// import {useDispatch} from \"react-redux\";\r\n\r\n// const dispatch = useDispatch()\r\n\r\nconst header = {\r\n    'Access-Control-Allow-Origin': 'http://127.0.0.1',\r\n    'Access-Control-Request-Method': 'PUT',\r\n    'Origin': 'http://127.0.0.1'\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://46.17.104.151:5000/probasket/\",\r\n})\r\n\r\nexport const setRegistrationUser = async (firstName, lastName, middleName, userName, password) => {\r\n    let response = await (instance\r\n        .get(`/authorization?type=registration&first_name=${firstName}&last_name=${lastName}&middle_name=${middleName}&username=${userName}&pas=${password}`))\r\n}\r\nexport const setLoginUser = async (userName, password, setFetching, personInfo) => {\r\n    setFetching(true);\r\n     \r\n    let response = await (instance.get(`/authorization?type=login&username=${userName}&pas=${password}`))\r\n    // response.catch()\r\n     \r\n    personInfo(response.data.user.first_name, response.data.user.last_name, response.data.user.middle_name, response.data.user.api_key, response.data.user.username)\r\n    setFetching(false);\r\n    console.log('response')\r\n    console.log(response)\r\n}\r\nexport const ChangeUserFirstName = async (username, updateName, lastName, middleName, apiKey, changeName) => {\r\n    // test user api_key - 3a5e84d27c5611eba6d45254005560c2\r\n    let response = await (instance\r\n        .get(`/authorization?type=edit_fio&api_key=${apiKey}&username=${username}&first_name=${updateName}&last_name=${lastName}&middle_name=${middleName}`))\r\n    changeName(response.data.user.first_name)\r\n}\r\nexport const ChangeUserLastName = async (username, firstName, updateLastName, middleName, apiKey, changeLastName) => {\r\n    // test user api_key - 3a5e84d27c5611eba6d45254005560c2\r\n    let response = await (instance\r\n        .get(`/authorization?type=edit_fio&api_key=${apiKey}&username=${username}&first_name=${firstName}&last_name=${updateLastName}&middle_name=${middleName}`))\r\n    changeLastName(response.data.user.last_name)\r\n}\r\nexport const ChangeUserMiddleName = async (username, firstName, lastName, updateMiddleName, apiKey, changeMiddleName) => {\r\n    // test user api_key - 3a5e84d27c5611eba6d45254005560c2\r\n    let response = await (instance\r\n        .get(`/authorization?type=edit_fio&api_key=${apiKey}&username=${username}&first_name=${firstName}&last_name=${lastName}&middle_name=${updateMiddleName}`))\r\n    changeMiddleName(response.data.user.middle_name)\r\n    console.log('Request complited')\r\n}\r\nexport const ChangeUserName = async (username, newUsername, apiKey, changeUserName) => {\r\n    // test user api_key - 3a5e84d27c5611eba6d45254005560c2\r\n    let response = await (instance\r\n        .get(`/authorization?type=edit_username&api_key=${apiKey}&username=${username}&new_username=${newUsername}`, {\r\n            headers: header\r\n        }))\r\n     \r\n    changeUserName(response.data.user.username)\r\n    console.log('Request complited')\r\n}\r\nexport const ChangeUserPassword = async (username, password, newPassword, apiKey) => {\r\n    // test user api_key - 3a5e84d27c5611eba6d45254005560c2\r\n     \r\n    let response = await (instance\r\n        .get(`/authorization?type=edit_pas&api_key=${apiKey}&username=${username}&pas=${password}&new_pas=${newPassword}`))\r\n     \r\n    console.log('Request complited')\r\n    console.log(response)\r\n\r\n}\r\nexport const UserDelete = async (username, password, apiKey) => {\r\n    // test user api_key - 3a5e84d27c5611eba6d45254005560c2\r\n    let response = await (instance\r\n        .get(`authorization?type=delete_account&username=${username}&pas=${password}&api_key=${apiKey}`))\r\n    console.log('Request complited')\r\n\r\n}\r\nexport const addGame = async (team1, team2, players1, throws, email, apiKey) => {\r\n    let response = await (instance.get(`games?type=add&api_key=${apiKey}&team1=${team1}&team2=${team2}&players=${players1}&throws=${throws}&email=${email}`))\r\n    console.log('Success')\r\n    return response\r\n}\r\nexport const getListOfGames = async (apiKey) => {\r\n    const response = await (instance.get(`games?type=list&api_key=${apiKey}`))\r\n    return response\r\n}\r\nexport const oneGameStatistic = async (apiKey, id) => {\r\n    const response = await (instance.get(`games?type=select&api_key=${apiKey}&id=${id}`))\r\n    return response\r\n}\r\n\r\n\r\n","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Personal-Container.jsx",["773"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Personal from \"./Personal\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        login: state.auth.authorization,\r\n    }\r\n}\r\n\r\n\r\nconst PersonalContainer = connect(mapStateToProps, {})(Personal);\r\nexport default PersonalContainer;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewMainPage\\Main-Preson-Selectors.js",["774"],"import {createSelector} from \"reselect\";\r\n\r\nexport const getFirstName = (state) => (state.auth.firstName)\r\nexport const getLastName = (state) => (state.auth.lastName)\r\nexport const getAuthorization = (state) => (state.auth.authorization)\r\nexport const getPlayersAddInput = (state) => (state.players.playersAddInput)\r\nexport const getInputFormArr = (state) => (state.addTeamForm.inputFormArr)\r\nexport const getTeamTitle = (state) => (state.addTeamForm.teamTitle)\r\nexport const getIsMyTeam = (state) => (state.addTeamForm.isMyTeam)\r\nexport const getAddedPlayers = (state) => (state.addTeamForm.addedPlayers)\r\nexport const getTeamsCount = (state) => (state.addTeamForm.teamsCount)\r\nexport const getAddedTeams = (state) => (state.addTeamForm.addedTeams)\r\nexport const getSelectMyTeam = (state) => (state.chooseTeamReducer.selectMyTeam)\r\nexport const getSelectMyTeamTitle = (state) => (state.chooseTeamReducer.selectMyTeamTitle)\r\nexport const getSelectEnemyTeam = (state) => (state.chooseTeamReducer.selectEnemyTeam)\r\nexport const getSelectEnemyTeamTitle = (state) => (state.chooseTeamReducer.selectEnemyTeamTitle)\r\nexport const getGameIsStarted = (state) => (state.chooseTeamReducer.gameIsStarted)\r\nexport const getArrayOfMyPlayers = (state) => (state.chooseTeamReducer.arrayOfMyPlayers)\r\nexport const getArrayOfEnemyPlayers = (state) => (state.chooseTeamReducer.arrayOfEnemyPlayers)\r\nexport const getHistory = (state) => (state.gameStatistic.history)\r\nexport const getMyPlayerTeam = (state) => (state.gameStatistic.myPlayerTeam)\r\nexport const getEnemyPlayerTeam = (state) => (state.gameStatistic.enemyPlayerTeam)\r\nexport const getThrows = (state) => (state.gameStatistic.throws)\r\nexport const getApiKey = (state) => (state.auth.apiKey)\r\nexport const getChosenTeamCard = (state) => (state.chooseTeamReducer.chosenTeamCard)\r\nexport const getFinalMyPlayersForGame = (state) => (state.chooseTeamReducer.finalMyPlayersForGame)\r\nexport const getFinalEnemyPlayersForGame = (state) => (state.chooseTeamReducer.finalEnemyPlayersForGame)\r\nexport const getDeleteAction = (state) => (state.chooseTeamReducer.deleteAction)\r\nexport const getDeletePlayerNumber = (state) => (state.chooseTeamReducer.deletePlayerNumber)\r\nexport const getDeleteSector = (state) => (state.chooseTeamReducer.deleteSector)\r\nexport const getTeamMembers = (state) => (state.aboutUs.teamMembers)\r\nexport const getSelectTeamMembers = (state) => (state.aboutUs.selectTeamMembers)\r\nexport const getPiecePass= (state) => (state.gameStatistic.piecePass)\r\nexport const getActionCounter= (state) => (state.gameStatistic.actionCounter)\r\nexport const getUrlResponse= (state) => (state.gameStatistic.urlResponse)\r\nexport const getListOfGame= (state) => (state.backendStatistics.listOfGame)\r\nexport const getChosenTeamID= (state) => (state.backendStatistics.chosenTeamID)\r\nexport const getOneGame= (state) => (state.backendStatistics.oneGame)\r\nexport const getEmail= (state) => (state.backendStatistics.email)\r\n\r\n","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Login-Page\\Login-Page.tsx",["775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790"],"import React, {useState, useEffect, FormEvent, useRef} from 'react';\r\nimport styled from 'styled-components'\r\nimport {Form, Field} from 'react-final-form'\r\nimport {setLoginUser, setRegistrationUser} from \"../../API/API\";\r\nimport {Link, Redirect, Route, useHistory} from \"react-router-dom\";\r\nimport {ClipLoader} from \"react-spinners\";\r\nimport {current} from \"@reduxjs/toolkit\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getAuthorization} from \"../NewMainPage/Main-Preson-Selectors\";\r\nimport './Login-Page.css'\r\nimport PopupPlayersChoose from \"../Modal/Players-Choose/Popup-Players-Choose\";\r\nimport Classes from \"../About-Us/TeamMembers/Team-Members-Element/Team-Members-Element.module.css\";\r\n\r\nconst fetchingStyle = {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    right: \"50%\"\r\n}\r\nconst inputStyle = {\r\n    height: \"56px\",\r\n    width: \"100%\",\r\n    fontSize: \"24px\",\r\n    border: \"2px solid #eceef2\",\r\n    borderRadius: \"8px\",\r\n    backgroundColor: \"#fff\",\r\n    color: \"black\",\r\n    outline: \"none\",\r\n    // marginBottom: \"5px\"\r\n\r\n};\r\nconst logoStyle = {\r\n    width: \"140px\",\r\n    height: \"140px\",\r\n    border: \"none\",\r\n    borderRadius: \"50%\"\r\n}\r\nconst MainPageStyle = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  position: relative;\r\n`\r\nconst MainPageFlexWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst LoginWrapper = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  //align-items: center;\r\n  justify-content: center;\r\n  background-color: #282c34;\r\n`\r\nconst MediaRequest = styled.div`\r\n  //  Медиа запросы страницы\r\n`\r\nconst BaseAuthWindow = styled.div`\r\n  width: 90%;\r\n  //height: 499px;\r\n  flex: 1 0 auto;\r\n  flex-direction: column;\r\n  margin: 20% auto;\r\n`\r\nconst AuthorizationWindow = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  margin: 0;\r\n  transition: height .2s ease-in;\r\n  box-sizing: border-box;\r\n  border-radius: 16px;\r\n  background-color: #fff;\r\n`\r\nconst AuthorizationContent = styled.div`\r\n  margin-top: 0;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n  padding: 32px;\r\n`\r\nconst Header = styled.div`\r\n  padding: 0 0 16px;\r\n`\r\nconst HeaderLogo = styled.div`\r\n  position: relative;\r\n  text-align: center;\r\n`\r\nconst HeaderLogoLink = styled.a`\r\n  width: 86px;\r\n  height: 35px;\r\n  background-image: url(https://rostovdon.russiabasket.ru/Files/ProjectsCustomImages/dd3qkvgx.png);\r\n`\r\nconst Body = styled.div`\r\n  width: 100%;\r\n`\r\nconst AuthScreen = styled.div`\r\n  position: relative;\r\n  transform: translateZ(0);\r\n  width: 100%;\r\n`\r\nconst AuthTitle = styled.h1`\r\n  font-family: YS Text, Arial, sans-serif;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-align: center;\r\n  margin: 0;\r\n  color: #000;\r\n`\r\nconst LoginForm = styled.div`\r\n  margin-top: 40px;\r\n`\r\nconst InputArea = styled.div`\r\n  position: relative;\r\n  margin-bottom: 24px;\r\n`\r\nconst LabelWrapper = styled.div`\r\n  position: relative;\r\n  margin-bottom: 0;\r\n`\r\nconst InputLoginWrapper = styled.div`\r\n\r\n`\r\nconst ForgotLogin = styled.a`\r\n  margin-top: 10px;\r\n  text-decoration: none;\r\n  outline: 0;\r\n  touch-action: manipulation;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n  color: #04b;\r\n`\r\nconst LogInButtonWrapper = styled.div`\r\n  margin: 16px 0 0;\r\n`\r\nconst LogInButton = styled.button`\r\n  background-color: #fc0;\r\n  border-radius: 8px;\r\n  height: 44px;\r\n  font-size: 16px;\r\n  line-height: 44px;\r\n  width: 100%;\r\n  border: none;\r\n  outline: none;\r\n`\r\nconst RegistrationButton = styled.button`\r\n  border: 2px solid #eceef2;\r\n  border-radius: 8px;\r\n  background-color: #fff;\r\n  color: black;\r\n  margin-top: 24px;\r\n  height: 44px;\r\n  font-size: 16px;\r\n  line-height: 44px;\r\n  width: 100%;\r\n  outline: none;\r\n`\r\ntype PropsType = {\r\n    loginThunkCreator: any\r\n    personInfo: any\r\n}\r\n\r\nconst LoginPage: React.FC<PropsType> = ({loginThunkCreator, personInfo}) => {\r\n\r\n    const [isTrouble, setIsTrouble] = useState(false)\r\n    const [login, setLogin] = useState(true);\r\n    const [continueLogin, setContinueLogin] = useState(false);\r\n    const [registration, setRegistration] = useState(false);\r\n    // const [button, setButton] = useState(1);\r\n    const [confirmReg, setConfirmReg] = useState(false);\r\n    const [userLogin, setUserLogin] = useState(\"\");\r\n    const [userPass, setUserPass] = useState(\"\");\r\n    const [time, setTime] = useState(0);\r\n    const [fetching, setFetching] = useState(false);\r\n\r\n    const isAuth = useSelector(getAuthorization)\r\n\r\n    const clickRegistration = () => {\r\n        setRegistration(false)\r\n    }\r\n\r\n    const refElem = useRef<any>(null)\r\n    // console.log(refElem)\r\n\r\n    const state = {\r\n        button: 1,\r\n    };\r\n    type OnSubmitType = {\r\n        login: string\r\n    }\r\n    // Для нажатия кнопки на начаьном экране, один для двух кнопок \"Логин\" и \"Регистрация\"\r\n    const onSubmit = (e: OnSubmitType) => {\r\n\r\n        // e.preventDefault();\r\n        if (state.button === 1) {\r\n            setLogin(false);\r\n            setContinueLogin(true);\r\n            setRegistration(false);\r\n            setUserLogin(e.login)\r\n\r\n        }\r\n        if (state.button === 2) {\r\n            setLogin(false);\r\n            setRegistration(true);\r\n            setContinueLogin(false);\r\n        }\r\n    };\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        const path = \"/\";\r\n        history.push(path);\r\n    }\r\n    const errAuth = () => {\r\n        const path = \"/login\";\r\n        history.push(path);\r\n    }\r\n    // Отправка на сервер логина и пароля для аторизации\r\n    type LoginSubmitType = {\r\n        login: string\r\n        password: string\r\n    }\r\n    const LoginSubmit = (e: LoginSubmitType) => {\r\n        loginThunkCreator(userLogin, e.password, setFetching, personInfo, routeChange, errAuth);\r\n    }\r\n    /* const history = useHistory(createHistory)({\r\n         basename: '/basename'\r\n     });*/\r\n    // Отправка на сервер данным зарегистрированного пользователя\r\n    type RegistrationSubmitType = {\r\n        firstName: string\r\n        lastName: string\r\n        loginName: string\r\n        middleName: string\r\n        passwordName: string\r\n        passwordNameRepeat: string\r\n    }\r\n    const RegistrationSubmit = (e: RegistrationSubmitType) => {\r\n        setRegistrationUser(e.firstName, e.lastName, e.middleName, e.loginName, e.passwordName).then(data => {\r\n\r\n        })\r\n    }\r\n    type ErrorsType = {\r\n        login: string\r\n    }\r\n    // Валидация ввода\r\n    const validate = (e: LoginSubmitType) => {\r\n        // console.log(e);\r\n        if (!registration) {\r\n            return\r\n        } else {\r\n            const errors: {} | any = {};\r\n            if (e.login && e.login.length < 5)\r\n                errors.login = \"Too short\";\r\n            return errors;\r\n        }\r\n    };\r\n    // Валидация ввода начальной страницы логинизации\r\n    const validateLogin = (values: LoginSubmitType) => {\r\n\r\n        if (!registration) {\r\n            return\r\n        } else {\r\n            const errors: any = {}\r\n            if (!values.login) {\r\n                errors.login = 'Required'\r\n            } else if (values.login.length < 5) {\r\n                errors.login = \"Too short\"\r\n            }\r\n            return errors\r\n        }\r\n    };\r\n    const WrappedLink: any = () => {\r\n        return (\r\n            <LogInButton onClick={() => (state.button = 1)}>\r\n                <Link to=\"\" style={linkStyles}/>\r\n            </LogInButton>\r\n        )\r\n    }\r\n    const linkStyles: React.CSSProperties = {\r\n        textDecoration: \"none\"\r\n    }\r\n\r\n    const styles: React.CSSProperties = {\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        right: \"50%\"\r\n    }\r\n    // @ts-ignore\r\n    return (\r\n        // {isAuth ? <Redirect to='/'/> : null}\r\n\r\n        <MainPageStyle>\r\n            <MainPageFlexWrapper>\r\n                <LoginWrapper>\r\n                    <MediaRequest>\r\n                        <BaseAuthWindow>\r\n\r\n                            {\r\n                                fetching ? (\r\n                                        <div style={styles}><ClipLoader color=\"#FFFFFF\" loading={fetching} size={150}/>\r\n                                        </div>)\r\n                                    :\r\n                                    (<AuthorizationWindow ref={refElem}>\r\n                                        <AuthorizationContent>\r\n\r\n                                            <Header>\r\n                                                <HeaderLogo>\r\n                                                    <img\r\n                                                        src=\"https://rostovdon.russiabasket.ru/Files/ProjectsCustomImages/dd3qkvgx.png\"\r\n                                                        alt=\"Баскетбольная команда ЮФУ\"\r\n                                                        style={logoStyle}\r\n                                                    />\r\n                                                    <HeaderLogoLink/>\r\n                                                </HeaderLogo>\r\n                                            </Header>\r\n\r\n\r\n                                            {\r\n                                                login ? (<Body>\r\n                                                    <AuthScreen>\r\n                                                        <AuthTitle>\r\n                                                            <span>Войдите, чтобы продолжить</span>\r\n                                                        </AuthTitle>\r\n                                                        <LoginForm>\r\n                                                            <Form\r\n                                                                onSubmit={onSubmit}\r\n                                                                validate={validateLogin}\r\n                                                                render={({\r\n                                                                             handleSubmit,\r\n                                                                             form,\r\n                                                                             submitting,\r\n                                                                             pristine,\r\n                                                                             values\r\n                                                                         }) => (\r\n                                                                    <form onSubmit={handleSubmit}>\r\n                                                                        {console.log(handleSubmit)}\r\n                                                                        <InputArea>\r\n                                                                            <LabelWrapper>\r\n                                                                                {/*<label>Введите логин</label>*/}\r\n                                                                            </LabelWrapper>\r\n                                                                            <InputLoginWrapper>\r\n                                                                                <Field name=\"login\">\r\n                                                                                    {({input, meta}) => (\r\n                                                                                        <div>\r\n                                                                                            <input {...input}\r\n                                                                                                   type=\"text\"\r\n                                                                                                   placeholder=\"Введите логин\"\r\n                                                                                                   style={inputStyle}/>\r\n                                                                                            {meta.error && meta.touched &&\r\n                                                                                            <span>{meta.error}</span>}\r\n                                                                                        </div>\r\n                                                                                    )}\r\n                                                                                </Field>\r\n                                                                            </InputLoginWrapper>\r\n                                                                            <ForgotLogin onClick={() => setIsTrouble(true)}>Не помню логин или пароль</ForgotLogin>\r\n                                                                            <LogInButtonWrapper>\r\n                                                                                <LogInButton\r\n                                                                                    onClick={() => (state.button = 1)}>Войти</LogInButton>\r\n                                                                                <RegistrationButton\r\n                                                                                    onClick={() => (state.button = 2)}>Регистрация</RegistrationButton>\r\n                                                                            </LogInButtonWrapper>\r\n                                                                        </InputArea>\r\n                                                                    </form>\r\n                                                                )}/>\r\n                                                        </LoginForm>\r\n                                                    </AuthScreen>\r\n                                                </Body>) : continueLogin ? (<Body>\r\n                                                    <AuthScreen>\r\n                                                        <AuthTitle>\r\n                                                            <span>Войдите, чтобы продолжить</span>\r\n                                                        </AuthTitle>\r\n                                                        <LoginForm>\r\n                                                            <Form\r\n                                                                onSubmit={LoginSubmit}\r\n                                                                validate={validate}\r\n                                                                render={({handleSubmit}) => (\r\n                                                                    <form onSubmit={handleSubmit}>\r\n                                                                        <InputArea>\r\n                                                                            <LabelWrapper>\r\n                                                                                {/*<label>Введите логин</label>*/}\r\n                                                                            </LabelWrapper>\r\n                                                                            <InputLoginWrapper>\r\n                                                                                <Field name=\"password\" component=\"input\"\r\n                                                                                       type=\"password\"\r\n                                                                                       placeholder=\"Введите пароль\"\r\n                                                                                       style={inputStyle}/>\r\n                                                                            </InputLoginWrapper>\r\n                                                                            <ForgotLogin>Не помню логин</ForgotLogin>\r\n                                                                            <LogInButtonWrapper>\r\n                                                                                {/*<Link to=\"/personal\">*/}\r\n                                                                                <LogInButton\r\n                                                                                    onClick={() => (state.button = 1)}>Войти</LogInButton>\r\n                                                                                {/*<WrappedLink>Войти</WrappedLink>*/}\r\n                                                                                <RegistrationButton\r\n                                                                                    onClick={() => (state.button = 2)}>Регистрация</RegistrationButton>\r\n                                                                            </LogInButtonWrapper>\r\n                                                                        </InputArea>\r\n                                                                    </form>\r\n                                                                )}/>\r\n                                                        </LoginForm>\r\n                                                    </AuthScreen>\r\n                                                </Body>) : registration ? (<Body>\r\n                                                    <AuthScreen>\r\n                                                        <AuthTitle>\r\n                                                            <span>Регистрация</span>\r\n                                                        </AuthTitle>\r\n                                                        <LoginForm>\r\n                                                            <Form\r\n                                                                onSubmit={RegistrationSubmit}\r\n                                                                validate={(values: any) => {\r\n                                                                    const errors: any = {}\r\n                                                                    if (!values.firstName) {\r\n                                                                        errors.firstName = 'Required'\r\n                                                                    }\r\n                                                                    if (!values.lastName) {\r\n                                                                        errors.lastName = 'Required'\r\n                                                                    }\r\n                                                                    if (!values.middleName) {\r\n                                                                        errors.middleName = 'Required'\r\n                                                                    }\r\n                                                                    if (!values.loginName) {\r\n                                                                        errors.loginName = 'Required'\r\n                                                                    }\r\n                                                                    if (!values.passwordName) {\r\n                                                                        errors.passwordName = 'Required'\r\n                                                                    }\r\n                                                                    if (!values.passwordNameRepeat) {\r\n                                                                        errors.passwordNameRepeat = 'Required'\r\n                                                                    } else if (values.passwordName !== values.passwordNameRepeat) {\r\n                                                                        errors.passwordName = 'Must be equal'\r\n                                                                    }\r\n\r\n                                                                    return errors\r\n                                                                }}\r\n                                                                render={({handleSubmit}) => (\r\n                                                                    <form onSubmit={handleSubmit}>\r\n                                                                        <InputArea>\r\n                                                                            <InputLoginWrapper>\r\n                                                                                <Field name=\"firstName\">\r\n                                                                                    {({input, meta}) => (\r\n                                                                                        <div>\r\n                                                                                            <input {...input}\r\n                                                                                                   type=\"text\"\r\n                                                                                                   placeholder=\"Имя\"\r\n                                                                                                   style={inputStyle}/>\r\n                                                                                            {meta.error && meta.touched &&\r\n                                                                                            <span>{meta.error}</span>}\r\n                                                                                        </div>\r\n                                                                                    )}\r\n                                                                                </Field>\r\n                                                                                <Field name=\"lastName\">\r\n                                                                                    {({input, meta}) => (\r\n                                                                                        <div>\r\n                                                                                            <input {...input}\r\n                                                                                                   type=\"text\"\r\n                                                                                                   placeholder=\"Фамилия\"\r\n                                                                                                   style={inputStyle}/>\r\n                                                                                            {meta.error && meta.touched &&\r\n                                                                                            <span>{meta.error}</span>}\r\n                                                                                        </div>\r\n                                                                                    )}\r\n                                                                                </Field>\r\n                                                                                <Field name=\"middleName\">\r\n                                                                                    {({input, meta}) => (\r\n                                                                                        <div>\r\n                                                                                            <input {...input}\r\n                                                                                                   type=\"text\"\r\n                                                                                                   placeholder=\"Отчество\"\r\n                                                                                                   style={inputStyle}/>\r\n                                                                                            {meta.error && meta.touched &&\r\n                                                                                            <span>{meta.error}</span>}\r\n                                                                                        </div>\r\n                                                                                    )}\r\n                                                                                </Field>\r\n                                                                                <Field name=\"loginName\">\r\n                                                                                    {({input, meta}) => (\r\n                                                                                        <div>\r\n                                                                                            <input {...input}\r\n                                                                                                   type=\"text\"\r\n                                                                                                   placeholder=\"Логин\"\r\n                                                                                                   style={inputStyle}/>\r\n                                                                                            {meta.error && meta.touched &&\r\n                                                                                            <span>{meta.error}</span>}\r\n                                                                                        </div>\r\n                                                                                    )}\r\n                                                                                </Field>\r\n                                                                                <Field name=\"passwordName\">\r\n                                                                                    {({input, meta}) => (\r\n                                                                                        <div>\r\n                                                                                            <input {...input}\r\n                                                                                                   type=\"password\"\r\n                                                                                                   placeholder=\"Пароль\"\r\n                                                                                                   style={inputStyle}/>\r\n                                                                                            {meta.error && meta.touched &&\r\n                                                                                            <span>{meta.error}</span>}\r\n                                                                                        </div>\r\n                                                                                    )}\r\n                                                                                </Field>\r\n                                                                                <Field name=\"passwordNameRepeat\">\r\n                                                                                    {({input, meta}) => (\r\n                                                                                        <div>\r\n                                                                                            <input {...input}\r\n                                                                                                   type=\"password\"\r\n                                                                                                   placeholder=\"Подтверждение\"\r\n                                                                                                   style={inputStyle}/>\r\n                                                                                            {meta.error && meta.touched &&\r\n                                                                                            <span>{meta.error}</span>}\r\n                                                                                        </div>\r\n                                                                                    )}\r\n                                                                                </Field>\r\n\r\n                                                                            </InputLoginWrapper>\r\n                                                                            <LogInButtonWrapper>\r\n                                                                                <LogInButton\r\n                                                                                    onClick={clickRegistration}>\r\n                                                                                    Зарегистрироваться\r\n                                                                                </LogInButton>\r\n                                                                            </LogInButtonWrapper>\r\n                                                                        </InputArea>\r\n                                                                    </form>\r\n                                                                )}/>\r\n                                                        </LoginForm>\r\n                                                    </AuthScreen>\r\n                                                </Body>) : <AuthScreen>\r\n                                                    <AuthTitle>\r\n                                                        <span>Войдите, чтобы продолжить</span>\r\n                                                    </AuthTitle>\r\n                                                    <LoginForm>\r\n                                                        <Form\r\n                                                            onSubmit={onSubmit}\r\n                                                            validate={validateLogin}\r\n                                                            render={({\r\n                                                                         handleSubmit,\r\n                                                                         form,\r\n                                                                         submitting,\r\n                                                                         pristine,\r\n                                                                         values\r\n                                                                     }) => (\r\n                                                                <form onSubmit={handleSubmit}>\r\n                                                                    {console.log(handleSubmit)}\r\n                                                                    <InputArea>\r\n                                                                        <LabelWrapper>\r\n                                                                            {/*<label>Введите логин</label>*/}\r\n                                                                        </LabelWrapper>\r\n                                                                        <InputLoginWrapper>\r\n                                                                            <Field name=\"login\">\r\n                                                                                {({input, meta}) => (\r\n                                                                                    <div>\r\n                                                                                        <input {...input} type=\"text\"\r\n                                                                                               placeholder=\"Введите логин\"\r\n                                                                                               style={inputStyle}/>\r\n                                                                                        {meta.error && meta.touched &&\r\n                                                                                        <span>{meta.error}</span>}\r\n                                                                                    </div>\r\n                                                                                )}\r\n                                                                            </Field>\r\n                                                                        </InputLoginWrapper>\r\n                                                                        <ForgotLogin>Не помню логин</ForgotLogin>\r\n                                                                        <LogInButtonWrapper>\r\n                                                                            <LogInButton\r\n                                                                                onClick={() => (state.button = 1)}>Войти</LogInButton>\r\n                                                                            <RegistrationButton\r\n                                                                                onClick={() => (state.button = 2)}>Регистрация</RegistrationButton>\r\n                                                                        </LogInButtonWrapper>\r\n                                                                    </InputArea>\r\n                                                                </form>\r\n                                                            )}/>\r\n                                                    </LoginForm>\r\n                                                </AuthScreen>\r\n                                            }\r\n\r\n\r\n                                        </AuthorizationContent>\r\n                                    </AuthorizationWindow>)\r\n                            }\r\n\r\n\r\n                        </BaseAuthWindow>\r\n                    </MediaRequest>\r\n                </LoginWrapper>\r\n            </MainPageFlexWrapper>\r\n\r\n            <PopupPlayersChoose active={isTrouble} setActive={setIsTrouble}>\r\n                <span className='ForgetPass'>Свяжитесь с нами для уточнения информации. Телефон для связи - +7 905-459-21-58</span>\r\n                <button className={`${Classes.CloseBtn} White`} onClick={() => setIsTrouble(false)}>Закрыть</button>\r\n\r\n            </PopupPlayersChoose>\r\n        </MainPageStyle>\r\n\r\n    );\r\n};\r\n\r\nexport default LoginPage;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Game-Window.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\History\\History.tsx",["791","792","793","794","795","796","797","798"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport Classes from './History.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    clearActiveEnemyPlayersForGame,\r\n    clearActiveMyPlayersForGame,\r\n    gameIsStart\r\n} from \"../../../Redux/Redusers/Game-Window/choose-team-reducer\";\r\nimport {\r\n    getApiKey, getDeleteAction, getDeletePlayerNumber, getDeleteSector, getEmail,\r\n    getEnemyPlayerTeam,\r\n    getHistory,\r\n    getMyPlayerTeam, getSelectEnemyTeamTitle, getSelectMyTeamTitle,\r\n    getThrows\r\n} from \"../../NewMainPage/Main-Preson-Selectors\";\r\nimport HistoryElement, {HistoryElementPropsType} from \"./History-Element/History-Element\";\r\nimport {\r\n    clearFieldPiece,\r\n    clearHistory,\r\n    clearThrows,\r\n} from \"../../../Redux/Redusers/Game-Window/game-statistic\";\r\nimport './History.css'\r\nimport {addGameThunk} from \"../../../Redux/Redusers/Game-Window/backend-statistic\";\r\n\r\ntype HistoryPropsType = {}\r\n\r\nconst History: React.FC<HistoryPropsType> = ({}) => {\r\n\r\n    const [tableUrl, setTableUrl] = useState('')\r\n    const [isStart, setIsStart] = useState(false)\r\n    const [crutch, setCrutch] = useState(0)\r\n    const gameHistory = useSelector(getHistory)\r\n    const players1 = useSelector(getMyPlayerTeam)\r\n    const players2 = useSelector(getEnemyPlayerTeam)\r\n    const throws = useSelector(getThrows)\r\n    const apiKey = useSelector(getApiKey)\r\n    const deleteAction = useSelector(getDeleteAction)\r\n    const deletePlayerNumber = useSelector(getDeletePlayerNumber)\r\n    const deleteSector = useSelector(getDeleteSector)\r\n    const myTeamTitle = useSelector(getSelectMyTeamTitle)\r\n    const enemyTeamTitle = useSelector(getSelectEnemyTeamTitle)\r\n    const personEmail = useSelector(getEmail)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const historyRef = useRef<any | null>(null)\r\n\r\n    const finishMatch = (e: any) => {\r\n        dispatch(gameIsStart(isStart))\r\n         \r\n        dispatch(addGameThunk(myTeamTitle, enemyTeamTitle, JSON.stringify(players1), JSON.stringify(throws), personEmail, apiKey, ))\r\n        dispatch(clearHistory())\r\n        dispatch(clearActiveMyPlayersForGame())\r\n        dispatch(clearActiveEnemyPlayersForGame())\r\n        dispatch(clearFieldPiece())\r\n        dispatch(clearThrows())\r\n    }\r\n\r\n\r\n    const history = gameHistory.map((el: any) => {\r\n        return (\r\n            <HistoryElement sector={el.sector} playerNumber={el.playerNumber} action={el.action} playerName={el.name}\r\n                            team={el.team} length={gameHistory.length} ref={historyRef}/>\r\n        )\r\n    })\r\n\r\n    console.log('gameHistory')\r\n    console.log(gameHistory)\r\n\r\n\r\n    console.log('tableUrl')\r\n    console.log(tableUrl)\r\n\r\n    useEffect(() => {\r\n        setCrutch((prev) => prev + 1)\r\n        console.log(`History count ${crutch}`)\r\n    }, [gameHistory])\r\n\r\n    useEffect(() => {\r\n        let buffArr = history\r\n        for (let i = 0; i < history.length; i++) {\r\n            if(history[i].sector === +deleteSector && history[i].playerNumber === +deletePlayerNumber && history[i].action === deleteAction)\r\n                buffArr.splice(i,1)\r\n        }\r\n        console.log('history')\r\n        console.log(history)\r\n    }, [gameHistory])\r\n\r\n    if (history.length != gameHistory.length)\r\n        console.log('Error')\r\n\r\n\r\n    return (\r\n        <div className={Classes.History}>\r\n            <div className={Classes.HistoryBlock}>\r\n                <div className={Classes.HistoryText}>\r\n                    <span className={Classes.HistoryLeft}>История матча</span>\r\n                    <span\r\n                        className={Classes.HistoryRight}>Чтобы поменять данные, нажмите на них и выберите нужные</span>\r\n                </div>\r\n                <div className={Classes.HistoryBox}>\r\n                    {history}\r\n                </div>\r\n            </div>\r\n            <button className={Classes.HistoryBtn} onClick={finishMatch}>Закончить матч</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default History;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\Navigation\\Navigation.tsx",["799","800","801","802","803","804","805","806","807","808"],"import React, {memo, useState} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAuthorization, getFirstName, getLastName} from \"../../NewMainPage/Main-Preson-Selectors\";\r\nimport Classes from './Navigation.module.css'\r\nimport {exitActiveSession} from \"../../../Redux/Redusers/Authorization/authorization-reducer\";\r\nimport NavigationLinks from \"../../Extra/Navigation-Links/Navigation-Linls\";\r\nimport './../../Extra/Mobile-Navigation.css'\r\n\r\ntype NavigationPropsType = {}\r\n\r\nconst Navigation: React.FC<NavigationPropsType> = ({}) => {\r\n\r\n\r\n    return (\r\n        <div className='DesktopNavigation'>\r\n            <div className={Classes.NavigationMenu}>\r\n\r\n\r\n\r\n                <NavigationLinks/>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(Navigation);","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\TeamChoose\\TeamChoose.tsx",["809","810","811","812"],"import React, {useEffect, useState} from 'react';\r\nimport {Select} from 'antd';\r\nimport Classes from './TeamChoose.module.css'\r\nimport './TeamChoose.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAddedTeams} from \"../../NewMainPage/Main-Preson-Selectors\";\r\nimport {\r\n    gameIsStart,\r\n    setEnemyTeamValue,\r\n    setMyTeamValue,\r\n} from \"../../../Redux/Redusers/Game-Window/choose-team-reducer\";\r\n\r\ntype TeamChoosePropsType = {}\r\n\r\nconst TeamChoose: React.FC<TeamChoosePropsType> = ({}) => {\r\n\r\n    const {Option} = Select;\r\n\r\n    const [chosenMyTeam, setChosenMyTeam] = useState('')\r\n    const [chosenEnemyTeam, setChosenEnemyTeam] = useState('')\r\n    const [isGame, setIsGame] = useState(true)\r\n\r\n    const addedTeams = useSelector(getAddedTeams)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const myTeam = addedTeams.filter((el:any) => el.isMyTeam === true)\r\n    const enemyTeam = addedTeams.filter((el:any) => el.isMyTeam === false)\r\n    const selectMyTeam = addedTeams.filter((el:any) => el.teamTitle === chosenMyTeam)\r\n    const selectEnemyTeam = addedTeams.filter((el:any) => el.teamTitle === chosenEnemyTeam )\r\n    const myTeamForSelect = myTeam.map((elem:any) =>  <Option value={elem.teamTitle} >{elem.teamTitle}</Option>)\r\n    const enemyTeamForSelect = enemyTeam.map((elem:any) =>  <Option value={elem.teamTitle} >{elem.teamTitle}</Option>)\r\n\r\n    const setMyFilterTeams = (selectMyTeam: any, chosenMyTeam: any) => {\r\n        dispatch(setMyTeamValue(selectMyTeam, chosenMyTeam))\r\n    }\r\n    const setEnemyFilterTeams = (selectEnemyTeam: any, chosenEnemyTeam: any) => {\r\n        dispatch(setEnemyTeamValue(selectEnemyTeam, chosenEnemyTeam))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMyFilterTeams(selectMyTeam, chosenMyTeam)\r\n    }, [selectMyTeam])\r\n\r\n    useEffect(() => {\r\n        setEnemyFilterTeams(selectEnemyTeam, chosenEnemyTeam)\r\n    }, [selectEnemyTeam])\r\n\r\n    const startGame =  () => {\r\n        // setIsGame(prev => prev = true)\r\n        dispatch(gameIsStart(isGame))\r\n        console.log('Game is started')\r\n    }\r\n\r\n    function onChange(value: any) {\r\n        setChosenMyTeam(value)\r\n    }\r\n    function onEnemyChange(value: any) {\r\n        setChosenEnemyTeam(value)\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        console.log('blur');\r\n    }\r\n    function onFocus() {\r\n        console.log('focus');\r\n    }\r\n    function onSearch(val: any) {\r\n        console.log('search:', val);\r\n    }\r\n\r\n    const styles = {\r\n        width: \"auto\",\r\n        border: \"none\",\r\n        backgroundColor: \"rgb(73, 61, 78);\",\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={Classes.TeamChooseWrapper}>\r\n            <div className={Classes.SelectWrapper}>\r\n                <div className={Classes.SelectBlock}>\r\n                    <span className={Classes.SelectTitle}>Моя команда</span>\r\n                    <Select\r\n                        className={Classes.Select}\r\n                        showSearch\r\n                        style={{...styles}}\r\n                        placeholder=\"Выберите команду\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onChange}\r\n                        onFocus={onFocus}\r\n                        onBlur={onBlur}\r\n                        onSearch={onSearch}\r\n                        filterOption={(input, option: any) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                    >\r\n                        {myTeamForSelect}\r\n                    </Select>\r\n                </div>\r\n                <div className={Classes.SelectBlock}>\r\n                    <span className={Classes.SelectTitle}>Команда противника</span>\r\n                    <Select\r\n                        className={Classes.Select}\r\n                        showSearch\r\n                        style={{...styles}}\r\n                        placeholder=\"Выберите команду\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onEnemyChange}\r\n                        onFocus={onFocus}\r\n                        onBlur={onBlur}\r\n                        onSearch={onSearch}\r\n                        filterOption={(input, option: any) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                    >\r\n                        {enemyTeamForSelect}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n            <button className={Classes.SelectBtn} onClick={startGame}>Начать матч</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeamChoose;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\SquardList\\SquardList.tsx",["813","814","815","816","817","818","819"],"import React, {useEffect, useState} from 'react';\r\nimport Classes from './SquardList.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getSelectEnemyTeam,\r\n    getSelectEnemyTeamTitle,\r\n    getSelectMyTeam,\r\n    getSelectMyTeamTitle, getUrlResponse\r\n} from \"../../NewMainPage/Main-Preson-Selectors\";\r\nimport PlayerItem from \"./Player-Item/Player-Item\";\r\nimport EnemyItem from \"./Enemy-Item/Enemy-Item\";\r\nimport {setSquardActive} from \"../../../Redux/Redusers/Game-Window/game-statistic\";\r\n\r\ntype SquardListPropsType = {}\r\n\r\nconst SquardList: React.FC<SquardListPropsType> = ({}) => {\r\n\r\n    const myTeam = useSelector(getSelectMyTeam)\r\n    const myTeamTitle = useSelector(getSelectMyTeamTitle)\r\n    const enemyTeam = useSelector(getSelectEnemyTeam)\r\n    const enemyTeamTitle = useSelector(getSelectEnemyTeamTitle)\r\n    const urlResponse = useSelector(getUrlResponse)\r\n\r\n    const selectMyTeam = myTeam.filter((el:any) => el.teamTitle === myTeamTitle)\r\n    const selectEnemyTeam = enemyTeam.filter((el:any) => el.teamTitle === enemyTeamTitle )\r\n\r\n    const onClick = () => {\r\n        alert('Hello')\r\n    }\r\n\r\n    let dynamicMyTeamTitle: any\r\n    let dynamicEnemyTeamTitle: any\r\n    try {\r\n          dynamicMyTeamTitle =  selectMyTeam[0].teamTitle\r\n          dynamicEnemyTeamTitle =  selectEnemyTeam[0].teamTitle\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n    const myTeamPlayers = selectMyTeam.map((el:any) => {\r\n        return(\r\n            <PlayerItem teamNumbers={el.teamNumbers} isMyTeam={el.isMyTeam} isClicked={false} teamNames={el.teamPlayers} />\r\n        )\r\n    })\r\n    const enemyTeamPlayers = selectEnemyTeam.map((el:any) => {\r\n        return(\r\n            <EnemyItem teamNumbers={el.teamNumbers} isMyTeam={el.isMyTeam} isClicked={false} teamNames={el.teamPlayers} />\r\n        )\r\n    })\r\n    console.log('myTeamPlayers')\r\n    console.log(myTeamPlayers)\r\n    return (\r\n        <div className={Classes.SquardList}>\r\n            <span className={Classes.Title}>Выберите основной состав команд</span>\r\n            <div className={Classes.SquardWrapper}>\r\n                <div className={Classes.MyTeam}>\r\n                    <span className={Classes.TeamTitle}>{dynamicMyTeamTitle}</span>\r\n                    <div className={Classes.MyPlayers}>\r\n                        {myTeamPlayers}\r\n                    </div>\r\n                </div>\r\n                <div className={Classes.EnemyTeam}>\r\n                    <span className={Classes.TeamTitle}>{dynamicEnemyTeamTitle}</span>\r\n                    <div className={Classes.MyPlayers}>\r\n                        {enemyTeamPlayers}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SquardList;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\Mobile-Footer\\Mobile-Footer.tsx",["820"],"import React, {useState} from \"react\";\r\nimport './../../Extra/Mobile-Footer.css'\r\nimport UpArrow from './../../../Images/icons/up-chevron.svg'\r\nimport DownArrow from './../../../Images/icons/down-chevron.svg'\r\nimport FooterText from \"../../Extra/Footer-Text/Footer-Text\";\r\nimport AboutProjectFooter from \"../../Extra/Footer-Text/About-Project-Footer-Text\";\r\nimport ExtraInformation from \"../../Extra/Footer-Text/Extra-information\";\r\n\r\nconst MobileFooter = () => {\r\n\r\n    const [isOpen, setIseOpen] = useState(false)\r\n    const [isExtra, setIsExtra] = useState(false)\r\n\r\n    const openFooterInfo = () => setIseOpen(!isOpen)\r\n    const openExtraInfo = () => setIsExtra((!isExtra))\r\n\r\n    const upArrow = <img className='Arrow' src={UpArrow} alt=\"\" onClick={openFooterInfo}/>\r\n    const downArrow = <img className='Arrow' src={DownArrow} alt=\"\" onClick={openFooterInfo}/>\r\n    const upArrowSecond = <img className='ArrowSecond' src={UpArrow} alt=\"\" onClick={openExtraInfo}/>\r\n    const downArrowSecond = <img className='ArrowSecond' src={DownArrow} alt=\"\" onClick={openExtraInfo}/>\r\n\r\n    return (\r\n        <footer className='MobileFooter'>\r\n            <div className='TextBlock'>\r\n                {isOpen ? upArrow : downArrow}\r\n                <span className=\"PersonPageFooterTextTitle\">Проект</span>\r\n            </div>\r\n            {isOpen && <AboutProjectFooter/>}\r\n\r\n            <div className='TextBlock'>\r\n                {isExtra ? upArrowSecond : downArrowSecond}\r\n                <span className=\"PersonPageFooterTextEnd\">Дополнительная информация</span>\r\n            </div>\r\n            {isExtra && <ExtraInformation/>}\r\n\r\n\r\n            <div className=\"ProjectStatic\">\r\n                <span className=\"PersonPageFooterTextCenter\">Связь с нами</span>\r\n                <span className=\"PersonPageFooterText\">BasFeature</span>\r\n                <span className=\"PersonPageFooterText\">+7 905-459-21-58</span>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default MobileFooter","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\Field\\Field.tsx",["821","822","823","824","825","826","827","828"],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport Classes from './Field.module.css'\r\nimport './Field.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getArrayOfMyPlayers,\r\n    getArrayOfEnemyPlayers,\r\n    getFinalMyPlayersForGame,\r\n    getSelectMyTeamTitle,\r\n    getSelectEnemyTeamTitle,\r\n    getHistory,\r\n    getFinalEnemyPlayersForGame,\r\n    getPiecePass, getActionCounter\r\n} from '../../NewMainPage/Main-Preson-Selectors';\r\nimport PopupPlayersChoose from \"../../Modal/Players-Choose/Popup-Players-Choose\";\r\nimport SuccessImg from './../../../Images/SuccessAction.svg'\r\nimport FailImg from './../../../Images/FailAction.svg'\r\nimport {\r\n    addActionToFieldPiece,\r\n    addThrows,\r\n    createStatistic,\r\n    setFieldPart,\r\n    setGameAction\r\n} from \"../../../Redux/Redusers/Game-Window/game-statistic\";\r\nimport {\r\n    setActiveEnemyPlayersForGame,\r\n    setActiveMyPlayersForGame\r\n} from \"../../../Redux/Redusers/Game-Window/choose-team-reducer\";\r\nimport AllPassStatistics from \"../../Game-Window/Field/Statistics/All-Pass-Statistics\";\r\n// import ChangePopup from \"./Change-Popup/Change-Popup\";\r\n\r\ntype FieldPropsType = {}\r\n\r\nconst Field: React.FC<FieldPropsType> = ({}) => {\r\n\r\n    const [show, setShow] = useState(false)\r\n    const [isChangeWindow, setIsChangeWindow] = useState(false)\r\n    const [isChangeWindowEnemy, setIsChangeWindowEnemy] = useState(false)\r\n    const [crutch, setCrutch] = useState(0)\r\n    const [statistics, setStatistics] = useState(false)\r\n    const myTeam = useSelector(getArrayOfMyPlayers)\r\n    const enemyTeam = useSelector(getArrayOfEnemyPlayers)\r\n    const textMyeTeam = useSelector(getFinalMyPlayersForGame)\r\n    const finalEnemyTeam = useSelector(getFinalEnemyPlayersForGame)\r\n    const myTeamTitle = useSelector(getSelectMyTeamTitle)\r\n    const enemyTeamTitle = useSelector(getSelectEnemyTeamTitle)\r\n    const historyUpdate = useSelector(getHistory)\r\n    const gameStatistics = useSelector(getPiecePass)\r\n    const actionCounter = useSelector(getActionCounter)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n         \r\n        dispatch(setActiveMyPlayersForGame());\r\n        dispatch(setActiveEnemyPlayersForGame())\r\n        setCrutch(crutch + 1)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setCrutch(crutch + 1)\r\n    }, [historyUpdate])\r\n\r\n    const showPass = (e: any) => {\r\n         \r\n        setShow(true);\r\n        console.log(e.currentTarget.href.baseVal)\r\n        dispatch(setFieldPart(e.currentTarget.id))\r\n    }\r\n\r\n    const showChangeWindow = () => {\r\n        setIsChangeWindow(true)\r\n    }\r\n\r\n    const showChangeWindowEnemy = () => {\r\n        setIsChangeWindowEnemy(true)\r\n    }\r\n\r\n    const closeResultPassWindow = useCallback((e: any) => {\r\n         \r\n        setShow(false);\r\n        const action = e.currentTarget.outerText === 'Успех' ? true : false\r\n        dispatch(setGameAction(action))\r\n        dispatch(addThrows())\r\n        dispatch(addActionToFieldPiece())\r\n        dispatch(createStatistic('player', 'testTeam'))\r\n    }, [])\r\n\r\n    const closeUnResultPassWindow = useCallback((e: any) => {\r\n         \r\n        setShow(false);\r\n        const action = e.currentTarget.outerText === 'Неудача' ? false : true\r\n        dispatch(setGameAction(action))\r\n        dispatch(addThrows())\r\n        dispatch(addActionToFieldPiece())\r\n        dispatch(createStatistic('player', 'testTeam'))\r\n    }, [])\r\n\r\n    const closeBtn = useCallback(() => {\r\n        setShow(false);\r\n    }, [])\r\n\r\n    const pass = () => {\r\n        console.log('Clicked')\r\n    }\r\n\r\n    const openAllStatistics = () => {\r\n        setStatistics(true)\r\n    }\r\n\r\n    const changeMyTeam = myTeam.filter((el: any) => myTeam.indexOf(el) > 4)\r\n\r\n    return (\r\n        <div className={Classes.Field}>\r\n            <div className={Classes.MainElements}>\r\n                <div className={Classes.FieldWrapper}>\r\n                    <div className={Classes.Wrapper}>\r\n                        <span className={Classes.TeamTitle}>{myTeamTitle}</span>\r\n                        <div className={Classes.MyTeams}>\r\n                            <div className={Classes.MyTeamElements}>\r\n                                {textMyeTeam}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.FieldMain}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1345\" height=\"755\"\r\n                             viewBox=\"0 0 1558 881\">\r\n                            <NavLink to='/newGame/14' id='14' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M973 104.5C973 211.919 885.919 299 778.5 299C671.081 299 584 211.919 584 104.5C584 66.324 594.999 30.7168 614 0.674339C661.5 1.00006 705.757 0.674316 775 0.674316C844.243 0.674316 880 0.674339 943 0.674339C962.001 30.7168 973 66.324 973 104.5Z\"\r\n                                    fill=\"#FFA859\"/>\r\n                            </NavLink>\r\n                            <NavLink to='/newGame/13' id='13' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M1168 99.6224C1168 65.5493 1163.63 32.4981 1155.42 1L943 1.00005C984 65.0797 973.806 143.677 958 179.722C943.511 212.763 921.5 243.802 878 271.336L973.5 437C1089.77 369.656 1168 243.786 1168 99.6224Z\"\r\n                                    fill=\"#FFD8B5\"/>\r\n                            </NavLink>\r\n                            <NavLink to='/newGame/12' id='12' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M779 489C849.824 489 916.228 470.073 973.429 437L878.5 271C878.5 271 835.5 300 777 299C718.5 298 678.5 271 678.5 271L583.5 436.378C640.942 469.835 707.733 489 779 489Z\"\r\n                                    fill=\"#FFC592\"/>\r\n                            </NavLink>\r\n                            <NavLink to='/newGame/11' id='11' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M389 99.6224C389 65.5493 393.37 32.4981 401.579 1L614 1.00005C573 65.0797 583.194 143.677 599 179.722C613.489 212.763 635.5 243.802 679 271.336L583.5 437C467.228 369.656 389 243.786 389 99.6224Z\"\r\n                                    fill=\"#FFD8B5\"/>\r\n                            </NavLink>\r\n                            <NavLink to='/newGame/10' id='10' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M195 104C195 68.8551 198.104 34.4354 204.054 1H402.609C402.609 1 379 82 397 174C415 266 465.5 330.5 465.5 330.5L306 446.602C236.174 350.367 195 231.992 195 104Z\"\r\n                                    fill=\"#FFC592\"/>\r\n                            </NavLink>\r\n                            <NavLink to='/newGame/9' id='9' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M465.5 330.5L306 446.602C377.789 545.543 479.864 621.082 598.614 659.609L660 470.5C660 470.5 601.5 451.5 551.5 415.5C501.5 379.5 465.5 330.5 465.5 330.5Z\"\r\n                                    fill=\"#FFA859\"/>\r\n                            </NavLink>\r\n                            <NavLink to='/newGame/8' id='8' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M779 688C841.994 688 902.658 678.026 959.5 659.572L898 470.5C898 470.5 844 489 779 489C714 489 660 470.5 660 470.5L598.5 659.572C655.342 678.026 716.006 688 779 688Z\"\r\n                                    fill=\"#FFD8B5\"/>\r\n                            </NavLink>\r\n                            <NavLink to='/newGame/7' id='7' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M1092.5 330.5L1252 446.602C1180.21 545.543 1078.14 621.082 959.386 659.609L898 470.5C898 470.5 956.5 451.5 1006.5 415.5C1056.5 379.5 1092.5 330.5 1092.5 330.5Z\"\r\n                                    fill=\"#FFA859\"/>\r\n                            </NavLink>\r\n                            <NavLink to='/newGame/6' id='6' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M1363 104C1363 68.8551 1359.9 34.4354 1353.95 1H1155.39C1155.39 1 1179 82 1161 174C1143 266 1092.5 330.5 1092.5 330.5L1252 446.602C1321.83 350.367 1363 231.992 1363 104Z\"\r\n                                    fill=\"#FFC592\"/>\r\n                            </NavLink>\r\n                            <NavLink to='/newGame/5' id='5' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M1363 104C1363 68.8551 1359.9 34.4354 1353.95 1H1558V330L1317.87 329.5C1346.94 260.118 1363 183.934 1363 104Z\"\r\n                                    fill=\"#FFA859\"/>\r\n                            </NavLink>\r\n                            <NavLink to='/newGame/4' id='4' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M1558 882V330L1317.87 329.5C1252.56 485.396 1121.57 606.955 959.5 659.572L1032 882H1558Z\"\r\n                                    fill=\"#FFD8B5\"/>\r\n                            </NavLink>\r\n                            <NavLink to='/newGame/3' id='3' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M598.5 659.572C655.342 678.026 716.006 688 779 688C841.994 688 902.658 678.026 959.5 659.572L1032 882H527L598.5 659.572Z\"\r\n                                    fill=\"#FFA859\"/>\r\n                            </NavLink>\r\n                            <NavLink to='/newGame/2' id='2' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M0 882H527L598.5 659.572C436.608 607.011 305.722 485.656 240.338 330L0 329.5V882Z\"\r\n                                    fill=\"#FFD8B5\"/>\r\n                            </NavLink>\r\n                            <NavLink to='/newGame/1' id='1' onClick={showPass}>\r\n                                <path\r\n                                    d=\"M204.054 1C198.104 34.4354 195 68.8552 195 104C195 184.126 211.137 260.484 240.338 330L0 329.5V1H204.054Z\"\r\n                                    fill=\"#FFA859\"/>\r\n                            </NavLink>\r\n                        </svg>\r\n                    </div>\r\n                    <div className={Classes.Wrapper}>\r\n                        <span className={`${Classes.TeamTitle} ${Classes.TeamTitleEnemy}`}>{enemyTeamTitle}</span>\r\n                        <div className={Classes.MyTeams}>\r\n                            <div className={Classes.MyTeamElements}>\r\n                                {finalEnemyTeam}\r\n                            </div>\r\n                            {/*<div className={`${Classes.MyPlayersChange} ${Classes.MyPlayersChangeEnemy}`} onClick={showChangeWindowEnemy}>Замена</div>*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    statistics ? (<AllPassStatistics statistics={setStatistics} fieldPieces={gameStatistics}\r\n                                                     allGamePass={actionCounter}/>) :\r\n                        (<button className={Classes.MessageBtn}\r\n                                 onClick={openAllStatistics}>Показать статистику</button>)\r\n                }\r\n            </div>\r\n\r\n            <PopupPlayersChoose active={show} setActive={setShow}>\r\n                <div className={Classes.Action}>\r\n                    <span className={Classes.Sector}>Сектор</span>\r\n\r\n                    <div className={Classes.ButtonsWrapper}>\r\n                        <div className={Classes.SuccessBtnWrapper} onClick={closeResultPassWindow}>\r\n                            <img src={FailImg} alt=\"\" style={{width: '80px', margin: 'auto'}} className={Classes.Img}/>\r\n                            <span\r\n                                className={Classes.Btn + \" \" + Classes.resultPass}>Успех\r\n                            </span>\r\n                        </div>\r\n                        <div className={Classes.FailBtnWrapper} onClick={closeUnResultPassWindow}>\r\n                            <img src={SuccessImg} alt=\"\" style={{width: '80px', margin: 'auto'}}/>\r\n                            <span\r\n                                className={Classes.Btn + \" \" + Classes.unResultPass}>Неудача\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <button className={Classes.PopupWindowBtn} onClick={closeBtn}>Отмена</button>\r\n                </div>\r\n            </PopupPlayersChoose>\r\n\r\n            <PopupPlayersChoose active={isChangeWindow} setActive={setIsChangeWindow}>\r\n                <h1>Блок замены игроков для моих команд</h1>\r\n                {changeMyTeam}\r\n            </PopupPlayersChoose>\r\n\r\n            <PopupPlayersChoose active={isChangeWindowEnemy} setActive={setIsChangeWindowEnemy}>\r\n                <h1>Блок замены игроков для команд противника</h1>\r\n                {enemyTeam}\r\n            </PopupPlayersChoose>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Field;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\Mobile-Navigation\\Mobile-Navigation.tsx",["829"],"import React, {useState} from \"react\";\r\nimport Classes from './Mobile-Navigation.module.css'\r\nimport NavigationLinks from \"../../Extra/Navigation-Links/Navigation-Linls\";\r\nimport './../../Extra/Mobile-Navigation.css'\r\nimport HamburgerLogo from './../../../Images/icons/menu.svg'\r\nimport CloseMenu from './../../../Images/icons/cancel.svg'\r\n\r\nconst MobileNavigation = () => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const openMobileMenu = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const hamburgerIcon = <img className='Hamburger' src={HamburgerLogo} alt=\"\" onClick={openMobileMenu}/>\r\n    const closeIcon = <img className='Hamburger' src={CloseMenu} alt=\"\" onClick={openMobileMenu}/>\r\n\r\n    const closeMobileMenu = () => setIsOpen(false)\r\n\r\n    return(\r\n        <nav className='MobileNavigation'>\r\n            {isOpen ? closeIcon : hamburgerIcon}\r\n            { isOpen && <NavigationLinks isMobile={true} closeMobileMenu={closeMobileMenu}/>}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default  MobileNavigation","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\Footer\\Footer.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewMainPage\\Popup-Window\\Full-List-Players.tsx",["830","831"],"import React, {useCallback, useEffect, useRef, useState} from 'react'\r\nimport './Full-List-Players.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getChosenTeamCard} from \"../Main-Preson-Selectors\";\r\nimport { removeTeamCard } from '../../../Redux/Redusers/Game-Window/add-team-form-reducer';\r\n\r\ntype FullListPlayersPropsType = {\r\n    setlistPlayers: any\r\n    listPlayers: boolean\r\n    addedTeams: any\r\n}\r\n\r\nconst FullListPlayers: React.FC<FullListPlayersPropsType> = ({setlistPlayers, listPlayers, addedTeams, ...props}): any => {\r\n\r\n    const modalRef = useRef<HTMLDivElement | null>(null)\r\n    const selectTeamCard = useSelector(getChosenTeamCard)\r\n    const dispatch = useDispatch()\r\n    let selectTeam: any\r\n    let players: any\r\n    let numbers: any\r\n\r\n    try {\r\n         selectTeam = addedTeams.filter((el: any) => {\r\n            return el.teamTitle === selectTeamCard\r\n        })\r\n         \r\n         players = selectTeam[0].teamPlayers.map((elem: any) => {\r\n              \r\n            return(\r\n                <span className=\"players\">{elem}</span>\r\n            )\r\n        })\r\n\r\n         numbers = selectTeam[0].teamNumbers.map((elem: any) => {\r\n            return(\r\n                <span className='numbers'>{elem}</span>\r\n            )\r\n        })\r\n    }\r\n    catch (err) {\r\n        console.log(err)\r\n    }\r\n\r\n    console.log(selectTeam)\r\n    console.log(selectTeam.teamPlayers)\r\n    console.log(numbers)\r\n\r\n\r\n    const deleteCard = (e: any) => {\r\n        dispatch(removeTeamCard(selectTeamCard))\r\n        setlistPlayers(false)\r\n    }\r\n\r\n    const keyPress = useCallback(e => {\r\n        if (e.key === 'Escape' && listPlayers) {\r\n            setlistPlayers(false)\r\n        }\r\n    }, [setlistPlayers, listPlayers])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', keyPress);\r\n        return () => document.removeEventListener('keydown', keyPress);\r\n    })\r\n\r\n    const closeWindow = useCallback(() => {\r\n        setlistPlayers(false);\r\n    },[])\r\n\r\n    return (listPlayers) ? (\r\n        <div className='listPlayers' ref={modalRef} onClick={closeWindow}>\r\n            <div className={selectTeam[0].isMyTeam ? \"listPlayers-Inner\" : \"listPlayers-Inner enemies\" } onClick={e => e.stopPropagation()}>\r\n                {/*{props.children}*/}\r\n                <div className='selectTeamName'>{selectTeamCard}</div>\r\n                <div className='playersWrapper'>\r\n                    <div className='playersMiddleware'>\r\n                        <div className='namesWrapper'>{players}</div>\r\n                        <div className='numbersWrapper'>{numbers}</div>\r\n                    </div>\r\n                    <div className='buttons'>\r\n                        <button className='close-btn' onClick={closeWindow}>Закрыть</button>\r\n                        <button className='close-btn' onClick={deleteCard}>Удалить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : \"\";\r\n}\r\n\r\nexport default FullListPlayers","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewMainPage\\Teams-Card\\Teams-Card.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\About-Us\\TeamMembers\\TeamMembers.tsx",["832","833","834"],"import React, {memo, useEffect, useState} from \"react\";\r\nimport Classes from './TeamMembers.module.css'\r\nimport Katya from './../../../Images/minimize/Katya.png'\r\nimport Daniil from './../../../Images/minimize/Daniil.png'\r\nimport Ruvim from './../../../Images/minimize/Ruvim.png'\r\nimport Egor from './../../../Images/minimize/Egor.png'\r\nimport Yura from './../../../Images/minimize/Yura.png'\r\nimport Ivan from './../../../Images/minimize/Ivan.png'\r\nimport Kirill from './../../../Images/minimize/Kirill.png'\r\nimport NikitaKaptian from './../../../Images/minimize/Kaptian.png'\r\nimport Nikita from './../../../Images/minimize/Nikita.png'\r\nimport LoadableImg from \"../../Loadable-Img/Loadable-Img\";\r\nimport LeftMessagePiece from '../../../Images/LeftPartMessage.svg'\r\nimport RightMiddleMessagePiece from '../../../Images/VectorRightMiddle.svg'\r\nimport PopupPlayersChoose from \"../../Modal/Players-Choose/Popup-Players-Choose\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSelectTeamMembers, getTeamMembers} from \"../../NewMainPage/Main-Preson-Selectors\";\r\nimport TeamMembersElement from \"./Team-Members-Element/Team-Members-Element\";\r\nimport {setTeamMember} from \"../../../Redux/Redusers/Game-Window/about-us-reducer\";\r\n\r\n\r\nconst TeamMembers = ({}) => {\r\n\r\n    const [isTeamMembers, setIsTeamMembers] = useState(false)\r\n    const personTeamInfo = useSelector(getTeamMembers);\r\n    const personInfo = useSelector(getSelectTeamMembers)\r\n    const dispatch = useDispatch()\r\n\r\n    const showInfo = (e: any) => {\r\n         \r\n        setIsTeamMembers(true)\r\n        dispatch(setTeamMember(\r\n            e.currentTarget.parentElement.parentElement.parentElement.children[0].innerText))\r\n        console.log(\r\n            e.currentTarget.parentElement.parentElement.parentElement.children[0].innerText)\r\n    }\r\n\r\n    const showInfoRight = (e:any) => {\r\n        setIsTeamMembers(true)\r\n        dispatch(setTeamMember(\r\n            e.currentTarget.parentElement.parentElement.parentElement.children[1].innerText))\r\n        console.log(\r\n            e.currentTarget.parentElement.parentElement.parentElement.children[1].innerText)\r\n    }\r\n    let teammatesInfo\r\n\r\n\r\n    try {\r\n        teammatesInfo = personInfo.map((el: any) => {\r\n            return (\r\n                <TeamMembersElement name={el.name} vk={el.vk} email={el.email}  setIsTeamMembers={setIsTeamMembers}/>\r\n            )\r\n        })\r\n    } \r\n    catch (e) {\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className={Classes.TeamMembers}>\r\n            <div className={Classes.Wrapper}>\r\n                <div className={Classes.LeftSide}>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Katya}/>\r\n                            <div className={Classes.PersonName}>Шепенева Екатерина</div>\r\n                        </div>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={Classes.MessageBox}>\r\n                                <span className={Classes.MessageText}>Всем привет! Я занималась разработкой дизайна и макетов для нашего проекта.</span>\r\n                                <button onClick={showInfo} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessage}>\r\n                                <img src={LeftMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Daniil}/>\r\n                            <div className={Classes.PersonName}>Даниил Шестопалов</div>\r\n                        </div>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={Classes.MessageBox}>\r\n                                <span className={Classes.MessageText}>Хай, я iOS разработчик.</span>\r\n                                <button onClick={showInfo} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessage}>\r\n                                <img src={LeftMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Ruvim}/>\r\n                            <div className={Classes.PersonName}>Рувим Бурлаков</div>\r\n                        </div>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={Classes.MessageBox}>\r\n                                <span\r\n                                    className={Classes.MessageText}>Привет, я второй разработчик приложения на iOS.</span>\r\n                                <button onClick={showInfo} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessage}>\r\n                                <img src={LeftMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={NikitaKaptian}/>\r\n                            <div className={Classes.PersonName}>Сафронов Никита</div>\r\n                        </div>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={Classes.MessageBox}>\r\n                                <span\r\n                                    className={Classes.MessageText}>Приветствую тебя, я капитан команды BasFeature.</span>\r\n                                <button onClick={showInfo} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessage}>\r\n                                <img src={LeftMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Ivan}/>\r\n                            <div className={Classes.PersonName}>Вешкин Иван</div>\r\n                        </div>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={Classes.MessageBox}>\r\n                                <span className={Classes.MessageText}>Привет, я frontend разработчик.</span>\r\n                                <button onClick={showInfo} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessage}>\r\n                                <img src={LeftMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={Classes.RightSide}>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={`${Classes.MessageBox} ${Classes.Right}`}>\r\n                                <span className={Classes.MessageText}>Здравствуйте, я люблю пиццу!</span>\r\n                                <button onClick={showInfoRight} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessageMiddle}>\r\n                                <img src={RightMiddleMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Egor}/>\r\n                            <div className={Classes.PersonName}>Егор Скубко</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={`${Classes.MessageBox} ${Classes.Right}`}>\r\n                                <span className={Classes.MessageText}>Привет. Я технический писатель.</span>\r\n                                <button onClick={showInfoRight} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessageMiddle}>\r\n                                <img src={RightMiddleMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Nikita}/>\r\n                            <div className={Classes.PersonName}>Никита Кучеренко</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={`${Classes.MessageBox} ${Classes.Right}`}>\r\n                                <span className={Classes.MessageText}>Здравствуй. Я backend разработчик.</span>\r\n                                <button onClick={showInfoRight} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessageMiddle}>\r\n                                <img src={RightMiddleMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Yura}/>\r\n                            <div className={Classes.PersonName}>Макаров Юра</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={`${Classes.MessageBox} ${Classes.Right}`}>\r\n                                <span className={Classes.MessageText}>Доброго дня. Я второй Android разработчик.</span>\r\n                                <button onClick={showInfoRight} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessageMiddle}>\r\n                                <img src={RightMiddleMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Kirill}/>\r\n                            <div className={Classes.PersonName}>Лопырин Кирилл</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <PopupPlayersChoose active={isTeamMembers} setActive={setIsTeamMembers}>\r\n                <div className={Classes.MyInfo}>\r\n                    {teammatesInfo}\r\n                </div>\r\n            </PopupPlayersChoose>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default memo(TeamMembers);","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\About-Us\\HederDescription\\HeaderDescription.tsx",["835"],"import React, {memo} from \"react\";\r\nimport Classes from './HederDescription.module.css'\r\n\r\nconst HeaderDescription = ({}) => {\r\n\r\n    return (\r\n        <div className={Classes.HeaderDescription}>\r\n            <div className={Classes.Wrapper}>\r\n                <span className={Classes.Text}>Добрый день!</span>\r\n                <span className={`${Classes.Text} ${Classes.Main}`}>\r\n                    Данный сайт создан студентами ИТА ЮФУ\r\n                    в рамках проекта по дисциплине “Введение в инженерную деятельность”\r\n                </span>\r\n                <span className={`${Classes.Text} ${Classes.Past}`}>Мы получили зачёт, вы - сайт.</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(HeaderDescription)","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Statistics\\Statistics-Body\\Statistics-Body.tsx",["836","837","838","839"],"import React, {useEffect, useRef, useState} from \"react\"\r\nimport Classes from './Statistics-Body.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getListOfGamesThunk, setEmail} from \"../../../Redux/Redusers/Game-Window/backend-statistic\";\r\nimport {getApiKey, getListOfGame, getOneGame} from \"../../NewMainPage/Main-Preson-Selectors\";\r\nimport GamesElements from \"./Games-Elements/Games-Elements\";\r\nimport PopupPlayersChoose from \"../../Modal/Players-Choose/Popup-Players-Choose\";\r\n\r\nconst StatisticsBody = ({}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const dispatch = useDispatch()\r\n    const apiKey = useSelector(getApiKey)\r\n    const listOfGames = useSelector(getListOfGame)\r\n    const inputRef = useRef<HTMLInputElement | null>(null)\r\n\r\n    useEffect(() => {\r\n        dispatch(getListOfGamesThunk(apiKey))\r\n    }, [])\r\n\r\n    let games\r\n\r\n    try {\r\n        games = listOfGames.map((el: any) => {\r\n            return(\r\n                <GamesElements team1={el.team1} team2={el.team2} date={el.date}/>\r\n            )\r\n        })\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n    const inputOnBlur = (event: any) => {\r\n        setInputValue(event.target.value)\r\n    }\r\n    const sendBtn = () => {\r\n        dispatch(setEmail(inputValue))\r\n        // @ts-ignore\r\n        inputRef.current.value = ''\r\n    }\r\n\r\n    return (\r\n        <div className={Classes.MainWrapper}>\r\n            <div className={Classes.EmailBlock}>\r\n                <span\r\n                    className={Classes.Text}>Введите email для получения доступа просмотра статистики после игры</span>\r\n                <div className={Classes.EmailWrapper}>\r\n                    <input className={Classes.InputEmail} type=\"text\" placeholder=' Введите email' onBlur={inputOnBlur} ref={inputRef}/>\r\n                    <button className={Classes.SubmitBtn} onClick={sendBtn}>Отправить</button>\r\n                </div>\r\n            </div>\r\n            <div className={Classes.StatisticsBlock}>\r\n                <span className={Classes.Text}>Статистика последних игр</span>\r\n                <div className={Classes.Games}>{games}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatisticsBody","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Statistics\\Description\\Description.tsx",["840"],"import React from \"react\";\r\nimport Classes from './Description.module.css'\r\nimport SfeduLogo from \"../../../Images/Sfedu_logo.png\";\r\nimport './../../NewMainPage/MainPersonPage.css'\r\n\r\nconst Description = ({}) => {\r\n\r\n    return (\r\n        <div className={Classes.MainWrapper}>\r\n            <div className='HeaderDescription'\r\n                 style={{display: 'flex', paddingBottom: '50px', alignItems: 'center'}}>\r\n                <div className='HeaderText'>\r\n                    <span className='SubHeaderTextOne'>Здесь вы сможете</span>\r\n                    <span className='SubHeaderTextTwo'>Просматривать статистику прошедших матчей</span>\r\n                </div>\r\n                <div className='SfeduLogo'>\r\n                    <img src={SfeduLogo} alt='Логотип ЮФУ' style={{height: '258px', width: '276px'}}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Description","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Personal.jsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Player-Change-Container.tsx",["841"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport PlayerChange from \"./Player-Change\";\r\nimport {AppStateType} from \"../../../Redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n\r\n    return{\r\n        window_name: state.playerChange.windowName,\r\n        player_name: state.playerChange.playerName,\r\n        playersForChange: state.playerChange.playerForChange,\r\n        // @ts-ignore\r\n        activePlayers: state.passManager.actualTeam,\r\n    }\r\n}\r\n\r\nconst PlayerChangeContainer = connect(mapStateToProps,{})(PlayerChange);\r\nexport default PlayerChangeContainer;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Game-History\\Game-History-Container.tsx",["842"],"import React from 'react';\r\nimport GameHistory from \"./Game-History\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../Redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        window_name: state.gameHistory.windowName,\r\n        state: state.gameHistory.history\r\n    }\r\n}\r\n\r\nconst GameHistoryContainer = connect(mapStateToProps, {})(GameHistory);\r\n\r\nexport default GameHistoryContainer;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\About-Us\\TeamMembers\\Team-Members-Element\\Team-Members-Element.tsx",["843","844"],"import React from \"react\";\r\nimport Classes from \"./Team-Members-Element.module.css\"\r\nimport VkIcon from \"./../../../../Images/icons/vk (1).png\"\r\nimport EmailIcon from \"./../../../../Images/icons/gmail.png\"\r\nimport PhoneIcon from \"./../../../../Images/icons/phone.png\"\r\nimport {clearSelectTeamMember} from \"../../../../Redux/Redusers/Game-Window/about-us-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype TeamMembersElement = {\r\n    name: string\r\n    vk: string\r\n    email: string\r\n    setIsTeamMembers: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nconst TeamMembersElement:React.FC<TeamMembersElement> = ({name,vk,email, setIsTeamMembers}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const closeWindow = () => {\r\n        setIsTeamMembers(false)\r\n        dispatch(clearSelectTeamMember())\r\n    }\r\n\r\n    return (\r\n        <div className={Classes.PersonInfoWrapper}>\r\n            <h2 className={Classes.Description}>{`Меня зовут ${name}, со мной можно сязаться через:`}</h2>\r\n            <div className={Classes.ElementWrapper}>\r\n                <img className={Classes.Icons} src={VkIcon} alt=\"\"/>\r\n                <div className={Classes.Vk}>{`  ${vk}`}</div>\r\n            </div>\r\n            <div className={Classes.ElementWrapper}>\r\n                <img className={Classes.Icons} src={EmailIcon} alt=\"\"/>\r\n                <div className={Classes.Email}>{` ${email}`}</div>\r\n            </div>\r\n            <button className={Classes.CloseBtn} onClick={closeWindow}>Закрыть</button>\r\n        </div>\r\n    )\r\n}\r\nexport default TeamMembersElement","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Statistics\\Statistics-Body\\Games-Elements\\Games-Elements.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Loadable-Img\\Loadable-Img.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Extra\\Footer-Text\\Footer-Text.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Modal\\Players-Choose\\Popup-Players-Choose.jsx",["845","846"],"import React, {useCallback, useEffect, useRef} from 'react';\r\nimport Classes from './Popup-Players-Choose.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {clearSelectTeamMember} from \"../../../Redux/Redusers/Game-Window/about-us-reducer\";\r\n\r\nconst PopupPlayersChoose = (props) => {\r\n\r\n    const modalRef = useRef();\r\n    const dispatch = useDispatch()\r\n\r\n    /* Проверка на нажатие 'Esc' */\r\n    const keyPress = useCallback(e => {\r\n        if (e.key === 'Escape' && props.active) {\r\n            props.setActive(false)\r\n            dispatch(clearSelectTeamMember())\r\n        }\r\n    }, [props.setActive, props.active])\r\n\r\n    let closeWindow = useCallback(() => {\r\n        props.setActive(false);\r\n        dispatch(clearSelectTeamMember())\r\n    },[])\r\n\r\n    /* Скрытие окон*/\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', keyPress);\r\n        return () => document.removeEventListener('keydown', keyPress);\r\n    })\r\n    return(\r\n        <div className={props.active ?  Classes.modal + \" \" + Classes.active : Classes.modal} onClick={ closeWindow} ref={modalRef}>\r\n\r\n            <div className={props.active ?  Classes.modalContent + \" \" + Classes.active : Classes.modalContent} onClick={e => e.stopPropagation()}>\r\n                {/*<span className={Classes.closeIcon} onClick={closeWindow}>x</span>*/}\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopupPlayersChoose;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Extra\\Navigation-Links\\Navigation-Linls.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Profile\\Profile-Container.jsx",["847"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    changeLastName, changeMiddleName,\r\n    changeName,\r\n    changeUserName\r\n} from \"../../../Redux/Redusers/Authorization/authorization-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        firstName: state.auth.firstName,\r\n        lastName: state.auth.lastName,\r\n        middleName: state.auth.middleName,\r\n        apiKey: state.auth.apiKey,\r\n        username: state.auth.loginName,\r\n    }\r\n}\r\n\r\nconst ProfileContainer = connect(mapStateToProps, {\r\n    changeName,\r\n    changeLastName,\r\n    changeMiddleName,\r\n    changeUserName\r\n})(Profile);\r\nexport default ProfileContainer;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Extra\\Footer-Text\\About-Project-Footer-Text.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Extra\\Footer-Text\\Extra-information.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\Players-Container.jsx",["848"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Players from \"./Players\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        playerName: state.players.playerNameData,\r\n        playerInfo: state.players.playerInfoData,\r\n    }\r\n}\r\n\r\nconst PlayersContainer = connect(mapStateToProps, {})(Players);\r\n\r\nexport default PlayersContainer;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Left-Menu\\LeftMenu.jsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Teams\\Teams-Container.jsx",["849","850"],"import React from 'react';\r\nimport Classes from './Teams.module.css';\r\nimport {connect} from \"react-redux\";\r\nimport Teams from \"./Teams\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {}\r\n}\r\n\r\nconst TeamsContainer = connect(mapStateToProps, {})(Teams);\r\nexport default TeamsContainer;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\SquardList\\Enemy-Item\\Enemy-Item.tsx",["851","852","853","854"],"import React, {useEffect, useRef, useState} from \"react\";\r\nimport './../Player-Item/Player-Item.css'\r\nimport Classes from \"../SquardList.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    setEnemyTeamPlayers,\r\n    setIndexOfClickedEnemyPlayer\r\n} from \"../../../../Redux/Redusers/Game-Window/choose-team-reducer\";\r\nimport {createStatisticForEnemyTeam, setChosenPlayer} from \"../../../../Redux/Redusers/Game-Window/game-statistic\";\r\n\r\ntype PlayerItemPropsType = {\r\n    teamNumbers: any\r\n    isMyTeam: boolean\r\n    isClicked: boolean\r\n    teamNames: any\r\n}\r\n\r\nconst EnemyItem: React.FC<PlayerItemPropsType> = ({teamNumbers, isMyTeam, isClicked,teamNames}) => {\r\n\r\n    const [click, setClick] = useState(isClicked)\r\n    const [playerID, setPlayerID] = useState(null)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setEnemyTeamPlayers(playersNumb))\r\n        dispatch(createStatisticForEnemyTeam(teamNumbers, teamNames))\r\n    },[])\r\n\r\n    const onClick = (e: any) => {\r\n        setClick((prev) => !prev)\r\n        setPlayerID(e.target.id)\r\n        dispatch(setChosenPlayer(e.target.id))\r\n        dispatch(setIndexOfClickedEnemyPlayer(+e.target.id))\r\n         \r\n    }\r\n\r\n    console.log('click')\r\n    console.log(click)\r\n\r\n    let count = 0\r\n    const playersNumb = teamNumbers.map((el: any) => {\r\n        return (\r\n            <div\r\n                className={`${Classes.EnemyPlayersElement}`}\r\n                onClick={onClick} id={el}>{el}</div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {playersNumb}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EnemyItem","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\SquardList\\Player-Item\\Player-Item.tsx",["855","856","857","858","859"],"import React, {useEffect, useState} from \"react\";\r\nimport './Player-Item.css'\r\nimport Classes from \"../SquardList.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    setActivePlayer,\r\n    setIndexOfClickedPlayer,\r\n    setMyTeamPlayers\r\n} from \"../../../../Redux/Redusers/Game-Window/choose-team-reducer\";\r\nimport {createStatisticForMyTeam, setChosenPlayer} from \"../../../../Redux/Redusers/Game-Window/game-statistic\";\r\n\r\ntype PlayerItemPropsType = {\r\n    teamNumbers: any\r\n    teamNames: any\r\n    isMyTeam: boolean\r\n    isClicked: boolean\r\n}\r\n\r\nconst PlayerItem: React.FC<PlayerItemPropsType> = ({teamNumbers, isMyTeam, isClicked,teamNames}) => {\r\n\r\n    const [click, setClick] = useState(isClicked)\r\n    const [playerID, setPlayerID] = useState(null)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setMyTeamPlayers(playersNumb))\r\n        dispatch(createStatisticForMyTeam(teamNumbers, teamNames))\r\n    },[])\r\n\r\n    const style = 'isClicked'\r\n\r\n    const onClick = (e: any) => {\r\n         \r\n        setClick((prev) => !prev)\r\n        setPlayerID(e.target.id)\r\n        dispatch(setChosenPlayer(e.target.id))\r\n        dispatch(setIndexOfClickedPlayer(+e.target.id))\r\n    }\r\n\r\n    const playersNumb = teamNumbers.map((el: any) => {\r\n        return (\r\n            <div\r\n                className={`${Classes.MyPlayersElement}`}\r\n                onClick={onClick} id={el}>{el}</div>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            {playersNumb}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayerItem","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Field\\Statistics\\All-Pass-Statistics.jsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\NewField\\History\\History-Element\\History-Element.tsx",["860","861","862"],"import Classes from \"../History.module.css\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {removeHistoryElement} from \"../../../../Redux/Redusers/Game-Window/game-statistic\";\r\nimport './../History.css'\r\n\r\nexport type HistoryElementPropsType = {\r\n    sector: number\r\n    playerNumber: number\r\n    action: boolean\r\n    playerName: string\r\n    team: string\r\n    length: number\r\n    ref: any\r\n}\r\n\r\nconst HistoryElement: React.FC<HistoryElementPropsType> = ({\r\n                                                               sector,\r\n                                                               action,\r\n                                                               playerName,\r\n                                                               team,\r\n                                                               playerNumber,\r\n                                                               length,\r\n                                                               ref\r\n                                                           }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [count, setCount] = useState(0)\r\n    const [crutch, setCrutch] = useState(0)\r\n\r\n\r\n    const cancelFunc = (e: any) => {\r\n         \r\n        let action = e.target.parentElement.children[2].innerText === 'Успешное' ? true : false\r\n        dispatch(removeHistoryElement(+(e.target.parentElement.children[0].lastChild.data),\r\n            action,\r\n            +e.target.parentElement.children[3].lastChild.data))\r\n        // e.currentTarget.parentElement.className = 'History_HistoryBoxWrapper__1k25w Disable'\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCrutch(1)\r\n    }, [length])\r\n\r\n    return (\r\n        <div className={Classes.HistoryBoxWrapper} ref={ref}>\r\n            {/*<span className={Classes.HistoryBoxText}>{playerNumber}</span>*/}\r\n            <span className={Classes.HistoryBoxText}>Игрок команды с номером {playerNumber}</span>\r\n            <span className={Classes.HistoryBoxText}>совершил</span>\r\n            <span\r\n                className={`${Classes.HistoryBoxText} ${Classes.HistorySuccess}`}>{action ? 'Успешное' : 'Неудачное'}</span>\r\n            <span className={Classes.HistoryBoxText}>действие в секторе {sector}</span>\r\n            <span className={`${Classes.HistoryBoxText} ${Classes.HistoryCancel}`} onClick={cancelFunc}>Отменить</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HistoryElement","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Field\\FieldContainer.tsx",["863"],"import React from 'react';\r\nimport {\r\n    showPass, updateHistory,\r\n}\r\nfrom \"../../../Redux/Redusers/Game-Window/game-history-reducer\";\r\nimport Field from \"./Field\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    clickLogger,\r\n    passCounter, playerFinder,\r\n    playerPassCounter\r\n}\r\nfrom \"../../../Redux/Redusers/Game-Window/pass-manager-reducer\";\r\nimport {AppStateType} from \"../../../Redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        // @ts-ignore\r\n        actualTeam: state.passManager.actualTeam,\r\n        // @ts-ignore\r\n        currentName: state.passManager.fieldCurrentName,\r\n        // @ts-ignore\r\n        currentPlayer: state.passManager.numberCurrentPlayer,\r\n        // @ts-ignore\r\n        currentPass: state.passManager.passCurrentInfo,\r\n        // @ts-ignore\r\n        allGamePass: state.passManager.gamePassCount,\r\n        // @ts-ignore\r\n        allFieldPiece: state.passManager.piecePass,\r\n        // @ts-ignore\r\n        activePlayer: state.passManager.activePlayer,\r\n    }\r\n}\r\n\r\n// @ts-ignore\r\nconst FieldContainer = connect(mapStateToProps, {\r\n    updateHistory,\r\n    showPass,\r\n    clickLogger,\r\n    playerFinder,\r\n    passCounter,\r\n    playerPassCounter\r\n    // @ts-ignore\r\n})(Field);\r\n\r\nexport default FieldContainer;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Game-History\\Game-History.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Player-Change.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Hooks\\use-on-screen\\useOnScreen.ts",["864","865"],"import React, {useEffect, useState} from \"react\";\r\n\r\nfunction useOnScreen(ref: React.MutableRefObject<HTMLElement | null>, rootMargin = \"0px\") {\r\n    // State and setter for storing whether element is visible\r\n    const [isIntersecting, setIntersecting] = useState(false);\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                // Update our state when observer callback fires\r\n                setIntersecting(entry.isIntersecting);\r\n            },\r\n            {\r\n                rootMargin,\r\n            }\r\n        );\r\n        if (ref.current) {\r\n            observer.observe(ref.current);\r\n        }\r\n        return () => {\r\n            if (ref.current)\r\n                observer.unobserve(ref.current);\r\n        };\r\n    }, []); // Empty array ensures that effect is only run on mount and unmount\r\n    return isIntersecting;\r\n}\r\n\r\nexport default useOnScreen","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Profile\\Profile.jsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Teams\\Teams.jsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\Players.jsx",["866"],"import React from 'react';\r\nimport Classes from './Players.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PlayerItem from \"./PlayerItem/PlayerItem\";\r\nimport PlayerInfo from \"./PlayerInfo/PlayerInfo\";\r\n\r\nconst Players = (props) => {\r\n\r\n\r\n    let playerNameElementsData = props.playerName\r\n        .map(player => <PlayerItem name={player.name} id={player.id}/>);\r\n    let playerInfoElementsData = props.playerInfo\r\n        .map(player => <PlayerInfo position={player.position} number={player.number} role={player.role}\r\n                                   rating={player.rating}/>);\r\n\r\n    return (\r\n        <div className={Classes.playerContainer}>\r\n            <div className={Classes.playerNamesWrapper}>\r\n                {playerNameElementsData}\r\n            </div>\r\n            {playerInfoElementsData}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Players;","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Game-History\\HistoryItem\\HistoryItem.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Active-Player-For-Change\\Active-Player-For-Change.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Field\\Field.jsx",["867","868","869","870"],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport Classes from './Field.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PopupPlayersChoose from \"../../Modal/Players-Choose/Popup-Players-Choose\";\r\nimport PlayerSubItem from \"./Player-Item/Player-Item\";\r\nimport AllPassStatistics from \"./Statistics/All-Pass-Statistics\";\r\nimport {\r\n    clickLogger,\r\n    passCounter,\r\n    playerFinder,\r\n    playerPassCounter\r\n} from \"../../../Redux/Redusers/Game-Window/pass-manager-reducer\";\r\nimport {updateHistory} from \"../../../Redux/Redusers/Game-Window/game-history-reducer\";\r\n\r\n\r\nconst Field = (props) => {\r\n    let renderCount=0;\r\n    renderCount++;\r\n    console.log(renderCount);\r\n    // Количество передач\r\n    let [pass, setPass] = useState(0);\r\n    // Всплывающее окно статистики\r\n    let [statistics, setStatistics] = useState(false);\r\n    // Название кнопки с результативной передачей\r\n    let result = 'Успешно';\r\n    // Название кнопки с нерезультативной передачей\r\n    let unResult = 'Неуспешно';\r\n    // Номер игрока\r\n    let [playerInfo, setPlayerInfo] = useState('');\r\n    // Ссылка на фрагмент поля\r\n    let [rend, setRend] = useState(null);\r\n    // Название сектора на русском языке\r\n    let [field, setField] = useState(\"\");\r\n    /* Задание начальных параметров у окна с передачами*/\r\n    let [show, setShow] = useState(false);\r\n    /*Задание начальных параметров у окна с активными игроками*/\r\n    let [modalActive, setModalActive] = useState(false);\r\n    debugger\r\n    /* Создание массива клмпонент с активными игроками*/\r\n\r\n    let playersElement = props.actualTeam.map(player  => <PlayerSubItem setPlayerInfo={ setPlayerInfo} rend={rend}\r\n                                                                       number={player.number} key={player.id}\r\n                                                                       active={show} setActive={setShow}\r\n                                                                        setActivePlayer={setModalActive}/>);\r\n\r\n    /* Функция для отображения окна с активними игроками и добавлением их в историю */\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        // @ts-ignore\r\n        setField(props.currentName);\r\n        //setPass(props.props.allGamePass);\r\n    }, [props.currentName, props.allGamePass])\r\n\r\n\r\n    /* Добавление действий в историю игры*/\r\n    let findSector = useCallback((info) => {\r\n        debugger\r\n        clickLogger(info);\r\n    }, [props]);\r\n\r\n    let updateData = useCallback((localState) => {\r\n        debugger\r\n        // @ts-ignore\r\n        updateHistory(localState);\r\n        // @ts-ignore\r\n        showPass();\r\n    }, [props]);\r\n\r\n    const showPass = (e) => {\r\n        debugger\r\n        setModalActive(true);\r\n\r\n        let info = e.currentTarget.href.baseVal;\r\n        setRend(info);\r\n        setPass(pass + 1);\r\n    }\r\n\r\n    if (modalActive === false) {\r\n        debugger\r\n        findSector(rend);\r\n        playerFinder(playerInfo);\r\n        // @ts-ignore\r\n        if (field === props.currentName && modalActive === true) {\r\n            updateData(field);\r\n        }\r\n    } else if (modalActive === true) {\r\n        playerFinder(playerInfo);\r\n    }\r\n\r\n    /* Функция для скрытия окна с выбором передач */\r\n    const closeResultPassWindow = useCallback(() => {\r\n        debugger\r\n        let passOnField = true;\r\n        passCounter(field,pass,passOnField);\r\n        playerPassCounter(playerInfo);\r\n        // @ts-ignore\r\n        updateHistory(field, playerInfo, result);\r\n        // @ts-ignore\r\n        showPass();\r\n        setShow(false);\r\n    }, [ field, playerInfo, result, pass])\r\n\r\n    const closeUnResultPassWindow = useCallback(() => {\r\n        debugger\r\n        let passOnField = false;\r\n        passCounter(field,pass,passOnField);\r\n        playerPassCounter(playerInfo);\r\n        // @ts-ignore\r\n        updateHistory(field, playerInfo, unResult);\r\n        // @ts-ignore\r\n        showPass();\r\n        setShow(false);\r\n    }, [ field, playerInfo, unResult, pass])\r\n\r\n    const openAllStatistics = () => {\r\n        debugger\r\n        //statisticsOpened = true;\r\n        setStatistics(true)\r\n        alert(\r\n            \"Всего передач - \" + props.allGamePass + '\\n' +\r\n            \"Первый сектор - \" + props.allFieldPiece[0].pass + '\\n' +\r\n            \"Второй сектор - \" + props.allFieldPiece[1].pass + '\\n' +\r\n            \"Третий сектор - \" + props.allFieldPiece[2].pass + '\\n' +\r\n            \"Четвертый сектор - \" + props.allFieldPiece[3].pass + '\\n' +\r\n            \"Пятый сектор - \" + props.allFieldPiece[4].pass + '\\n' +\r\n            \"Шестой сектор - \" + props.allFieldPiece[5].pass + '\\n' +\r\n            \"Сельмой сектор - \" + props.allFieldPiece[6].pass + '\\n' +\r\n            \"Восьмой сектор - \" + props.allFieldPiece[7].pass + '\\n' +\r\n            \"Девятый сектор - \" + props.allFieldPiece[8].pass + '\\n' +\r\n            \"Десятый сектор - \" + props.allFieldPiece[9].pass + '\\n' +\r\n            \"Одиннадцатый сектор - \" + props.allFieldPiece[10].pass + '\\n' +\r\n            \"Двеннадцатый сектор - \" + props.allFieldPiece[11].pass + '\\n' +\r\n            \"Тринадцатый сектор - \" + props.allFieldPiece[12].pass + '\\n' +\r\n            \"Четырнадцатый сектор - \" + props.allFieldPiece[13].pass + '\\n'\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {/* Блок с участками поля */}\r\n\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1345\" height=\"755\"\r\n                 viewBox=\"0 0 1558 881\">\r\n                <NavLink to='/game/14' onClick={showPass}>\r\n                    <path\r\n                        d=\"M973 104.5C973 211.919 885.919 299 778.5 299C671.081 299 584 211.919 584 104.5C584 66.324 594.999 30.7168 614 0.674339C661.5 1.00006 705.757 0.674316 775 0.674316C844.243 0.674316 880 0.674339 943 0.674339C962.001 30.7168 973 66.324 973 104.5Z\"\r\n                        fill=\"#FFA859\"/>\r\n                </NavLink>\r\n                <NavLink to='/game/13' onClick={showPass}>\r\n                    <path\r\n                        d=\"M1168 99.6224C1168 65.5493 1163.63 32.4981 1155.42 1L943 1.00005C984 65.0797 973.806 143.677 958 179.722C943.511 212.763 921.5 243.802 878 271.336L973.5 437C1089.77 369.656 1168 243.786 1168 99.6224Z\"\r\n                        fill=\"#FFD8B5\"/>\r\n                </NavLink>\r\n                <NavLink to='/game/12' onClick={showPass}>\r\n                    <path\r\n                        d=\"M779 489C849.824 489 916.228 470.073 973.429 437L878.5 271C878.5 271 835.5 300 777 299C718.5 298 678.5 271 678.5 271L583.5 436.378C640.942 469.835 707.733 489 779 489Z\"\r\n                        fill=\"#FFC592\"/>\r\n                </NavLink>\r\n                <NavLink to='/game/11' onClick={showPass}>\r\n                    <path\r\n                        d=\"M389 99.6224C389 65.5493 393.37 32.4981 401.579 1L614 1.00005C573 65.0797 583.194 143.677 599 179.722C613.489 212.763 635.5 243.802 679 271.336L583.5 437C467.228 369.656 389 243.786 389 99.6224Z\"\r\n                        fill=\"#FFD8B5\"/>\r\n                </NavLink>\r\n                <NavLink to='/game/10' onClick={showPass}>\r\n                    <path\r\n                        d=\"M195 104C195 68.8551 198.104 34.4354 204.054 1H402.609C402.609 1 379 82 397 174C415 266 465.5 330.5 465.5 330.5L306 446.602C236.174 350.367 195 231.992 195 104Z\"\r\n                        fill=\"#FFC592\"/>\r\n                </NavLink>\r\n                <NavLink to='/game/9' onClick={showPass}>\r\n                    <path\r\n                        d=\"M465.5 330.5L306 446.602C377.789 545.543 479.864 621.082 598.614 659.609L660 470.5C660 470.5 601.5 451.5 551.5 415.5C501.5 379.5 465.5 330.5 465.5 330.5Z\"\r\n                        fill=\"#FFA859\"/>\r\n                </NavLink>\r\n                <NavLink to='/game/8' onClick={showPass}>\r\n                    <path\r\n                        d=\"M779 688C841.994 688 902.658 678.026 959.5 659.572L898 470.5C898 470.5 844 489 779 489C714 489 660 470.5 660 470.5L598.5 659.572C655.342 678.026 716.006 688 779 688Z\"\r\n                        fill=\"#FFD8B5\"/>\r\n                </NavLink>\r\n                <NavLink to='/game/7' onClick={showPass}>\r\n                    <path\r\n                        d=\"M1092.5 330.5L1252 446.602C1180.21 545.543 1078.14 621.082 959.386 659.609L898 470.5C898 470.5 956.5 451.5 1006.5 415.5C1056.5 379.5 1092.5 330.5 1092.5 330.5Z\"\r\n                        fill=\"#FFA859\"/>\r\n                </NavLink>\r\n                <NavLink to='/game/6' onClick={showPass}>\r\n                    <path\r\n                        d=\"M1363 104C1363 68.8551 1359.9 34.4354 1353.95 1H1155.39C1155.39 1 1179 82 1161 174C1143 266 1092.5 330.5 1092.5 330.5L1252 446.602C1321.83 350.367 1363 231.992 1363 104Z\"\r\n                        fill=\"#FFC592\"/>\r\n                </NavLink>\r\n                <NavLink to='/game/5' onClick={showPass}>\r\n                    <path\r\n                        d=\"M1363 104C1363 68.8551 1359.9 34.4354 1353.95 1H1558V330L1317.87 329.5C1346.94 260.118 1363 183.934 1363 104Z\"\r\n                        fill=\"#FFA859\"/>\r\n                </NavLink>\r\n                <NavLink to='/game/4' onClick={showPass}>\r\n                    <path d=\"M1558 882V330L1317.87 329.5C1252.56 485.396 1121.57 606.955 959.5 659.572L1032 882H1558Z\"\r\n                          fill=\"#FFD8B5\"/>\r\n                </NavLink>\r\n                <NavLink to='/game/3' onClick={showPass}>\r\n                    <path\r\n                        d=\"M598.5 659.572C655.342 678.026 716.006 688 779 688C841.994 688 902.658 678.026 959.5 659.572L1032 882H527L598.5 659.572Z\"\r\n                        fill=\"#FFA859\"/>\r\n                </NavLink>\r\n                <NavLink to='/game/2' onClick={showPass}>\r\n                    <path d=\"M0 882H527L598.5 659.572C436.608 607.011 305.722 485.656 240.338 330L0 329.5V882Z\"\r\n                          fill=\"#FFD8B5\"/>\r\n                </NavLink>\r\n                <NavLink to='/game/1' onClick={showPass}>\r\n                    <path\r\n                        d=\"M204.054 1C198.104 34.4354 195 68.8552 195 104C195 184.126 211.137 260.484 240.338 330L0 329.5V1H204.054Z\"\r\n                        fill=\"#FFA859\"/>\r\n                </NavLink>\r\n            </svg>\r\n\r\n\r\n            {/* Компонента для отображения списка активных игроков*/}\r\n\r\n            <PopupPlayersChoose active={modalActive} setActive={setModalActive}>\r\n                {playersElement}\r\n            </PopupPlayersChoose>\r\n\r\n            {/* Компонента для отображения выбора передачи*/}\r\n\r\n            <PopupPlayersChoose active={show} setActive={setShow}>\r\n                <div className={Classes.passes}>\r\n                    <button onClick={closeResultPassWindow} className={Classes.btn + \" \" + Classes.resultPass}>Успешно\r\n                    </button>\r\n                    <button onClick={closeUnResultPassWindow}\r\n                            className={Classes.btn + \" \" + Classes.unResultPass}>Неуспешно\r\n                    </button>\r\n                </div>\r\n            </PopupPlayersChoose>\r\n            <br/>\r\n            {\r\n                statistics ? (<AllPassStatistics statistics={setStatistics} fieldPieces={props.allFieldPiece} allGamePass={props.allGamePass}/>) :\r\n                   ( <button className={Classes.allPassStatisticsButton} onClick={openAllStatistics}>Statistics</button>)\r\n            }\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Field","C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Player-For-Change\\Player-For-Change.tsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Teams\\Add-Team\\AddTeamWindow.jsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\PlayerInfo\\PlayerInfo.jsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Personal\\Players\\PlayerItem\\PlayerItem.jsx",[],"C:\\testUpload\\Basketball-statistics-service\\WEB\\basket-web-app\\src\\Components\\Game-Window\\Field\\Player-Item\\Player-Item.jsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\index.js",["871"],["872","873"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\App-Container.js",["874"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\redux-store.ts",["875"],["876","877"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\App.js",["878","879","880","881","882"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\player-change-reducer.ts",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\add-team-form-reducer.ts",["883"],"// import './../../../Components/NewMainPage/MainPersonPage.css'\r\n\r\nconst CHANGE_TEAM_TITLE = 'CHANGE_TEAM_TITLE'\r\nconst CHOOSE_TEAM_BTN_CLICK = 'CHOOSE_TEAM_BTN_CLICK'\r\nconst DESCRIPTION_INPUT = 'DESCRIPTION_INPUT'\r\nconst CREATE_INPUT_ELEMENT = 'CREATE_INPUT_ELEMENT'\r\nconst CHANGE_INPUT_ELEMENT = 'CHANGE_INPUT_ELEMENT'\r\nconst SUBMIT_INPUT_ELEMENT = 'SUBMIT_INPUT_ELEMENT'\r\nconst REMOVE_TEAM_CARD = 'REMOVE_TEAM_CARD'\r\nconst SET_DEFAULT_INPUT_ARR = 'SET_DEFAULT_INPUT_ARR'\r\n\r\n\r\nexport type inputFormArr = {\r\n    type: string\r\n    name: string\r\n    placeholder: string\r\n    className: string\r\n    value: string | undefined\r\n}\r\nexport type AddedPlayers = {\r\n    playerName: string\r\n    playerNumber: string\r\n}\r\nexport type AddedTeams = {\r\n    teamTitle: string\r\n}\r\n\r\nlet initialState = {\r\n    inputNumberPlaceholder: 'N',\r\n    inputNamePlaceholder: 'ФИО',\r\n    inputNumberClassName: 'InputPlayerNumberForm',\r\n    inputNameClassName: 'InputPlayerNameForm',\r\n    inputType: 'text',\r\n    teamTitle: '',\r\n    teamDescription: '',\r\n    isButtonTeamClicked: false,\r\n    isMyTeam: true,\r\n    teamsCount: 0,\r\n    inputFormArr: [\r\n        {\r\n            type: 'number',\r\n            name: 'inputPlayerNumberForm_1',\r\n            placeholder: 'N',\r\n            className: 'InputPlayerNumberForm',\r\n            value: 0,\r\n            isActive: false\r\n        },\r\n        {\r\n            type: 'text',\r\n            name: 'inputPlayerNameForm_1',\r\n            placeholder: 'ФИО',\r\n            className: 'InputPlayerNameForm',\r\n            value: undefined\r\n        },\r\n        {\r\n            type: 'number',\r\n            name: 'inputPlayerNumberForm_2',\r\n            placeholder: 'N',\r\n            className: 'InputPlayerNumberForm',\r\n            value: 0\r\n        },\r\n        {\r\n            type: 'text',\r\n            name: 'inputPlayerNameForm_2',\r\n            placeholder: 'ФИО',\r\n            className: 'InputPlayerNameForm',\r\n            value: undefined\r\n        },\r\n        {\r\n            type: 'number',\r\n            name: 'inputPlayerNumberForm_3',\r\n            placeholder: 'N',\r\n            className: 'InputPlayerNumberForm',\r\n            value: 0\r\n        },\r\n        {\r\n            type: 'text',\r\n            name: 'inputPlayerNameForm_3',\r\n            placeholder: 'ФИО',\r\n            className: 'InputPlayerNameForm',\r\n            value: undefined\r\n        },\r\n        {\r\n            type: 'number',\r\n            name: 'inputPlayerNumberForm_4',\r\n            placeholder: 'N',\r\n            className: 'InputPlayerNumberForm',\r\n            value: 0\r\n        },\r\n        {\r\n            type: 'text',\r\n            name: 'inputPlayerNameForm_4',\r\n            placeholder: 'ФИО',\r\n            className: 'InputPlayerNameForm',\r\n            value: undefined\r\n        },\r\n        {\r\n            type: 'number',\r\n            name: 'inputPlayerNumberForm_5',\r\n            placeholder: 'N',\r\n            className: 'InputPlayerNumberForm',\r\n            value: 0\r\n        },\r\n        {\r\n            type: 'text',\r\n            name: 'inputPlayerNameForm_5',\r\n            placeholder: 'ФИО',\r\n            className: 'InputPlayerNameForm',\r\n            value: undefined\r\n        },\r\n    ] as Array<inputFormArr>,\r\n    addedPlayers: [] as Array<any>,\r\n    addedTeams: [] as Array<AddedTeams>,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nconst addTeamForm = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case CREATE_INPUT_ELEMENT:\r\n            let newInputNumber = {\r\n                type: 'number',\r\n                name: `${state.inputNumberClassName+ '_' + (Math.ceil(state.inputFormArr.length/2)+1)}`,\r\n                placeholder: state.inputNumberPlaceholder,\r\n                className: state.inputNumberClassName,\r\n                value: 0\r\n            }\r\n             let newInputName = {\r\n                 type: state.inputType,\r\n                 name: `${state.inputNameClassName + '_' + (Math.ceil(state.inputFormArr.length / 2) + 1)}`,\r\n                 placeholder: state.inputNamePlaceholder,\r\n                 className: state.inputNameClassName,\r\n                 value: undefined\r\n            }\r\n            return {\r\n                ...state,\r\n                inputFormArr: [...state.inputFormArr, newInputNumber, newInputName] as Array<inputFormArr>\r\n            }\r\n        case CHANGE_INPUT_ELEMENT:\r\n            for(let i = 0; i < state.inputFormArr.length; i++) {\r\n                if(action.inputName === state.inputFormArr[i].name) {\r\n                    state.inputFormArr[i].value = action.inputValue\r\n                    break\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputFormArr: state.inputFormArr\r\n            }\r\n        case SUBMIT_INPUT_ELEMENT:\r\n             ;\r\n            let playerName\r\n            let playerNumber\r\n            type NewTeamType = {\r\n                teamTitle: string\r\n                teamNumbers: Array<any>\r\n                teamPlayers: Array<any>\r\n                isMyTeam: boolean\r\n            }\r\n            const newTeam: NewTeamType = {\r\n                teamTitle: state.teamTitle,\r\n                teamNumbers: [],\r\n                teamPlayers: [],\r\n                isMyTeam: state.isMyTeam,\r\n            }\r\n\r\n            state.teamsCount= action.teamsCount\r\n            for(let i = 0; i< state.inputFormArr.length; i++) {\r\n                // @ts-ignore\r\n                if(Number.isInteger(+state.inputFormArr[i].value)){\r\n                    // @ts-ignore\r\n                    playerNumber = +state.inputFormArr[i].value\r\n                        newTeam.teamNumbers.push({playerNumber: playerNumber, isClicked: false})\r\n                }\r\n                else {\r\n                    playerName = state.inputFormArr[i].value\r\n                        newTeam.teamPlayers.push(playerName)\r\n                }\r\n\r\n            }\r\n            return {\r\n                ...state,\r\n                addedTeams: [...state.addedTeams, newTeam],\r\n                teamsCount: state.teamsCount\r\n            }\r\n        case CHANGE_TEAM_TITLE:\r\n            state.teamTitle = action.teamTitle\r\n            return {\r\n                ...state,\r\n                teamTitle: state.teamTitle\r\n            }\r\n        case CHOOSE_TEAM_BTN_CLICK:\r\n            if (action.chosenTeam === 'Моя') {\r\n                state.isMyTeam = true\r\n\r\n            }\r\n            else if (action.chosenTeam === 'Соперников') {\r\n                state.isMyTeam = false\r\n\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isMyTeam: state.isMyTeam,\r\n            }\r\n        case DESCRIPTION_INPUT:\r\n            state.teamDescription = action.descriptionText\r\n            return {\r\n                ...state,\r\n                teamDescription: state.teamDescription\r\n            }\r\n        case REMOVE_TEAM_CARD:\r\n            let buff = state.addedTeams\r\n            for(let i =0; i< state.addedTeams.length; i++) {\r\n                if(action.selectTeamCard === state.addedTeams[i].teamTitle) {\r\n                    buff.splice(i,1)\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                addedTeams: buff\r\n            }\r\n        case SET_DEFAULT_INPUT_ARR:\r\n            let buffInputFormArr = state.inputFormArr.splice(10)\r\n            return {\r\n                ...state,\r\n                inputFormArr: state.inputFormArr\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ChangeTeamTitle = {\r\n    type: typeof CHANGE_TEAM_TITLE\r\n    teamTitle: string\r\n}\r\ntype ChooseTeamBtnClick = {\r\n    type: typeof CHOOSE_TEAM_BTN_CLICK\r\n    chosenTeam: string\r\n}\r\ntype DescriptionInput = {\r\n    type: typeof DESCRIPTION_INPUT\r\n    descriptionText: string\r\n}\r\ntype CreateInputElementType = {\r\n    type: typeof CREATE_INPUT_ELEMENT\r\n}\r\ntype SubmitInputElement = {\r\n    type: typeof SUBMIT_INPUT_ELEMENT\r\n    teamsCount: number\r\n}\r\ntype ChangeInputElementType = {\r\n    type: typeof CHANGE_INPUT_ELEMENT\r\n    inputValue: string\r\n    inputName: string\r\n}\r\ntype RemoveTeamCardType = {\r\n    type: typeof REMOVE_TEAM_CARD\r\n    selectTeamCard: string\r\n}\r\ntype SetDefaultInputArrType = {\r\n    type: typeof SET_DEFAULT_INPUT_ARR\r\n}\r\nexport const changeTeamTitle = (teamTitle: string): ChangeTeamTitle => ({type: CHANGE_TEAM_TITLE, teamTitle: teamTitle})\r\nexport const chooseTeamBtnClick = (chosenTeam: string): ChooseTeamBtnClick => ({type: CHOOSE_TEAM_BTN_CLICK, chosenTeam: chosenTeam})\r\nexport const descriptionInput = (descriptionText: string): DescriptionInput => ({type: DESCRIPTION_INPUT, descriptionText: descriptionText})\r\nexport const createInputElement = (): CreateInputElementType => ({type: CREATE_INPUT_ELEMENT})\r\nexport const changeInputElement = (inputValue: string, inputName: string): ChangeInputElementType => ({type: CHANGE_INPUT_ELEMENT, inputValue: inputValue, inputName: inputName})\r\nexport const submitInputElement = (teamsCount: number): SubmitInputElement => ({type: SUBMIT_INPUT_ELEMENT, teamsCount: teamsCount})\r\nexport const removeTeamCard = (selectTeamCard: string): RemoveTeamCardType => ({type: REMOVE_TEAM_CARD, selectTeamCard: selectTeamCard})\r\nexport const setDefaultInputArr = (): SetDefaultInputArrType => ({type: SET_DEFAULT_INPUT_ARR})\r\n\r\nexport default addTeamForm;","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\pass-manager-reducer.ts",["884","885","886"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\game-history-reducer.ts",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\about-us-reducer.ts",["887","888"],"const SET_TEAM_MEMBER = 'SET_TEAM_MEMBER'\r\nconst CLEAR_SELECT_TEAM_MEMBER = 'CLEAR_SELECT_TEAM_MEMBER'\r\n\r\ntype TeamMembersType = {\r\n    name: string\r\n    vk: string\r\n    email: string\r\n    phone: string\r\n}\r\n\r\nconst initialState = {\r\n   teamMembers: [\r\n       {name: 'Шепенева Екатерина', vk: 'https://vk.com/id557520065', email: 'shepeneva@sfedu.ru'},\r\n       {name: 'Даниил Шестопалов', vk: 'https://vk.com/i_danik', email: 'dansh@sfedu.ru'},\r\n       {name: 'Рувим Бурлаков', vk: 'https://vk.com/ruvimb', email: 'rburlakov@sfedu.ru'},\r\n       {name: 'Вешкин Иван', vk: 'https://vk.com/dfdvdff', email: 'iveshkin@sfedu.ru'},\r\n       {name: 'Егор Скубко', vk: 'https://vk.com/egorskubko', email: 'skubko@sfedu.ru'},\r\n       {name: 'Никита Кучеренко', vk: 'https://vk.com/kucchher', email: 'nkucherenko@sfedu.ru'},\r\n       {name: 'Сафронов Никита', vk: 'https://vk.com/outlaw55', email: 'safronov@sfedu.ru'},\r\n       {name: 'Макаров Юра', vk: 'https://vk.com/yumac', email: 'ymakarov@sfedu.ru'},\r\n       {name: 'Лопырин Кирилл', vk: 'https://vk.com/id246590022', email: 'lopyrin@sfedu.ru'},\r\n   ] as Array<TeamMembersType>,\r\n    selectTeamMembers: [] as Array<any>\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nconst aboutUs = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_TEAM_MEMBER:\r\n            let selectTeamMembersBuff\r\n            for(let i =0; i< state.teamMembers.length; i++) {\r\n                if(action.teamMemberName === state.teamMembers[i].name) {\r\n                   state.selectTeamMembers.push(state.teamMembers[i])\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                selectTeamMembers: state.selectTeamMembers\r\n            }\r\n        case CLEAR_SELECT_TEAM_MEMBER:\r\n            const selectTeamMembersBuffArr = state.selectTeamMembers.splice(0,state.selectTeamMembers.length)\r\n            return {\r\n                ...state,\r\n                selectTeamMembers: state.selectTeamMembers\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setTeamMember = (teamMemberName: string) => ({type: SET_TEAM_MEMBER, teamMemberName})\r\nexport const clearSelectTeamMember = () => ({type:CLEAR_SELECT_TEAM_MEMBER})\r\n\r\nexport default aboutUs;","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\backend-statistic.ts",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\game-statistic.ts",["889","890"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Game-Window\\choose-team-reducer.ts",["891","892"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Personal\\players-reducer.ts",["893","894","895","896"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Redux\\Redusers\\Authorization\\authorization-reducer.ts",["897"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\About-Us\\AboutUs.tsx",["898"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Game-Window-Container.tsx",["899"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Login-Page\\Login-Page-Container.tsx",["900"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\NewField.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Statistics\\Statistics.tsx",["901"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewMainPage\\MainPersonPage.tsx",["902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\API\\API.js",["918","919"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Personal-Container.jsx",["920"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewMainPage\\Main-Preson-Selectors.js",["921"],"import {createSelector} from \"reselect\";\r\n\r\nexport const getFirstName = (state) => (state.auth.firstName)\r\nexport const getLastName = (state) => (state.auth.lastName)\r\nexport const getAuthorization = (state) => (state.auth.authorization)\r\nexport const getPlayersAddInput = (state) => (state.players.playersAddInput)\r\nexport const getInputFormArr = (state) => (state.addTeamForm.inputFormArr)\r\nexport const getTeamTitle = (state) => (state.addTeamForm.teamTitle)\r\nexport const getIsMyTeam = (state) => (state.addTeamForm.isMyTeam)\r\nexport const getAddedPlayers = (state) => (state.addTeamForm.addedPlayers)\r\nexport const getTeamsCount = (state) => (state.addTeamForm.teamsCount)\r\nexport const getAddedTeams = (state) => (state.addTeamForm.addedTeams)\r\nexport const getSelectMyTeam = (state) => (state.chooseTeamReducer.selectMyTeam)\r\nexport const getSelectMyTeamTitle = (state) => (state.chooseTeamReducer.selectMyTeamTitle)\r\nexport const getSelectEnemyTeam = (state) => (state.chooseTeamReducer.selectEnemyTeam)\r\nexport const getSelectEnemyTeamTitle = (state) => (state.chooseTeamReducer.selectEnemyTeamTitle)\r\nexport const getGameIsStarted = (state) => (state.chooseTeamReducer.gameIsStarted)\r\nexport const getArrayOfMyPlayers = (state) => (state.chooseTeamReducer.arrayOfMyPlayers)\r\nexport const getArrayOfEnemyPlayers = (state) => (state.chooseTeamReducer.arrayOfEnemyPlayers)\r\nexport const getHistory = (state) => (state.gameStatistic.history)\r\nexport const getMyPlayerTeam = (state) => (state.gameStatistic.myPlayerTeam)\r\nexport const getEnemyPlayerTeam = (state) => (state.gameStatistic.enemyPlayerTeam)\r\nexport const getThrows = (state) => (state.gameStatistic.throws)\r\nexport const getApiKey = (state) => (state.auth.apiKey)\r\nexport const getChosenTeamCard = (state) => (state.chooseTeamReducer.chosenTeamCard)\r\nexport const getFinalMyPlayersForGame = (state) => (state.chooseTeamReducer.finalMyPlayersForGame)\r\nexport const getFinalEnemyPlayersForGame = (state) => (state.chooseTeamReducer.finalEnemyPlayersForGame)\r\nexport const getDeleteAction = (state) => (state.chooseTeamReducer.deleteAction)\r\nexport const getDeletePlayerNumber = (state) => (state.chooseTeamReducer.deletePlayerNumber)\r\nexport const getDeleteSector = (state) => (state.chooseTeamReducer.deleteSector)\r\nexport const getTeamMembers = (state) => (state.aboutUs.teamMembers)\r\nexport const getSelectTeamMembers = (state) => (state.aboutUs.selectTeamMembers)\r\nexport const getPiecePass= (state) => (state.gameStatistic.piecePass)\r\nexport const getActionCounter= (state) => (state.gameStatistic.actionCounter)\r\nexport const getUrlResponse= (state) => (state.gameStatistic.urlResponse)\r\nexport const getListOfGame= (state) => (state.backendStatistics.listOfGame)\r\nexport const getChosenTeamID= (state) => (state.backendStatistics.chosenTeamID)\r\nexport const getOneGame= (state) => (state.backendStatistics.oneGame)\r\nexport const getEmail= (state) => (state.backendStatistics.email)\r\nexport const getMyPlayersForGame= (state) => (state.chooseTeamReducer.myPlayersForGame)\r\nexport const getEnemyPlayersForGame= (state) => (state.chooseTeamReducer.enemyPlayersForGame)\r\n\r\n","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Login-Page\\Login-Page.tsx",["922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Game-Window.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Navigation\\Navigation.tsx",["938","939","940","941","942","943","944","945","946","947"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Footer\\Footer.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\About-Us\\TeamMembers\\TeamMembers.tsx",["948","949","950"],"import React, {memo, useEffect, useState} from \"react\";\r\nimport Classes from './TeamMembers.module.css'\r\nimport Katya from './../../../Images/minimize/Katya.png'\r\nimport Daniil from './../../../Images/minimize/Daniil.png'\r\nimport Ruvim from './../../../Images/minimize/Ruvim.png'\r\nimport Egor from './../../../Images/minimize/Egor.png'\r\nimport Yura from './../../../Images/minimize/Yura.png'\r\nimport Ivan from './../../../Images/minimize/Ivan.png'\r\nimport Kirill from './../../../Images/minimize/Kirill.png'\r\nimport NikitaKaptian from './../../../Images/minimize/Kaptian.png'\r\nimport Nikita from './../../../Images/minimize/Nikita.png'\r\nimport LoadableImg from \"../../Loadable-Img/Loadable-Img\";\r\nimport LeftMessagePiece from '../../../Images/LeftPartMessage.svg'\r\nimport RightMiddleMessagePiece from '../../../Images/VectorRightMiddle.svg'\r\nimport PopupPlayersChoose from \"../../Modal/Players-Choose/Popup-Players-Choose\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSelectTeamMembers, getTeamMembers} from \"../../NewMainPage/Main-Preson-Selectors\";\r\nimport TeamMembersElement from \"./Team-Members-Element/Team-Members-Element\";\r\nimport {setTeamMember} from \"../../../Redux/Redusers/Game-Window/about-us-reducer\";\r\n\r\n\r\nconst TeamMembers = ({}) => {\r\n\r\n    const [isTeamMembers, setIsTeamMembers] = useState(false)\r\n    const personTeamInfo = useSelector(getTeamMembers);\r\n    const personInfo = useSelector(getSelectTeamMembers)\r\n    const dispatch = useDispatch()\r\n\r\n    const showInfo = (e: any) => {\r\n         \r\n        setIsTeamMembers(true)\r\n        dispatch(setTeamMember(\r\n            e.currentTarget.parentElement.parentElement.parentElement.children[0].innerText))\r\n        console.log(\r\n            e.currentTarget.parentElement.parentElement.parentElement.children[0].innerText)\r\n    }\r\n\r\n    const showInfoRight = (e:any) => {\r\n        setIsTeamMembers(true)\r\n        dispatch(setTeamMember(\r\n            e.currentTarget.parentElement.parentElement.parentElement.children[1].innerText))\r\n        console.log(\r\n            e.currentTarget.parentElement.parentElement.parentElement.children[1].innerText)\r\n    }\r\n    let teammatesInfo\r\n\r\n\r\n    try {\r\n        teammatesInfo = personInfo.map((el: any) => {\r\n            return (\r\n                <TeamMembersElement name={el.name} vk={el.vk} email={el.email}  setIsTeamMembers={setIsTeamMembers}/>\r\n            )\r\n        })\r\n    } \r\n    catch (e) {\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className={Classes.TeamMembers}>\r\n            <div className={Classes.Wrapper}>\r\n                <div className={Classes.LeftSide}>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Katya}/>\r\n                            <div className={Classes.PersonName}>Шепенева Екатерина</div>\r\n                        </div>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={Classes.MessageBox}>\r\n                                <span className={Classes.MessageText}>Всем привет! Я занималась разработкой дизайна и макетов для нашего проекта.</span>\r\n                                <button onClick={showInfo} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessage}>\r\n                                <img src={LeftMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Daniil}/>\r\n                            <div className={Classes.PersonName}>Даниил Шестопалов</div>\r\n                        </div>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={Classes.MessageBox}>\r\n                                <span className={Classes.MessageText}>Хай, я iOS разработчик.</span>\r\n                                <button onClick={showInfo} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessage}>\r\n                                <img src={LeftMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Ruvim}/>\r\n                            <div className={Classes.PersonName}>Рувим Бурлаков</div>\r\n                        </div>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={Classes.MessageBox}>\r\n                                <span\r\n                                    className={Classes.MessageText}>Привет, я второй разработчик приложения на iOS.</span>\r\n                                <button onClick={showInfo} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessage}>\r\n                                <img src={LeftMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={NikitaKaptian}/>\r\n                            <div className={Classes.PersonName}>Сафронов Никита</div>\r\n                        </div>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={Classes.MessageBox}>\r\n                                <span\r\n                                    className={Classes.MessageText}>Приветствую тебя, я капитан команды BasFeature.</span>\r\n                                <button onClick={showInfo} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessage}>\r\n                                <img src={LeftMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Ivan}/>\r\n                            <div className={Classes.PersonName}>Вешкин Иван</div>\r\n                        </div>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={Classes.MessageBox}>\r\n                                <span className={Classes.MessageText}>Привет, я frontend разработчик.</span>\r\n                                <button onClick={showInfo} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessage}>\r\n                                <img src={LeftMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={Classes.RightSide}>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={`${Classes.MessageBox} ${Classes.Right}`}>\r\n                                <span className={Classes.MessageText}>Здравствуйте, я технический писатель!</span>\r\n                                <button onClick={showInfoRight} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessageMiddle}>\r\n                                <img src={RightMiddleMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Egor}/>\r\n                            <div className={Classes.PersonName}>Егор Скубко</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={`${Classes.MessageBox} ${Classes.Right}`}>\r\n                                <span className={Classes.MessageText}>Привет. Я второй технический писатель.</span>\r\n                                <button onClick={showInfoRight} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessageMiddle}>\r\n                                <img src={RightMiddleMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Nikita}/>\r\n                            <div className={Classes.PersonName}>Никита Кучеренко</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={`${Classes.MessageBox} ${Classes.Right}`}>\r\n                                <span className={Classes.MessageText}>Здравствуй. Я backend разработчик.</span>\r\n                                <button onClick={showInfoRight} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessageMiddle}>\r\n                                <img src={RightMiddleMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Yura}/>\r\n                            <div className={Classes.PersonName}>Макаров Юра</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.PersonBlock}>\r\n                        <div className={Classes.MessageBlock}>\r\n                            <div className={`${Classes.MessageBox} ${Classes.Right}`}>\r\n                                <span className={Classes.MessageText}>Доброго дня. Я второй Android разработчик.</span>\r\n                                <button onClick={showInfoRight} className={Classes.MessageBtn}>Контакты</button>\r\n                            </div>\r\n                            <div className={Classes.PieceMessageMiddle}>\r\n                                <img src={RightMiddleMessagePiece} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={Classes.ImgBlock}>\r\n                            <LoadableImg src={Kirill}/>\r\n                            <div className={Classes.PersonName}>Лопырин Кирилл</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <PopupPlayersChoose active={isTeamMembers} setActive={setIsTeamMembers}>\r\n                <div className={Classes.MyInfo}>\r\n                    {teammatesInfo}\r\n                </div>\r\n            </PopupPlayersChoose>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default memo(TeamMembers);","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\About-Us\\HederDescription\\HeaderDescription.tsx",["951"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Mobile-Navigation\\Mobile-Navigation.tsx",["952"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Mobile-Footer\\Mobile-Footer.tsx",["953"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\History\\History.tsx",["954","955","956","957","958","959","960","961","962","963"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport Classes from './History.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    clearActiveEnemyPlayersForGame,\r\n    clearActiveMyPlayersForGame,\r\n    gameIsStart\r\n} from \"../../../Redux/Redusers/Game-Window/choose-team-reducer\";\r\nimport {\r\n    getApiKey, getDeleteAction, getDeletePlayerNumber, getDeleteSector, getEmail,\r\n    getEnemyPlayerTeam,\r\n    getHistory,\r\n    getMyPlayerTeam, getSelectEnemyTeamTitle, getSelectMyTeamTitle,\r\n    getThrows\r\n} from \"../../NewMainPage/Main-Preson-Selectors\";\r\nimport HistoryElement, {HistoryElementPropsType} from \"./History-Element/History-Element\";\r\nimport {\r\n    clearFieldPiece,\r\n    clearHistory,\r\n    clearThrows,\r\n} from \"../../../Redux/Redusers/Game-Window/game-statistic\";\r\nimport './History.css'\r\nimport {addGameThunk} from \"../../../Redux/Redusers/Game-Window/backend-statistic\";\r\n\r\ntype HistoryPropsType = {}\r\n\r\nconst History: React.FC<HistoryPropsType> = ({}) => {\r\n    const [icCrutch, setIsCrutch] = useState(false)\r\n    const [tableUrl, setTableUrl] = useState('')\r\n    const [isStart, setIsStart] = useState(false)\r\n    const [crutch, setCrutch] = useState(0)\r\n    const gameHistory = useSelector(getHistory)\r\n    const players1 = useSelector(getMyPlayerTeam)\r\n    const players2 = useSelector(getEnemyPlayerTeam)\r\n    const throws = useSelector(getThrows)\r\n    const apiKey = useSelector(getApiKey)\r\n    const deleteAction = useSelector(getDeleteAction)\r\n    const deletePlayerNumber = useSelector(getDeletePlayerNumber)\r\n    const deleteSector = useSelector(getDeleteSector)\r\n    const myTeamTitle = useSelector(getSelectMyTeamTitle)\r\n    const enemyTeamTitle = useSelector(getSelectEnemyTeamTitle)\r\n    const personEmail = useSelector(getEmail)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const historyRef = useRef<any | null>(null)\r\n\r\n    const finishMatch = (e: any) => {\r\n        dispatch(gameIsStart(isStart))\r\n        dispatch(addGameThunk(myTeamTitle, enemyTeamTitle, JSON.stringify(players1), JSON.stringify(throws), personEmail, apiKey, ))\r\n        dispatch(clearHistory())\r\n        dispatch(clearActiveMyPlayersForGame())\r\n        dispatch(clearActiveEnemyPlayersForGame())\r\n        dispatch(clearFieldPiece())\r\n        dispatch(clearThrows())\r\n        setIsCrutch((prec) => !prec)\r\n    }\r\n\r\n\r\n    const history = gameHistory.map((el: any) => {\r\n        return (\r\n            <HistoryElement sector={el.sector} playerNumber={el.playerNumber} action={el.action} playerName={el.name}\r\n                            team={el.team} length={gameHistory.length} ref={historyRef}/>\r\n        )\r\n    })\r\n\r\n    console.log('gameHistory')\r\n    console.log(gameHistory)\r\n    useEffect(() => {\r\n        setCrutch((prev) => prev + 1)\r\n    }, [gameHistory])\r\n\r\n    useEffect(() => {\r\n        let buffArr = history\r\n        for (let i = 0; i < history.length; i++) {\r\n            if(history[i].sector === +deleteSector && history[i].playerNumber === +deletePlayerNumber && history[i].action === deleteAction)\r\n                buffArr.splice(i,1)\r\n        }\r\n    }, [gameHistory])\r\n\r\n    if (history.length != gameHistory.length)\r\n        console.log('Error')\r\n\r\n\r\n    return (\r\n        <div className={Classes.History}>\r\n            <div className={Classes.HistoryBlock}>\r\n                <div className={Classes.HistoryText}>\r\n                    <span className={Classes.HistoryLeft}>История матча</span>\r\n                    <span\r\n                        className={Classes.HistoryRight}>Чтобы поменять данные, нажмите на них и выберите нужные</span>\r\n                </div>\r\n                <div className={Classes.HistoryBox}>\r\n                    {history}\r\n                </div>\r\n            </div>\r\n            <button className={Classes.HistoryBtn} onClick={finishMatch}>Закончить матч</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default History;","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\SquardList\\SquardList.tsx",["964","965","966","967","968","969","970"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Field\\Field.tsx",["971","972","973","974","975","976","977","978","979","980","981","982","983","984"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\TeamChoose\\TeamChoose.tsx",["985","986","987","988"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Statistics\\Description\\Description.tsx",["989"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Statistics\\Statistics-Body\\Statistics-Body.tsx",["990","991","992","993"],"import React, {useEffect, useRef, useState} from \"react\"\r\nimport Classes from './Statistics-Body.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getListOfGamesThunk, setEmail} from \"../../../Redux/Redusers/Game-Window/backend-statistic\";\r\nimport {getApiKey, getListOfGame, getOneGame} from \"../../NewMainPage/Main-Preson-Selectors\";\r\nimport GamesElements from \"./Games-Elements/Games-Elements\";\r\nimport PopupPlayersChoose from \"../../Modal/Players-Choose/Popup-Players-Choose\";\r\n\r\nconst StatisticsBody = ({}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const dispatch = useDispatch()\r\n    const apiKey = useSelector(getApiKey)\r\n    const listOfGames = useSelector(getListOfGame)\r\n    const inputRef = useRef<HTMLInputElement | null>(null)\r\n    const wrapperRef = useRef<HTMLDivElement | null>(null)\r\n\r\n    useEffect(() => {\r\n        dispatch(getListOfGamesThunk(apiKey))\r\n    }, [])\r\n\r\n    let games\r\n\r\n    try {\r\n        games = listOfGames.map((el: any) => {\r\n            return(\r\n                <GamesElements team1={el.team1} team2={el.team2} date={el.date}/>\r\n            )\r\n        })\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n    const inputOnBlur = (event: any) => {\r\n        setInputValue(event.target.value)\r\n    }\r\n    const sendBtn = () => {\r\n        dispatch(setEmail(inputValue))\r\n        // @ts-ignore\r\n        inputRef.current.value = ''\r\n    }\r\n\r\n    return (\r\n        <div className={Classes.MainWrapper}>\r\n            <div className={Classes.EmailBlock}>\r\n                <span\r\n                    className={Classes.Text}>Введите email для получения доступа просмотра статистики после игры</span>\r\n                <div className={Classes.EmailWrapper}>\r\n                    <input className={Classes.InputEmail} type=\"text\" placeholder=' Введите email' onBlur={inputOnBlur} ref={inputRef}/>\r\n                    <button className={Classes.SubmitBtn} onClick={sendBtn}>Отправить</button>\r\n                </div>\r\n            </div>\r\n            <div className={Classes.StatisticsBlock}>\r\n                <span className={Classes.Text}>Статистика последних игр</span>\r\n                <div className={Classes.Games} ref={wrapperRef}>{games}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatisticsBody","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewMainPage\\Popup-Window\\Full-List-Players.tsx",["994","995"],"import React, {useCallback, useEffect, useRef, useState} from 'react'\r\nimport './Full-List-Players.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getChosenTeamCard} from \"../Main-Preson-Selectors\";\r\nimport { removeTeamCard } from '../../../Redux/Redusers/Game-Window/add-team-form-reducer';\r\n\r\ntype FullListPlayersPropsType = {\r\n    setlistPlayers: any\r\n    listPlayers: boolean\r\n    addedTeams: any\r\n}\r\n\r\nconst FullListPlayers: React.FC<FullListPlayersPropsType> = ({setlistPlayers, listPlayers, addedTeams, ...props}): any => {\r\n\r\n    const modalRef = useRef<HTMLDivElement | null>(null)\r\n    const selectTeamCard = useSelector(getChosenTeamCard)\r\n    const dispatch = useDispatch()\r\n    let selectTeam: any\r\n    let players: any\r\n    let numbers: any\r\n\r\n    try {\r\n         selectTeam = addedTeams.filter((el: any) => {\r\n            return el.teamTitle === selectTeamCard\r\n        })\r\n         \r\n         players = selectTeam[0].teamPlayers.map((elem: any) => {\r\n              \r\n            return(\r\n                <span className=\"players\">{elem}</span>\r\n            )\r\n        })\r\n\r\n         numbers = selectTeam[0].teamNumbers.map((elem: any) => {\r\n            return(\r\n                <span className='numbers'>{elem.playerNumber}</span>\r\n            )\r\n        })\r\n    }\r\n    catch (err) {\r\n        console.log(err)\r\n    }\r\n\r\n    console.log(selectTeam)\r\n    console.log(selectTeam.teamPlayers)\r\n    console.log(numbers)\r\n\r\n\r\n    const deleteCard = (e: any) => {\r\n        dispatch(removeTeamCard(selectTeamCard))\r\n        setlistPlayers(false)\r\n    }\r\n\r\n    const keyPress = useCallback(e => {\r\n        if (e.key === 'Escape' && listPlayers) {\r\n            setlistPlayers(false)\r\n        }\r\n    }, [setlistPlayers, listPlayers])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', keyPress);\r\n        return () => document.removeEventListener('keydown', keyPress);\r\n    })\r\n\r\n    const closeWindow = useCallback(() => {\r\n        setlistPlayers(false);\r\n    },[])\r\n\r\n    return (listPlayers) ? (\r\n        <div className='listPlayers' ref={modalRef} onClick={closeWindow}>\r\n            <div className={selectTeam[0].isMyTeam ? \"listPlayers-Inner\" : \"listPlayers-Inner enemies\" } onClick={e => e.stopPropagation()}>\r\n                {/*{props.children}*/}\r\n                <div className='selectTeamName'>{selectTeamCard}</div>\r\n                <div className='playersWrapper'>\r\n                    <div className='playersMiddleware'>\r\n                        <div className='namesWrapper'>{players}</div>\r\n                        <div className='numbersWrapper'>{numbers}</div>\r\n                    </div>\r\n                    <div className='buttons'>\r\n                        <button className='close-btn' onClick={closeWindow}>Закрыть</button>\r\n                        <button className='close-btn' onClick={deleteCard}>Удалить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : \"\";\r\n}\r\n\r\nexport default FullListPlayers","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewMainPage\\Teams-Card\\Teams-Card.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Personal.jsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Player-Change-Container.tsx",["996"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Statistics\\Statistics-Body\\Games-Elements\\Games-Elements.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\SquardList\\Player-Item\\Player-Item.tsx",["997","998","999","1000"],"import React, {useEffect, useState} from \"react\";\r\nimport './Player-Item.css'\r\nimport Classes from \"../SquardList.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    changeClickedMyPlayers,\r\n    setActivePlayer,\r\n    setIndexOfClickedPlayer,\r\n    setMyTeamPlayers\r\n} from \"../../../../Redux/Redusers/Game-Window/choose-team-reducer\";\r\nimport {createStatisticForMyTeam, setChosenPlayer} from \"../../../../Redux/Redusers/Game-Window/game-statistic\";\r\n\r\ntype PlayerItemPropsType = {\r\n    teamNumbers: any\r\n    teamNames: any\r\n    teamTitle: string\r\n}\r\n\r\nconst PlayerItem: React.FC<PlayerItemPropsType> = ({teamNumbers, isMyTeam, teamNames}) => {\r\n\r\n    const [click, setClick] = useState(false)\r\n    const [playerID, setPlayerID] = useState(null)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setMyTeamPlayers(playersNumb))\r\n        dispatch(createStatisticForMyTeam(teamNumbers, teamNames))\r\n\r\n    },[])\r\n\r\n\r\n    const onClick = (e: any) => {\r\n        setClick((prev) => !prev)\r\n        setPlayerID(e.target.id)\r\n        dispatch(setChosenPlayer(e.target.id))\r\n        dispatch(setIndexOfClickedPlayer(+e.target.id))\r\n        dispatch(changeClickedMyPlayers(+e.target.id))\r\n    }\r\n\r\n    const playersNumb = teamNumbers.map((el: any) => {\r\n        return (\r\n            <div\r\n                className={el.isClicked ? `${Classes.MyPlayersElement} ${Classes.Clicked}` : `${Classes.MyPlayersElement}`}\r\n                onClick={onClick} id={el.playerNumber}>{el.playerNumber}</div>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            {playersNumb}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayerItem","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\SquardList\\Enemy-Item\\Enemy-Item.tsx",["1001","1002","1003","1004","1005"],"import React, {useEffect, useRef, useState} from \"react\";\r\nimport './../Player-Item/Player-Item.css'\r\nimport Classes from \"../SquardList.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    changeClickedEnemyPlayers,\r\n    setEnemyTeamPlayers,\r\n    setIndexOfClickedEnemyPlayer\r\n} from \"../../../../Redux/Redusers/Game-Window/choose-team-reducer\";\r\nimport {createStatisticForEnemyTeam, setChosenPlayer} from \"../../../../Redux/Redusers/Game-Window/game-statistic\";\r\n\r\ntype PlayerItemPropsType = {\r\n    teamNumbers: any\r\n    isMyTeam: boolean\r\n    teamNames: any\r\n    teamTitle: string\r\n}\r\n\r\nconst EnemyItem: React.FC<PlayerItemPropsType> = ({teamNumbers, isMyTeam, teamNames}) => {\r\n\r\n    const [click, setClick] = useState(false)\r\n    const [playerID, setPlayerID] = useState(null)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setEnemyTeamPlayers(playersNumb))\r\n        dispatch(createStatisticForEnemyTeam(teamNumbers, teamNames))\r\n    },[])\r\n\r\n    const onClick = (e: any) => {\r\n        setClick((prev) => !prev)\r\n        setPlayerID(e.target.id)\r\n        console.log('e.target.id')\r\n        console.log(e.target.id)\r\n        dispatch(setIndexOfClickedEnemyPlayer(+e.target.id))\r\n        dispatch(changeClickedEnemyPlayers(+e.target.id))\r\n    }\r\n\r\n\r\n    let count = 0\r\n    const playersNumb = teamNumbers.map((el: any) => {\r\n        return (\r\n            <div\r\n                className={el.isClicked ? `${Classes.EnemyPlayersElement} ${Classes.Clicked}` : `${Classes.EnemyPlayersElement} `}\r\n                onClick={onClick} id={el.playerNumber}>{el.playerNumber}</div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {playersNumb}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EnemyItem","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\History\\History-Element\\History-Element.tsx",["1006","1007","1008"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\About-Us\\TeamMembers\\Team-Members-Element\\Team-Members-Element.tsx",["1009","1010"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Extra\\Footer-Text\\Extra-information.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Extra\\Footer-Text\\About-Project-Footer-Text.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Extra\\Navigation-Links\\Navigation-Linls.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Field\\Statistics\\All-Pass-Statistics.jsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Modal\\Players-Choose\\Popup-Players-Choose.jsx",["1011","1012"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Profile\\Profile-Container.jsx",["1013"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Players\\Players-Container.jsx",["1014"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Teams\\Teams-Container.jsx",["1015","1016"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Left-Menu\\LeftMenu.jsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Loadable-Img\\Loadable-Img.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Extra\\Footer-Text\\Footer-Text.tsx",["1017"],"import React from \"react\";\r\n\r\nconst FooterText = () => {\r\n\r\n    return(\r\n        <div className='PersonPageFooter' >\r\n            <div className=\"Project\">\r\n                <span className=\"PersonPageFooterTextTitle\">Проект</span>\r\n                <span className=\"PersonPageFooterText\"><a href='https://vk.com/proictis'>Проектный офис ИКТИБ</a></span>\r\n                <span className=\"PersonPageFooterText\"><a href='https://sfedu.ru/'>Южный Федеральный университет</a></span>\r\n                <span className=\"PersonPageFooterText\"><a href='https://ictis.sfedu.ru/'>Институт Компьютерных Технологий и информационной безопасности</a></span>\r\n            </div>\r\n            <div className=\"Project\">\r\n                <span className=\"PersonPageFooterTextCenter\">Связь с нами</span>\r\n                <span className=\"PersonPageFooterText\">BasFeature</span>\r\n                <span className=\"PersonPageFooterText\">+7 905-459-21-58</span>\r\n            </div>\r\n            <div className=\"Project\">\r\n                <span className=\"PersonPageFooterTextEnd\">Дополнительная информация</span>\r\n                <span className=\"PersonPageFooterText\"><a href='https://vk.com/sed_announce'>Кафедра МОП ЭВМ</a></span>\r\n                <span className=\"PersonPageFooterText\"><a href=\"http://sapr.tti.sfedu.ru/\">Кафедра САПР</a></span>\r\n                <span className=\"PersonPageFooterText\"><a href=\"http://vt.sfedu.ru/\">Кафедра ВТ</a></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterText","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Game-History\\Game-History-Container.tsx",["1018"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Field\\FieldContainer.tsx",["1019"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Player-Change.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Hooks\\use-on-screen\\useOnScreen.ts",["1020","1021"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Players\\Players.jsx",["1022"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Teams\\Teams.jsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Game-History\\Game-History.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Active-Player-For-Change\\Active-Player-For-Change.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Player-Change\\Player-For-Change\\Player-For-Change.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Field\\Field.jsx",["1023","1024","1025","1026"],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Game-History\\HistoryItem\\HistoryItem.tsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Players\\PlayerInfo\\PlayerInfo.jsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Players\\PlayerItem\\PlayerItem.jsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Teams\\Add-Team\\AddTeamWindow.jsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Game-Window\\Field\\Player-Item\\Player-Item.jsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\Personal\\Profile\\Profile.jsx",[],"C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Field\\My-Elements\\My-Element.tsx",["1027","1028","1029","1030"],"import React, {useState} from \"react\";\r\nimport Classes from \"../../SquardList/SquardList.module.css\";\r\nimport {setChosenPlayer} from \"../../../../Redux/Redusers/Game-Window/game-statistic\";\r\nimport {\r\n    changeClickedEnemyPlayers, changeClickedMyPlayers,\r\n    setIndexOfClickedEnemyPlayer,\r\n    myPlayerClickInGame\r\n} from \"../../../../Redux/Redusers/Game-Window/choose-team-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype MyElementType = {\r\n    teamNumbers: any\r\n}\r\n\r\nconst MyElements: React.FC<MyElementType> = ({teamNumbers}) => {\r\n\r\n    const [click, setClick] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onClick = (e: any) => {\r\n        debugger\r\n        // setClick((prev) => !prev)\r\n        console.log(e.target.id)\r\n        dispatch(setChosenPlayer(e.target.id))\r\n        dispatch(myPlayerClickInGame(+e.target.id))\r\n        setClick((prev) => !prev)\r\n    }\r\n\r\n    const playersNumb = teamNumbers.map((el: any) => {\r\n        return (\r\n            <div\r\n                className={el.isClicked ? `${Classes.MyPlayersElement} ${Classes.Clicked}` : `${Classes.MyPlayersElement}`}\r\n                onClick={onClick} id={el.playerNumber}>{el.playerNumber}</div>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <>\r\n            {playersNumb}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyElements","C:\\heroku\\basfeature-deploy\\basket-web-app\\src\\Components\\NewField\\Field\\Enemy-Elements\\Enemy-Element.tsx",["1031","1032","1033","1034","1035","1036"],"import React, {useState} from \"react\";\r\nimport Classes from \"../../SquardList/SquardList.module.css\";\r\nimport {setChosenPlayer} from \"../../../../Redux/Redusers/Game-Window/game-statistic\";\r\nimport {\r\n    changeClickedEnemyPlayers, changeClickedMyPlayers, enemyPlayerClickInGame,\r\n    setIndexOfClickedEnemyPlayer\r\n} from \"../../../../Redux/Redusers/Game-Window/choose-team-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype MyElementType = {\r\n    teamNumbers: any\r\n}\r\n\r\nconst EnemyElements: React.FC<MyElementType> = ({teamNumbers}) => {\r\n\r\n    const [click, setClick] = useState(false)\r\n    const [count, setCount] = useState(0)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onClick = (e: any) => {\r\n        debugger\r\n        // setClick((prev) => !prev)\r\n        dispatch(setChosenPlayer(e.target.id))\r\n        dispatch(enemyPlayerClickInGame(+e.target.id))\r\n        setCount((prev) => prev+1)\r\n    }\r\n\r\n    const playersNumb = teamNumbers.map((el: any) => {\r\n        return (\r\n            <div\r\n                className={el.isClicked ? `${Classes.EnemyPlayersElement} ${Classes.Clicked}` : `${Classes.EnemyPlayersElement} `}\r\n                onClick={onClick} id={el.playerNumber}>{el.playerNumber}</div>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <>\r\n            {playersNumb}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EnemyElements",{"ruleId":"1037","replacedBy":"1038"},{"ruleId":"1039","replacedBy":"1040"},{"ruleId":"1041","severity":1,"message":"1042","line":6,"column":8,"nodeType":"1043","messageId":"1044","endLine":6,"endColumn":14},{"ruleId":"1037","replacedBy":"1045"},{"ruleId":"1039","replacedBy":"1046"},{"ruleId":"1041","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1049","line":8,"column":10,"nodeType":"1043","messageId":"1044","endLine":8,"endColumn":24},{"ruleId":"1037","replacedBy":"1045"},{"ruleId":"1039","replacedBy":"1046"},{"ruleId":"1041","severity":1,"message":"1050","line":1,"column":16,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":20},{"ruleId":"1041","severity":1,"message":"1051","line":8,"column":9,"nodeType":"1043","messageId":"1044","endLine":8,"endColumn":15},{"ruleId":"1041","severity":1,"message":"1052","line":14,"column":8,"nodeType":"1043","messageId":"1044","endLine":14,"endColumn":14},{"ruleId":"1041","severity":1,"message":"1053","line":14,"column":16,"nodeType":"1043","messageId":"1044","endLine":14,"endColumn":23},{"ruleId":"1041","severity":1,"message":"1054","line":14,"column":25,"nodeType":"1043","messageId":"1044","endLine":14,"endColumn":31},{"ruleId":"1048","severity":1,"message":"1055","line":225,"column":17,"nodeType":"1043","messageId":"1044","endLine":225,"endColumn":33},{"ruleId":"1048","severity":1,"message":"1056","line":148,"column":11,"nodeType":"1043","messageId":"1044","endLine":148,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1057","line":170,"column":21,"nodeType":"1043","messageId":"1044","endLine":170,"endColumn":35},{"ruleId":"1048","severity":1,"message":"1058","line":171,"column":21,"nodeType":"1043","messageId":"1044","endLine":171,"endColumn":27},{"ruleId":"1048","severity":1,"message":"1059","line":142,"column":6,"nodeType":"1043","messageId":"1044","endLine":142,"endColumn":24},{"ruleId":"1048","severity":1,"message":"1060","line":146,"column":6,"nodeType":"1043","messageId":"1044","endLine":146,"endColumn":27},{"ruleId":"1048","severity":1,"message":"1061","line":1,"column":9,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1062","line":1,"column":18,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":32},{"ruleId":"1048","severity":1,"message":"1063","line":30,"column":17,"nodeType":"1043","messageId":"1044","endLine":30,"endColumn":38},{"ruleId":"1048","severity":1,"message":"1064","line":41,"column":19,"nodeType":"1043","messageId":"1044","endLine":41,"endColumn":43},{"ruleId":"1048","severity":1,"message":"1065","line":9,"column":7,"nodeType":"1043","messageId":"1044","endLine":9,"endColumn":34},{"ruleId":"1048","severity":1,"message":"1066","line":1,"column":7,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1067","line":2,"column":7,"nodeType":"1043","messageId":"1044","endLine":2,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1068","line":24,"column":7,"nodeType":"1043","messageId":"1044","endLine":24,"endColumn":23},{"ruleId":"1069","severity":1,"message":"1070","line":33,"column":5,"nodeType":"1071","messageId":"1072","endLine":33,"endColumn":18},{"ruleId":"1048","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1073","line":7,"column":9,"nodeType":"1043","messageId":"1044","endLine":7,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1074","line":7,"column":18,"nodeType":"1043","messageId":"1044","endLine":7,"endColumn":29},{"ruleId":"1048","severity":1,"message":"1075","line":7,"column":31,"nodeType":"1043","messageId":"1044","endLine":7,"endColumn":35},{"ruleId":"1048","severity":1,"message":"1076","line":32,"column":8,"nodeType":"1043","messageId":"1044","endLine":32,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1077","line":33,"column":8,"nodeType":"1043","messageId":"1044","endLine":33,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1078","line":36,"column":8,"nodeType":"1043","messageId":"1044","endLine":36,"endColumn":18},{"ruleId":"1048","severity":1,"message":"1079","line":39,"column":8,"nodeType":"1043","messageId":"1044","endLine":39,"endColumn":18},{"ruleId":"1048","severity":1,"message":"1080","line":40,"column":8,"nodeType":"1043","messageId":"1044","endLine":40,"endColumn":21},{"ruleId":"1048","severity":1,"message":"1081","line":84,"column":11,"nodeType":"1043","messageId":"1044","endLine":84,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1082","line":85,"column":11,"nodeType":"1043","messageId":"1044","endLine":85,"endColumn":19},{"ruleId":"1048","severity":1,"message":"1083","line":86,"column":11,"nodeType":"1043","messageId":"1044","endLine":86,"endColumn":24},{"ruleId":"1048","severity":1,"message":"1084","line":94,"column":12,"nodeType":"1043","messageId":"1044","endLine":94,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1086","line":246,"column":82,"nodeType":"1087","messageId":"1088","endLine":246,"endColumn":83},{"ruleId":"1085","severity":1,"message":"1086","line":246,"column":88,"nodeType":"1087","messageId":"1088","endLine":246,"endColumn":89},{"ruleId":"1085","severity":1,"message":"1086","line":249,"column":103,"nodeType":"1087","messageId":"1088","endLine":249,"endColumn":104},{"ruleId":"1085","severity":1,"message":"1086","line":249,"column":109,"nodeType":"1087","messageId":"1088","endLine":249,"endColumn":110},{"ruleId":"1089","severity":1,"message":"1090","line":9,"column":18,"nodeType":"1091","messageId":"1092","endLine":9,"endColumn":20},{"ruleId":"1089","severity":1,"message":"1090","line":9,"column":21,"nodeType":"1091","messageId":"1092","endLine":9,"endColumn":23},{"ruleId":"1041","severity":1,"message":"1093","line":17,"column":9,"nodeType":"1043","messageId":"1044","endLine":17,"endColumn":17},{"ruleId":"1041","severity":1,"message":"1093","line":72,"column":9,"nodeType":"1043","messageId":"1044","endLine":72,"endColumn":17},{"ruleId":"1041","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1041","severity":1,"message":"1094","line":1,"column":9,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1095","line":1,"column":26,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":35},{"ruleId":"1048","severity":1,"message":"1096","line":1,"column":37,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":46},{"ruleId":"1048","severity":1,"message":"1097","line":4,"column":9,"nodeType":"1043","messageId":"1044","endLine":4,"endColumn":21},{"ruleId":"1048","severity":1,"message":"1098","line":5,"column":15,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1099","line":5,"column":25,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":30},{"ruleId":"1048","severity":1,"message":"1100","line":7,"column":9,"nodeType":"1043","messageId":"1044","endLine":7,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1101","line":14,"column":7,"nodeType":"1043","messageId":"1044","endLine":14,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1102","line":167,"column":12,"nodeType":"1043","messageId":"1044","endLine":167,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1103","line":167,"column":24,"nodeType":"1043","messageId":"1044","endLine":167,"endColumn":37},{"ruleId":"1048","severity":1,"message":"1104","line":169,"column":12,"nodeType":"1043","messageId":"1044","endLine":169,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1105","line":169,"column":22,"nodeType":"1043","messageId":"1044","endLine":169,"endColumn":33},{"ruleId":"1048","severity":1,"message":"1106","line":170,"column":12,"nodeType":"1043","messageId":"1044","endLine":170,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1107","line":170,"column":18,"nodeType":"1043","messageId":"1044","endLine":170,"endColumn":25},{"ruleId":"1048","severity":1,"message":"1108","line":173,"column":11,"nodeType":"1043","messageId":"1044","endLine":173,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1109","line":240,"column":10,"nodeType":"1043","messageId":"1044","endLine":240,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1110","line":270,"column":11,"nodeType":"1043","messageId":"1044","endLine":270,"endColumn":27},{"ruleId":"1048","severity":1,"message":"1111","line":16,"column":25,"nodeType":"1043","messageId":"1044","endLine":16,"endColumn":48},{"ruleId":"1089","severity":1,"message":"1090","line":27,"column":46,"nodeType":"1091","messageId":"1092","endLine":27,"endColumn":48},{"ruleId":"1048","severity":1,"message":"1112","line":29,"column":22,"nodeType":"1043","messageId":"1044","endLine":29,"endColumn":33},{"ruleId":"1048","severity":1,"message":"1113","line":30,"column":21,"nodeType":"1043","messageId":"1044","endLine":30,"endColumn":31},{"ruleId":"1048","severity":1,"message":"1114","line":34,"column":11,"nodeType":"1043","messageId":"1044","endLine":34,"endColumn":19},{"ruleId":"1115","severity":1,"message":"1116","line":77,"column":8,"nodeType":"1117","endLine":77,"endColumn":21,"suggestions":"1118"},{"ruleId":"1115","severity":1,"message":"1119","line":87,"column":8,"nodeType":"1117","endLine":87,"endColumn":21,"suggestions":"1120"},{"ruleId":"1121","severity":1,"message":"1122","line":89,"column":24,"nodeType":"1087","messageId":"1092","endLine":89,"endColumn":26},{"ruleId":"1048","severity":1,"message":"1123","line":1,"column":22,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":30},{"ruleId":"1048","severity":1,"message":"1073","line":2,"column":9,"nodeType":"1043","messageId":"1044","endLine":2,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1051","line":3,"column":9,"nodeType":"1043","messageId":"1044","endLine":3,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1124","line":4,"column":9,"nodeType":"1043","messageId":"1044","endLine":4,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1125","line":4,"column":22,"nodeType":"1043","messageId":"1044","endLine":4,"endColumn":33},{"ruleId":"1048","severity":1,"message":"1126","line":5,"column":9,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":25},{"ruleId":"1048","severity":1,"message":"1127","line":5,"column":27,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":39},{"ruleId":"1048","severity":1,"message":"1128","line":5,"column":41,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":52},{"ruleId":"1048","severity":1,"message":"1129","line":7,"column":9,"nodeType":"1043","messageId":"1044","endLine":7,"endColumn":26},{"ruleId":"1089","severity":1,"message":"1090","line":13,"column":52,"nodeType":"1091","messageId":"1092","endLine":13,"endColumn":54},{"ruleId":"1089","severity":1,"message":"1090","line":15,"column":52,"nodeType":"1091","messageId":"1092","endLine":15,"endColumn":54},{"ruleId":"1048","severity":1,"message":"1130","line":21,"column":20,"nodeType":"1043","messageId":"1044","endLine":21,"endColumn":29},{"ruleId":"1115","severity":1,"message":"1131","line":43,"column":8,"nodeType":"1117","endLine":43,"endColumn":22,"suggestions":"1132"},{"ruleId":"1115","severity":1,"message":"1133","line":47,"column":8,"nodeType":"1117","endLine":47,"endColumn":25,"suggestions":"1134"},{"ruleId":"1048","severity":1,"message":"1095","line":1,"column":16,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":25},{"ruleId":"1048","severity":1,"message":"1123","line":1,"column":27,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":35},{"ruleId":"1048","severity":1,"message":"1124","line":3,"column":9,"nodeType":"1043","messageId":"1044","endLine":3,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1135","line":12,"column":9,"nodeType":"1043","messageId":"1044","endLine":12,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1090","line":16,"column":52,"nodeType":"1091","messageId":"1092","endLine":16,"endColumn":54},{"ruleId":"1048","severity":1,"message":"1136","line":22,"column":11,"nodeType":"1043","messageId":"1044","endLine":22,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1137","line":27,"column":11,"nodeType":"1043","messageId":"1044","endLine":27,"endColumn":18},{"ruleId":"1048","severity":1,"message":"1078","line":5,"column":8,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":18},{"ruleId":"1089","severity":1,"message":"1090","line":35,"column":42,"nodeType":"1091","messageId":"1092","endLine":35,"endColumn":44},{"ruleId":"1115","severity":1,"message":"1138","line":59,"column":8,"nodeType":"1117","endLine":59,"endColumn":10,"suggestions":"1139"},{"ruleId":"1115","severity":1,"message":"1140","line":63,"column":8,"nodeType":"1117","endLine":63,"endColumn":23,"suggestions":"1141"},{"ruleId":"1048","severity":1,"message":"1142","line":72,"column":11,"nodeType":"1043","messageId":"1044","endLine":72,"endColumn":27},{"ruleId":"1048","severity":1,"message":"1143","line":76,"column":11,"nodeType":"1043","messageId":"1044","endLine":76,"endColumn":32},{"ruleId":"1115","severity":1,"message":"1144","line":88,"column":8,"nodeType":"1117","endLine":88,"endColumn":10,"suggestions":"1145"},{"ruleId":"1115","severity":1,"message":"1144","line":98,"column":8,"nodeType":"1117","endLine":98,"endColumn":10,"suggestions":"1146"},{"ruleId":"1048","severity":1,"message":"1147","line":104,"column":11,"nodeType":"1043","messageId":"1044","endLine":104,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1076","line":2,"column":8,"nodeType":"1043","messageId":"1044","endLine":2,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1123","line":1,"column":48,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":56},{"ruleId":"1115","severity":1,"message":"1148","line":67,"column":7,"nodeType":"1117","endLine":67,"endColumn":9,"suggestions":"1149"},{"ruleId":"1048","severity":1,"message":"1095","line":1,"column":22,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":31},{"ruleId":"1089","severity":1,"message":"1090","line":22,"column":22,"nodeType":"1091","messageId":"1092","endLine":22,"endColumn":24},{"ruleId":"1048","severity":1,"message":"1150","line":25,"column":11,"nodeType":"1043","messageId":"1044","endLine":25,"endColumn":25},{"ruleId":"1089","severity":1,"message":"1090","line":4,"column":28,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":30},{"ruleId":"1048","severity":1,"message":"1151","line":5,"column":35,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":45},{"ruleId":"1048","severity":1,"message":"1152","line":7,"column":8,"nodeType":"1043","messageId":"1044","endLine":7,"endColumn":26},{"ruleId":"1089","severity":1,"message":"1090","line":9,"column":25,"nodeType":"1091","messageId":"1092","endLine":9,"endColumn":27},{"ruleId":"1115","severity":1,"message":"1153","line":19,"column":8,"nodeType":"1117","endLine":19,"endColumn":10,"suggestions":"1154"},{"ruleId":"1089","severity":1,"message":"1090","line":6,"column":22,"nodeType":"1091","messageId":"1092","endLine":6,"endColumn":24},{"ruleId":"1048","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1155","line":5,"column":8,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":17},{"ruleId":"1156","severity":1,"message":"1157","line":16,"column":7,"nodeType":"1043","messageId":"1158","endLine":16,"endColumn":54},{"ruleId":"1115","severity":1,"message":"1159","line":17,"column":8,"nodeType":"1117","endLine":17,"endColumn":39,"suggestions":"1160"},{"ruleId":"1115","severity":1,"message":"1159","line":22,"column":7,"nodeType":"1117","endLine":22,"endColumn":9,"suggestions":"1161"},{"ruleId":"1041","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1041","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1041","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1041","severity":1,"message":"1076","line":2,"column":8,"nodeType":"1043","messageId":"1044","endLine":2,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1162","line":1,"column":27,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":33},{"ruleId":"1048","severity":1,"message":"1163","line":21,"column":12,"nodeType":"1043","messageId":"1044","endLine":21,"endColumn":20},{"ruleId":"1115","severity":1,"message":"1164","line":27,"column":7,"nodeType":"1117","endLine":27,"endColumn":9,"suggestions":"1165"},{"ruleId":"1048","severity":1,"message":"1056","line":40,"column":9,"nodeType":"1043","messageId":"1044","endLine":40,"endColumn":14},{"ruleId":"1048","severity":1,"message":"1166","line":6,"column":5,"nodeType":"1043","messageId":"1044","endLine":6,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1167","line":21,"column":12,"nodeType":"1043","messageId":"1044","endLine":21,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1163","line":22,"column":12,"nodeType":"1043","messageId":"1044","endLine":22,"endColumn":20},{"ruleId":"1115","severity":1,"message":"1164","line":28,"column":7,"nodeType":"1117","endLine":28,"endColumn":9,"suggestions":"1168"},{"ruleId":"1048","severity":1,"message":"1169","line":30,"column":11,"nodeType":"1043","messageId":"1044","endLine":30,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1056","line":28,"column":12,"nodeType":"1043","messageId":"1044","endLine":28,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1170","line":28,"column":19,"nodeType":"1043","messageId":"1044","endLine":28,"endColumn":27},{"ruleId":"1048","severity":1,"message":"1084","line":29,"column":12,"nodeType":"1043","messageId":"1044","endLine":29,"endColumn":18},{"ruleId":"1048","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1115","severity":1,"message":"1171","line":21,"column":40,"nodeType":"1043","endLine":21,"endColumn":47},{"ruleId":"1115","severity":1,"message":"1172","line":23,"column":8,"nodeType":"1117","endLine":23,"endColumn":10,"suggestions":"1173"},{"ruleId":"1041","severity":1,"message":"1073","line":3,"column":9,"nodeType":"1043","messageId":"1044","endLine":3,"endColumn":16},{"ruleId":"1115","severity":1,"message":"1174","line":60,"column":8,"nodeType":"1117","endLine":60,"endColumn":15,"suggestions":"1175"},{"ruleId":"1115","severity":1,"message":"1176","line":68,"column":8,"nodeType":"1117","endLine":68,"endColumn":15,"suggestions":"1177"},{"ruleId":"1115","severity":1,"message":"1176","line":102,"column":8,"nodeType":"1117","endLine":102,"endColumn":42,"suggestions":"1178"},{"ruleId":"1115","severity":1,"message":"1176","line":114,"column":8,"nodeType":"1117","endLine":114,"endColumn":44,"suggestions":"1179"},{"ruleId":"1041","severity":1,"message":"1042","line":6,"column":8,"nodeType":"1043","messageId":"1044","endLine":6,"endColumn":14},{"ruleId":"1037","replacedBy":"1180"},{"ruleId":"1039","replacedBy":"1181"},{"ruleId":"1041","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1049","line":8,"column":10,"nodeType":"1043","messageId":"1044","endLine":8,"endColumn":24},{"ruleId":"1037","replacedBy":"1180"},{"ruleId":"1039","replacedBy":"1181"},{"ruleId":"1041","severity":1,"message":"1050","line":1,"column":16,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":20},{"ruleId":"1041","severity":1,"message":"1051","line":8,"column":9,"nodeType":"1043","messageId":"1044","endLine":8,"endColumn":15},{"ruleId":"1041","severity":1,"message":"1052","line":14,"column":8,"nodeType":"1043","messageId":"1044","endLine":14,"endColumn":14},{"ruleId":"1041","severity":1,"message":"1053","line":14,"column":16,"nodeType":"1043","messageId":"1044","endLine":14,"endColumn":23},{"ruleId":"1041","severity":1,"message":"1054","line":14,"column":25,"nodeType":"1043","messageId":"1044","endLine":14,"endColumn":31},{"ruleId":"1048","severity":1,"message":"1055","line":223,"column":17,"nodeType":"1043","messageId":"1044","endLine":223,"endColumn":33},{"ruleId":"1048","severity":1,"message":"1056","line":148,"column":11,"nodeType":"1043","messageId":"1044","endLine":148,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1057","line":170,"column":21,"nodeType":"1043","messageId":"1044","endLine":170,"endColumn":35},{"ruleId":"1048","severity":1,"message":"1058","line":171,"column":21,"nodeType":"1043","messageId":"1044","endLine":171,"endColumn":27},{"ruleId":"1048","severity":1,"message":"1063","line":30,"column":17,"nodeType":"1043","messageId":"1044","endLine":30,"endColumn":38},{"ruleId":"1048","severity":1,"message":"1064","line":41,"column":19,"nodeType":"1043","messageId":"1044","endLine":41,"endColumn":43},{"ruleId":"1048","severity":1,"message":"1061","line":1,"column":9,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1062","line":1,"column":18,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":32},{"ruleId":"1048","severity":1,"message":"1059","line":275,"column":6,"nodeType":"1043","messageId":"1044","endLine":275,"endColumn":24},{"ruleId":"1048","severity":1,"message":"1060","line":279,"column":6,"nodeType":"1043","messageId":"1044","endLine":279,"endColumn":27},{"ruleId":"1048","severity":1,"message":"1066","line":1,"column":7,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1067","line":2,"column":7,"nodeType":"1043","messageId":"1044","endLine":2,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1068","line":24,"column":7,"nodeType":"1043","messageId":"1044","endLine":24,"endColumn":23},{"ruleId":"1069","severity":1,"message":"1070","line":33,"column":5,"nodeType":"1071","messageId":"1072","endLine":33,"endColumn":18},{"ruleId":"1048","severity":1,"message":"1065","line":9,"column":7,"nodeType":"1043","messageId":"1044","endLine":9,"endColumn":34},{"ruleId":"1089","severity":1,"message":"1090","line":9,"column":18,"nodeType":"1091","messageId":"1092","endLine":9,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1089","severity":1,"message":"1090","line":9,"column":21,"nodeType":"1091","messageId":"1092","endLine":9,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1073","line":7,"column":9,"nodeType":"1043","messageId":"1044","endLine":7,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1074","line":7,"column":18,"nodeType":"1043","messageId":"1044","endLine":7,"endColumn":29},{"ruleId":"1048","severity":1,"message":"1075","line":7,"column":31,"nodeType":"1043","messageId":"1044","endLine":7,"endColumn":35},{"ruleId":"1048","severity":1,"message":"1076","line":32,"column":8,"nodeType":"1043","messageId":"1044","endLine":32,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1077","line":33,"column":8,"nodeType":"1043","messageId":"1044","endLine":33,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1078","line":36,"column":8,"nodeType":"1043","messageId":"1044","endLine":36,"endColumn":18},{"ruleId":"1048","severity":1,"message":"1079","line":39,"column":8,"nodeType":"1043","messageId":"1044","endLine":39,"endColumn":18},{"ruleId":"1048","severity":1,"message":"1080","line":40,"column":8,"nodeType":"1043","messageId":"1044","endLine":40,"endColumn":21},{"ruleId":"1048","severity":1,"message":"1081","line":84,"column":11,"nodeType":"1043","messageId":"1044","endLine":84,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1082","line":85,"column":11,"nodeType":"1043","messageId":"1044","endLine":85,"endColumn":19},{"ruleId":"1048","severity":1,"message":"1083","line":86,"column":11,"nodeType":"1043","messageId":"1044","endLine":86,"endColumn":24},{"ruleId":"1048","severity":1,"message":"1084","line":94,"column":12,"nodeType":"1043","messageId":"1044","endLine":94,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1086","line":246,"column":82,"nodeType":"1087","messageId":"1088","endLine":246,"endColumn":83},{"ruleId":"1085","severity":1,"message":"1086","line":246,"column":88,"nodeType":"1087","messageId":"1088","endLine":246,"endColumn":89},{"ruleId":"1085","severity":1,"message":"1086","line":249,"column":103,"nodeType":"1087","messageId":"1088","endLine":249,"endColumn":104},{"ruleId":"1085","severity":1,"message":"1086","line":249,"column":109,"nodeType":"1087","messageId":"1088","endLine":249,"endColumn":110},{"ruleId":"1041","severity":1,"message":"1093","line":17,"column":9,"nodeType":"1043","messageId":"1044","endLine":17,"endColumn":17},{"ruleId":"1041","severity":1,"message":"1093","line":72,"column":9,"nodeType":"1043","messageId":"1044","endLine":72,"endColumn":17},{"ruleId":"1041","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1041","severity":1,"message":"1094","line":1,"column":9,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1095","line":1,"column":26,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":35},{"ruleId":"1048","severity":1,"message":"1096","line":1,"column":37,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":46},{"ruleId":"1048","severity":1,"message":"1097","line":4,"column":9,"nodeType":"1043","messageId":"1044","endLine":4,"endColumn":21},{"ruleId":"1048","severity":1,"message":"1098","line":5,"column":15,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1099","line":5,"column":25,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":30},{"ruleId":"1048","severity":1,"message":"1100","line":7,"column":9,"nodeType":"1043","messageId":"1044","endLine":7,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1101","line":14,"column":7,"nodeType":"1043","messageId":"1044","endLine":14,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1102","line":167,"column":12,"nodeType":"1043","messageId":"1044","endLine":167,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1103","line":167,"column":24,"nodeType":"1043","messageId":"1044","endLine":167,"endColumn":37},{"ruleId":"1048","severity":1,"message":"1104","line":169,"column":12,"nodeType":"1043","messageId":"1044","endLine":169,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1105","line":169,"column":22,"nodeType":"1043","messageId":"1044","endLine":169,"endColumn":33},{"ruleId":"1048","severity":1,"message":"1106","line":170,"column":12,"nodeType":"1043","messageId":"1044","endLine":170,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1107","line":170,"column":18,"nodeType":"1043","messageId":"1044","endLine":170,"endColumn":25},{"ruleId":"1048","severity":1,"message":"1108","line":173,"column":11,"nodeType":"1043","messageId":"1044","endLine":173,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1109","line":240,"column":10,"nodeType":"1043","messageId":"1044","endLine":240,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1110","line":270,"column":11,"nodeType":"1043","messageId":"1044","endLine":270,"endColumn":27},{"ruleId":"1048","severity":1,"message":"1123","line":1,"column":22,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":30},{"ruleId":"1048","severity":1,"message":"1073","line":2,"column":9,"nodeType":"1043","messageId":"1044","endLine":2,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1051","line":3,"column":9,"nodeType":"1043","messageId":"1044","endLine":3,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1124","line":4,"column":9,"nodeType":"1043","messageId":"1044","endLine":4,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1125","line":4,"column":22,"nodeType":"1043","messageId":"1044","endLine":4,"endColumn":33},{"ruleId":"1048","severity":1,"message":"1126","line":5,"column":9,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":25},{"ruleId":"1048","severity":1,"message":"1127","line":5,"column":27,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":39},{"ruleId":"1048","severity":1,"message":"1128","line":5,"column":41,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":52},{"ruleId":"1048","severity":1,"message":"1129","line":7,"column":9,"nodeType":"1043","messageId":"1044","endLine":7,"endColumn":26},{"ruleId":"1089","severity":1,"message":"1090","line":13,"column":52,"nodeType":"1091","messageId":"1092","endLine":13,"endColumn":54},{"ruleId":"1048","severity":1,"message":"1095","line":1,"column":22,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":31},{"ruleId":"1089","severity":1,"message":"1090","line":22,"column":22,"nodeType":"1091","messageId":"1092","endLine":22,"endColumn":24},{"ruleId":"1048","severity":1,"message":"1150","line":25,"column":11,"nodeType":"1043","messageId":"1044","endLine":25,"endColumn":25},{"ruleId":"1089","severity":1,"message":"1090","line":4,"column":28,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":30},{"ruleId":"1048","severity":1,"message":"1076","line":2,"column":8,"nodeType":"1043","messageId":"1044","endLine":2,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1078","line":5,"column":8,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":18},{"ruleId":"1048","severity":1,"message":"1111","line":16,"column":25,"nodeType":"1043","messageId":"1044","endLine":16,"endColumn":48},{"ruleId":"1089","severity":1,"message":"1090","line":27,"column":46,"nodeType":"1091","messageId":"1092","endLine":27,"endColumn":48},{"ruleId":"1048","severity":1,"message":"1182","line":28,"column":12,"nodeType":"1043","messageId":"1044","endLine":28,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1183","line":29,"column":12,"nodeType":"1043","messageId":"1044","endLine":29,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1112","line":29,"column":22,"nodeType":"1043","messageId":"1044","endLine":29,"endColumn":33},{"ruleId":"1048","severity":1,"message":"1113","line":30,"column":21,"nodeType":"1043","messageId":"1044","endLine":30,"endColumn":31},{"ruleId":"1048","severity":1,"message":"1084","line":31,"column":12,"nodeType":"1043","messageId":"1044","endLine":31,"endColumn":18},{"ruleId":"1048","severity":1,"message":"1114","line":34,"column":11,"nodeType":"1043","messageId":"1044","endLine":34,"endColumn":19},{"ruleId":"1115","severity":1,"message":"1119","line":79,"column":8,"nodeType":"1117","endLine":79,"endColumn":21,"suggestions":"1184"},{"ruleId":"1121","severity":1,"message":"1122","line":81,"column":24,"nodeType":"1087","messageId":"1092","endLine":81,"endColumn":26},{"ruleId":"1048","severity":1,"message":"1123","line":1,"column":27,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":35},{"ruleId":"1048","severity":1,"message":"1135","line":12,"column":9,"nodeType":"1043","messageId":"1044","endLine":12,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1090","line":17,"column":52,"nodeType":"1091","messageId":"1092","endLine":17,"endColumn":54},{"ruleId":"1048","severity":1,"message":"1136","line":23,"column":11,"nodeType":"1043","messageId":"1044","endLine":23,"endColumn":22},{"ruleId":"1115","severity":1,"message":"1185","line":32,"column":8,"nodeType":"1117","endLine":32,"endColumn":22,"suggestions":"1186"},{"ruleId":"1115","severity":1,"message":"1185","line":36,"column":8,"nodeType":"1117","endLine":36,"endColumn":25,"suggestions":"1187"},{"ruleId":"1048","severity":1,"message":"1137","line":39,"column":11,"nodeType":"1043","messageId":"1044","endLine":39,"endColumn":18},{"ruleId":"1048","severity":1,"message":"1188","line":27,"column":5,"nodeType":"1043","messageId":"1044","endLine":27,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1189","line":32,"column":8,"nodeType":"1043","messageId":"1044","endLine":32,"endColumn":18},{"ruleId":"1089","severity":1,"message":"1090","line":40,"column":42,"nodeType":"1091","messageId":"1092","endLine":40,"endColumn":44},{"ruleId":"1048","severity":1,"message":"1190","line":42,"column":12,"nodeType":"1043","messageId":"1044","endLine":42,"endColumn":19},{"ruleId":"1048","severity":1,"message":"1191","line":42,"column":21,"nodeType":"1043","messageId":"1044","endLine":42,"endColumn":31},{"ruleId":"1048","severity":1,"message":"1192","line":50,"column":11,"nodeType":"1043","messageId":"1044","endLine":50,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1193","line":51,"column":11,"nodeType":"1043","messageId":"1044","endLine":51,"endColumn":25},{"ruleId":"1048","severity":1,"message":"1194","line":54,"column":11,"nodeType":"1043","messageId":"1044","endLine":54,"endColumn":24},{"ruleId":"1115","severity":1,"message":"1138","line":74,"column":8,"nodeType":"1117","endLine":74,"endColumn":10,"suggestions":"1195"},{"ruleId":"1048","severity":1,"message":"1196","line":77,"column":9,"nodeType":"1043","messageId":"1044","endLine":77,"endColumn":20},{"ruleId":"1115","severity":1,"message":"1197","line":80,"column":8,"nodeType":"1117","endLine":80,"endColumn":18,"suggestions":"1198"},{"ruleId":"1048","severity":1,"message":"1142","line":93,"column":11,"nodeType":"1043","messageId":"1044","endLine":93,"endColumn":27},{"ruleId":"1048","severity":1,"message":"1143","line":97,"column":11,"nodeType":"1043","messageId":"1044","endLine":97,"endColumn":32},{"ruleId":"1048","severity":1,"message":"1147","line":128,"column":11,"nodeType":"1043","messageId":"1044","endLine":128,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1090","line":16,"column":52,"nodeType":"1091","messageId":"1092","endLine":16,"endColumn":54},{"ruleId":"1048","severity":1,"message":"1130","line":22,"column":20,"nodeType":"1043","messageId":"1044","endLine":22,"endColumn":29},{"ruleId":"1115","severity":1,"message":"1131","line":44,"column":8,"nodeType":"1117","endLine":44,"endColumn":22,"suggestions":"1199"},{"ruleId":"1115","severity":1,"message":"1133","line":48,"column":8,"nodeType":"1117","endLine":48,"endColumn":25,"suggestions":"1200"},{"ruleId":"1089","severity":1,"message":"1090","line":6,"column":22,"nodeType":"1091","messageId":"1092","endLine":6,"endColumn":24},{"ruleId":"1048","severity":1,"message":"1151","line":5,"column":35,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":45},{"ruleId":"1048","severity":1,"message":"1152","line":7,"column":8,"nodeType":"1043","messageId":"1044","endLine":7,"endColumn":26},{"ruleId":"1089","severity":1,"message":"1090","line":9,"column":25,"nodeType":"1091","messageId":"1092","endLine":9,"endColumn":27},{"ruleId":"1115","severity":1,"message":"1153","line":20,"column":8,"nodeType":"1117","endLine":20,"endColumn":10,"suggestions":"1201"},{"ruleId":"1048","severity":1,"message":"1123","line":1,"column":48,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":56},{"ruleId":"1115","severity":1,"message":"1148","line":67,"column":7,"nodeType":"1117","endLine":67,"endColumn":9,"suggestions":"1202"},{"ruleId":"1048","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1166","line":7,"column":5,"nodeType":"1043","messageId":"1044","endLine":7,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1167","line":22,"column":12,"nodeType":"1043","messageId":"1044","endLine":22,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1163","line":23,"column":12,"nodeType":"1043","messageId":"1044","endLine":23,"endColumn":20},{"ruleId":"1115","severity":1,"message":"1164","line":30,"column":7,"nodeType":"1117","endLine":30,"endColumn":9,"suggestions":"1203"},{"ruleId":"1048","severity":1,"message":"1162","line":1,"column":27,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":33},{"ruleId":"1048","severity":1,"message":"1167","line":21,"column":12,"nodeType":"1043","messageId":"1044","endLine":21,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1163","line":22,"column":12,"nodeType":"1043","messageId":"1044","endLine":22,"endColumn":20},{"ruleId":"1115","severity":1,"message":"1164","line":28,"column":7,"nodeType":"1117","endLine":28,"endColumn":9,"suggestions":"1204"},{"ruleId":"1048","severity":1,"message":"1056","line":41,"column":9,"nodeType":"1043","messageId":"1044","endLine":41,"endColumn":14},{"ruleId":"1048","severity":1,"message":"1056","line":28,"column":12,"nodeType":"1043","messageId":"1044","endLine":28,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1170","line":28,"column":19,"nodeType":"1043","messageId":"1044","endLine":28,"endColumn":27},{"ruleId":"1048","severity":1,"message":"1084","line":29,"column":12,"nodeType":"1043","messageId":"1044","endLine":29,"endColumn":18},{"ruleId":"1048","severity":1,"message":"1155","line":5,"column":8,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":17},{"ruleId":"1156","severity":1,"message":"1157","line":16,"column":7,"nodeType":"1043","messageId":"1158","endLine":16,"endColumn":54},{"ruleId":"1115","severity":1,"message":"1159","line":17,"column":8,"nodeType":"1117","endLine":17,"endColumn":39,"suggestions":"1205"},{"ruleId":"1115","severity":1,"message":"1159","line":22,"column":7,"nodeType":"1117","endLine":22,"endColumn":9,"suggestions":"1206"},{"ruleId":"1041","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1041","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1041","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1041","severity":1,"message":"1076","line":2,"column":8,"nodeType":"1043","messageId":"1044","endLine":2,"endColumn":15},{"ruleId":"1207","severity":1,"message":"1208","line":11,"column":56,"nodeType":"1209","endLine":11,"endColumn":67},{"ruleId":"1048","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1047","line":1,"column":8,"nodeType":"1043","messageId":"1044","endLine":1,"endColumn":13},{"ruleId":"1115","severity":1,"message":"1171","line":21,"column":40,"nodeType":"1043","endLine":21,"endColumn":47},{"ruleId":"1115","severity":1,"message":"1172","line":23,"column":8,"nodeType":"1117","endLine":23,"endColumn":10,"suggestions":"1210"},{"ruleId":"1041","severity":1,"message":"1073","line":3,"column":9,"nodeType":"1043","messageId":"1044","endLine":3,"endColumn":16},{"ruleId":"1115","severity":1,"message":"1174","line":60,"column":8,"nodeType":"1117","endLine":60,"endColumn":15,"suggestions":"1211"},{"ruleId":"1115","severity":1,"message":"1176","line":68,"column":8,"nodeType":"1117","endLine":68,"endColumn":15,"suggestions":"1212"},{"ruleId":"1115","severity":1,"message":"1176","line":102,"column":8,"nodeType":"1117","endLine":102,"endColumn":42,"suggestions":"1213"},{"ruleId":"1115","severity":1,"message":"1176","line":114,"column":8,"nodeType":"1117","endLine":114,"endColumn":44,"suggestions":"1214"},{"ruleId":"1048","severity":1,"message":"1215","line":5,"column":5,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":30},{"ruleId":"1048","severity":1,"message":"1216","line":5,"column":32,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":54},{"ruleId":"1048","severity":1,"message":"1217","line":6,"column":5,"nodeType":"1043","messageId":"1044","endLine":6,"endColumn":33},{"ruleId":"1048","severity":1,"message":"1167","line":17,"column":12,"nodeType":"1043","messageId":"1044","endLine":17,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1218","line":3,"column":9,"nodeType":"1043","messageId":"1044","endLine":3,"endColumn":24},{"ruleId":"1048","severity":1,"message":"1215","line":5,"column":5,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":30},{"ruleId":"1048","severity":1,"message":"1216","line":5,"column":32,"nodeType":"1043","messageId":"1044","endLine":5,"endColumn":54},{"ruleId":"1048","severity":1,"message":"1217","line":6,"column":5,"nodeType":"1043","messageId":"1044","endLine":6,"endColumn":33},{"ruleId":"1048","severity":1,"message":"1167","line":16,"column":12,"nodeType":"1043","messageId":"1044","endLine":16,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1056","line":17,"column":12,"nodeType":"1043","messageId":"1044","endLine":17,"endColumn":17},"no-native-reassign",["1219"],"no-negated-in-lhs",["1220"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar",["1219"],["1220"],"'React' is defined but never used.","@typescript-eslint/no-unused-vars","'configureStore' is defined but never used.","'memo' is defined but never used.","'Button' is defined but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'buffInputFormArr' is assigned a value but never used.","'count' is assigned a value but never used.","'buffPlayerCopy' is assigned a value but never used.","'iCount' is assigned a value but never used.","'SetMyTeamValueType' is defined but never used.","'SetEnemyTeamValueType' is defined but never used.","'addGame' is defined but never used.","'getListOfGames' is defined but never used.","'selectTeamMembersBuff' is defined but never used.","'selectTeamMembersBuffArr' is assigned a value but never used.","'CHANGE_PERSON_USER_PASSWORD' is assigned a value but never used.","'ADD_PLAYER' is assigned a value but never used.","'ADD_PLAYER_INFO' is assigned a value but never used.","'InitialStateType' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'NavLink' is defined but never used.","'useLocation' is defined but never used.","'Link' is defined but never used.","'Classes' is defined but never used.","'NavigationLinks' is defined but never used.","'FooterText' is defined but never used.","'MyTeamIcon' is defined but never used.","'EnemyTeamIcon' is defined but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'authorization' is assigned a value but never used.","'crutch' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'response' is assigned a value but never used.","'createSelector' is defined but never used.","'useEffect' is defined but never used.","'FormEvent' is defined but never used.","'setLoginUser' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'current' is defined but never used.","'fetchingStyle' is assigned a value but never used.","'confirmReg' is assigned a value but never used.","'setConfirmReg' is assigned a value but never used.","'userPass' is assigned a value but never used.","'setUserPass' is assigned a value but never used.","'time' is assigned a value but never used.","'setTime' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'ErrorsType' is defined but never used.","'WrappedLink' is assigned a value but never used.","'HistoryElementPropsType' is defined but never used.","'setTableUrl' is assigned a value but never used.","'setIsStart' is assigned a value but never used.","'players2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'crutch'. Either include it or remove the dependency array.","ArrayExpression",["1221"],"React Hook useEffect has missing dependencies: 'deleteAction', 'deletePlayerNumber', 'deleteSector', and 'history'. Either include them or remove the dependency array.",["1222"],"eqeqeq","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'getAuthorization' is defined but never used.","'getFirstName' is defined but never used.","'getLastName' is defined but never used.","'exitActiveSession' is defined but never used.","'setIsGame' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chosenMyTeam' and 'setMyFilterTeams'. Either include them or remove the dependency array.",["1223"],"React Hook useEffect has missing dependencies: 'chosenEnemyTeam' and 'setEnemyFilterTeams'. Either include them or remove the dependency array.",["1224"],"'setSquardActive' is defined but never used.","'urlResponse' is assigned a value but never used.","'onClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'crutch' and 'dispatch'. Either include them or remove the dependency array. You can also do a functional update 'setCrutch(c => ...)' if you only need 'crutch' in the 'setCrutch' call.",["1225"],"React Hook useEffect has a missing dependency: 'crutch'. Either include it or remove the dependency array. You can also do a functional update 'setCrutch(c => ...)' if you only need 'crutch' in the 'setCrutch' call.",["1226"],"'showChangeWindow' is assigned a value but never used.","'showChangeWindowEnemy' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1227"],["1228"],"'pass' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'setlistPlayers'. Either include it or remove the dependency array. If 'setlistPlayers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1229"],"'personTeamInfo' is assigned a value but never used.","'getOneGame' is defined but never used.","'PopupPlayersChoose' is defined but never used.","React Hook useEffect has missing dependencies: 'apiKey' and 'dispatch'. Either include them or remove the dependency array.",["1230"],"'PhoneIcon' is defined but never used.","@typescript-eslint/no-redeclare","'TeamMembersElement' is already defined.","redeclared","React Hook useCallback has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["1231"],["1232"],"'useRef' is defined but never used.","'playerID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'playersNumb', 'teamNames', and 'teamNumbers'. Either include them or remove the dependency array.",["1233"],"'setActivePlayer' is defined but never used.","'click' is assigned a value but never used.",["1234"],"'style' is assigned a value but never used.","'setCount' is assigned a value but never used.","The ref value 'ref.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'ref.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'ref' and 'rootMargin'. Either include them or remove the dependency array.",["1235"],"React Hook useCallback has an unnecessary dependency: 'props'. Either exclude it or remove the dependency array.",["1236"],"React Hook useCallback has a missing dependency: 'showPass'. Either include it or remove the dependency array.",["1237"],["1238"],["1239"],["1219"],["1220"],"'icCrutch' is assigned a value but never used.","'tableUrl' is assigned a value but never used.",["1240"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1241"],["1242"],"'myPlayerObjForGame' is defined but never used.","'PlayerItem' is defined but never used.","'crutch1' is assigned a value but never used.","'setCrutch1' is assigned a value but never used.","'textMyeTeam' is assigned a value but never used.","'finalEnemyTeam' is assigned a value but never used.","'historyUpdate' is assigned a value but never used.",["1243"],"'team' is defined but never used.","React Hook useEffect has missing dependencies: 'enemyTeamTitle' and 'myTeamTitle'. Either include them or remove the dependency array.",["1244"],["1245"],["1246"],["1247"],["1248"],["1249"],["1250"],["1251"],["1252"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["1253"],["1254"],["1255"],["1256"],["1257"],"'changeClickedEnemyPlayers' is defined but never used.","'changeClickedMyPlayers' is defined but never used.","'setIndexOfClickedEnemyPlayer' is defined but never used.","'setChosenPlayer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1258","fix":"1259"},{"desc":"1260","fix":"1261"},{"desc":"1262","fix":"1263"},{"desc":"1264","fix":"1265"},{"desc":"1266","fix":"1267"},{"desc":"1268","fix":"1269"},{"desc":"1270","fix":"1271"},{"desc":"1270","fix":"1272"},{"desc":"1273","fix":"1274"},{"desc":"1275","fix":"1276"},{"desc":"1277","fix":"1278"},{"desc":"1279","fix":"1280"},{"desc":"1281","fix":"1282"},{"desc":"1281","fix":"1283"},{"desc":"1284","fix":"1285"},{"desc":"1286","fix":"1287"},{"desc":"1288","fix":"1289"},{"desc":"1290","fix":"1291"},{"desc":"1292","fix":"1293"},{"desc":"1260","fix":"1294"},{"desc":"1295","fix":"1296"},{"desc":"1297","fix":"1298"},{"desc":"1266","fix":"1299"},{"desc":"1300","fix":"1301"},{"desc":"1262","fix":"1302"},{"desc":"1264","fix":"1303"},{"desc":"1275","fix":"1304"},{"desc":"1273","fix":"1305"},{"desc":"1281","fix":"1306"},{"desc":"1281","fix":"1307"},{"desc":"1277","fix":"1308"},{"desc":"1279","fix":"1309"},{"desc":"1284","fix":"1310"},{"desc":"1286","fix":"1311"},{"desc":"1288","fix":"1312"},{"desc":"1290","fix":"1313"},{"desc":"1292","fix":"1314"},"Update the dependencies array to be: [crutch, gameHistory]",{"range":"1315","text":"1316"},"Update the dependencies array to be: [deleteAction, deletePlayerNumber, deleteSector, gameHistory, history]",{"range":"1317","text":"1318"},"Update the dependencies array to be: [chosenMyTeam, selectMyTeam, setMyFilterTeams]",{"range":"1319","text":"1320"},"Update the dependencies array to be: [chosenEnemyTeam, selectEnemyTeam, setEnemyFilterTeams]",{"range":"1321","text":"1322"},"Update the dependencies array to be: [crutch, dispatch]",{"range":"1323","text":"1324"},"Update the dependencies array to be: [crutch, historyUpdate]",{"range":"1325","text":"1326"},"Update the dependencies array to be: [dispatch]",{"range":"1327","text":"1328"},{"range":"1329","text":"1328"},"Update the dependencies array to be: [setlistPlayers]",{"range":"1330","text":"1331"},"Update the dependencies array to be: [apiKey, dispatch]",{"range":"1332","text":"1333"},"Update the dependencies array to be: [props, dispatch]",{"range":"1334","text":"1335"},"Update the dependencies array to be: [dispatch, props]",{"range":"1336","text":"1337"},"Update the dependencies array to be: [dispatch, playersNumb, teamNames, teamNumbers]",{"range":"1338","text":"1339"},{"range":"1340","text":"1339"},"Update the dependencies array to be: [ref, rootMargin]",{"range":"1341","text":"1342"},"Update the dependencies array to be: []",{"range":"1343","text":"1344"},"Update the dependencies array to be: [showPass]",{"range":"1345","text":"1346"},"Update the dependencies array to be: [field, pass, playerInfo, result, showPass]",{"range":"1347","text":"1348"},"Update the dependencies array to be: [field, pass, playerInfo, unResult, showPass]",{"range":"1349","text":"1350"},{"range":"1351","text":"1318"},"Update the dependencies array to be: [dispatch, selectMyTeam]",{"range":"1352","text":"1353"},"Update the dependencies array to be: [dispatch, selectEnemyTeam]",{"range":"1354","text":"1355"},{"range":"1356","text":"1324"},"Update the dependencies array to be: [enemyTeamTitle, isMyTeam, myTeamTitle]",{"range":"1357","text":"1358"},{"range":"1359","text":"1320"},{"range":"1360","text":"1322"},{"range":"1361","text":"1333"},{"range":"1362","text":"1331"},{"range":"1363","text":"1339"},{"range":"1364","text":"1339"},{"range":"1365","text":"1335"},{"range":"1366","text":"1337"},{"range":"1367","text":"1342"},{"range":"1368","text":"1344"},{"range":"1369","text":"1346"},{"range":"1370","text":"1348"},{"range":"1371","text":"1350"},[2821,2834],"[crutch, gameHistory]",[3204,3217],"[deleteAction, deletePlayerNumber, deleteSector, gameHistory, history]",[1770,1784],"[chosenMyTeam, selectMyTeam, setMyFilterTeams]",[1882,1899],"[chosenEnemyTeam, selectEnemyTeam, setEnemyFilterTeams]",[2295,2297],"[crutch, dispatch]",[2363,2378],"[crutch, historyUpdate]",[3089,3091],"[dispatch]",[3453,3455],[1996,1998],"[setlistPlayers]",[869,871],"[apiKey, dispatch]",[599,630],"[props, dispatch]",[760,762],"[dispatch, props]",[973,975],"[dispatch, playersNumb, teamNames, teamNumbers]",[956,958],[792,794],"[ref, rootMargin]",[2445,2452],"[]",[2638,2645],"[showPass]",[3572,3606],"[field, pass, playerInfo, result, showPass]",[3958,3994],"[field, pass, playerInfo, unResult, showPass]",[3110,3123],[1314,1328],"[dispatch, selectMyTeam]",[1421,1438],"[dispatch, selectEnemyTeam]",[2927,2929],[3054,3064],"[enemyTeamTitle, isMyTeam, myTeamTitle]",[1831,1845],[1943,1960],[929,931],[2009,2011],[972,974],[990,992],[599,630],[760,762],[792,794],[2445,2452],[2638,2645],[3572,3606],[3958,3994]]